linters: all_linters(
    # If "linters_with_defaults" is used then only these problems are reported:
    indentation_linter = indentation_linter(hanging_indent_style = "never"),
    line_length_linter = NULL, # Lines should not be more than 80 characters.
    object_length_linter = NULL, # Variable and function names should not be longer than 30 characters.
    object_name_linter = NULL, # Variable and function name style should match snake_case or symbols.
    # With "all_linters", these problems are also reported:
    expect_identical_linter = NULL, # Use expect_identical(x, y) by default; resort to expect_equal() only when needed, e.g. when setting ignore_attr= or tolerance=.
    extraction_operator_linter = NULL, # Use `[[` instead of `$` to extract an element.
    implicit_integer_linter = NULL, # Integers should not be implicit. Use the form 1L for integers or 1.0 for doubles.
    routine_registration_linter = NULL, # Register your native code routines with useDynLib and R_registerRoutines().
    todo_comment_linter = NULL, # TODO comments should be removed.
    undesirable_function_linter = NULL, # Function "library" is undesirable. As an alternative, use roxygen2's @importFrom statement in packages and `::` in scripts, instead of modifying the global search path.
    undesirable_operator_linter = NULL, # Operator `<<-` is undesirable. It assigns outside the current environment in a way that can be hard to reason about. Prefer fully-encapsulated functions wherever possible, or, if necessary, assign to a specific environment with assign(). Recall that you can create an environment at the desired scope with new.env().
    unused_import_linter = NULL # Package 'testthat' is attached but never used.
    ) # Closing paren must be indented, and no closing comma above!
encoding: "UTF-8"

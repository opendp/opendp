Search.setIndex({"docnames": ["api/index", "api/python/index", "api/python/opendp", "api/python/opendp.accuracy", "api/python/opendp.combinators", "api/python/opendp.context", "api/python/opendp.core", "api/python/opendp.domains", "api/python/opendp.extras", "api/python/opendp.extras.examples", "api/python/opendp.extras.mbi", "api/python/opendp.extras.numpy", "api/python/opendp.extras.numpy.canonical", "api/python/opendp.extras.polars", "api/python/opendp.extras.polars.contingency_table", "api/python/opendp.extras.sklearn", "api/python/opendp.extras.sklearn.decomposition", "api/python/opendp.extras.sklearn.linear_model", "api/python/opendp.measurements", "api/python/opendp.measures", "api/python/opendp.metrics", "api/python/opendp.mod", "api/python/opendp.prelude", "api/python/opendp.transformations", "api/python/opendp.typing", "api/user-guide/combinators/adaptive-composition", "api/user-guide/combinators/amplification", "api/user-guide/combinators/chaining", "api/user-guide/combinators/compositor-chaining-and-nesting", "api/user-guide/combinators/fully-adaptive-composition", "api/user-guide/combinators/index", "api/user-guide/combinators/measure-casting", "api/user-guide/combinators/non-adaptive-composition", "api/user-guide/combinators/privacy-filters", "api/user-guide/context/index", "api/user-guide/index", "api/user-guide/limitations", "api/user-guide/measurements/additive-noise-mechanisms", "api/user-guide/measurements/approximate-laplace-projection", "api/user-guide/measurements/canonical-noise-mechanism", "api/user-guide/measurements/index", "api/user-guide/measurements/noisy-max-mechanisms", "api/user-guide/measurements/randomized-response", "api/user-guide/measurements/thresholded-noise-mechanisms", "api/user-guide/plugins/context-api-plugins", "api/user-guide/plugins/index", "api/user-guide/plugins/measurement", "api/user-guide/plugins/selecting-grouping-columns", "api/user-guide/plugins/theil-sen-regression", "api/user-guide/plugins/transformation", "api/user-guide/polars/bounds", "api/user-guide/polars/data-types", "api/user-guide/polars/expressions/aggregation", "api/user-guide/polars/expressions/boolean", "api/user-guide/polars/expressions/columns", "api/user-guide/polars/expressions/index", "api/user-guide/polars/expressions/manipulation", "api/user-guide/polars/expressions/operators", "api/user-guide/polars/expressions/string", "api/user-guide/polars/expressions/temporal", "api/user-guide/polars/gaussian-noise", "api/user-guide/polars/index", "api/user-guide/polars/polars-vs-opendp", "api/user-guide/programming-framework/core-structures", "api/user-guide/programming-framework/index", "api/user-guide/programming-framework/supporting-elements", "api/user-guide/transformations/aggregation-mean", "api/user-guide/transformations/aggregation-quantile", "api/user-guide/transformations/aggregation-sum", "api/user-guide/transformations/index", "api/user-guide/transformations/preprocess-resize", "api/user-guide/utilities/index", "api/user-guide/utilities/parameter-search", "api/user-guide/utilities/serialization", "api/user-guide/utilities/typing", "contributing/cla", "contributing/contact", "contributing/contribution-process", "contributing/development-environment", "contributing/getting-involved", "contributing/index", "contributing/proof-initiation", "contributing/rust-initiation", "getting-started/examples/index", "getting-started/index", "getting-started/next-steps", "getting-started/quickstart", "getting-started/statistical-modeling/index", "getting-started/statistical-modeling/linear-regression", "getting-started/statistical-modeling/pca", "getting-started/statistical-modeling/synthetic-data", "getting-started/tabular-data/contingency-tables", "getting-started/tabular-data/essential-statistics", "getting-started/tabular-data/grouping", "getting-started/tabular-data/identifier-truncation", "getting-started/tabular-data/index", "getting-started/tabular-data/preparing-microdata", "getting-started/typical-workflow", "getting-started/utility", "index", "theory/a-framework-to-understand-dp", "theory/accuracy-pitfalls", "theory/attacks/differencing", "theory/attacks/index", "theory/attacks/membership", "theory/attacks/reconstruction", "theory/dp-with-opendp", "theory/index", "theory/mechanisms/exponential-mechanism-quantiles", "theory/mechanisms/index", "theory/resources"], "filenames": ["api/index.rst", "api/python/index.rst", "api/python/opendp.rst", "api/python/opendp.accuracy.rst", "api/python/opendp.combinators.rst", "api/python/opendp.context.rst", "api/python/opendp.core.rst", "api/python/opendp.domains.rst", "api/python/opendp.extras.rst", "api/python/opendp.extras.examples.rst", "api/python/opendp.extras.mbi.rst", "api/python/opendp.extras.numpy.rst", "api/python/opendp.extras.numpy.canonical.rst", "api/python/opendp.extras.polars.rst", "api/python/opendp.extras.polars.contingency_table.rst", "api/python/opendp.extras.sklearn.rst", "api/python/opendp.extras.sklearn.decomposition.rst", "api/python/opendp.extras.sklearn.linear_model.rst", "api/python/opendp.measurements.rst", "api/python/opendp.measures.rst", "api/python/opendp.metrics.rst", "api/python/opendp.mod.rst", "api/python/opendp.prelude.rst", "api/python/opendp.transformations.rst", "api/python/opendp.typing.rst", "api/user-guide/combinators/adaptive-composition.rst", "api/user-guide/combinators/amplification.rst", "api/user-guide/combinators/chaining.rst", "api/user-guide/combinators/compositor-chaining-and-nesting.rst", "api/user-guide/combinators/fully-adaptive-composition.rst", "api/user-guide/combinators/index.rst", "api/user-guide/combinators/measure-casting.rst", "api/user-guide/combinators/non-adaptive-composition.rst", "api/user-guide/combinators/privacy-filters.rst", "api/user-guide/context/index.rst", "api/user-guide/index.rst", "api/user-guide/limitations.rst", "api/user-guide/measurements/additive-noise-mechanisms.ipynb", "api/user-guide/measurements/approximate-laplace-projection.ipynb", "api/user-guide/measurements/canonical-noise-mechanism.ipynb", "api/user-guide/measurements/index.rst", "api/user-guide/measurements/noisy-max-mechanisms.ipynb", "api/user-guide/measurements/randomized-response.rst", "api/user-guide/measurements/thresholded-noise-mechanisms.ipynb", "api/user-guide/plugins/context-api-plugins.rst", "api/user-guide/plugins/index.rst", "api/user-guide/plugins/measurement.rst", "api/user-guide/plugins/selecting-grouping-columns.rst", "api/user-guide/plugins/theil-sen-regression.ipynb", "api/user-guide/plugins/transformation.rst", "api/user-guide/polars/bounds.rst", "api/user-guide/polars/data-types.ipynb", "api/user-guide/polars/expressions/aggregation.ipynb", "api/user-guide/polars/expressions/boolean.rst", "api/user-guide/polars/expressions/columns.ipynb", "api/user-guide/polars/expressions/index.rst", "api/user-guide/polars/expressions/manipulation.ipynb", "api/user-guide/polars/expressions/operators.ipynb", "api/user-guide/polars/expressions/string.ipynb", "api/user-guide/polars/expressions/temporal.ipynb", "api/user-guide/polars/gaussian-noise.rst", "api/user-guide/polars/index.rst", "api/user-guide/polars/polars-vs-opendp.rst", "api/user-guide/programming-framework/core-structures.rst", "api/user-guide/programming-framework/index.rst", "api/user-guide/programming-framework/supporting-elements.rst", "api/user-guide/transformations/aggregation-mean.rst", "api/user-guide/transformations/aggregation-quantile.ipynb", "api/user-guide/transformations/aggregation-sum.ipynb", "api/user-guide/transformations/index.rst", "api/user-guide/transformations/preprocess-resize.ipynb", "api/user-guide/utilities/index.rst", "api/user-guide/utilities/parameter-search.rst", "api/user-guide/utilities/serialization.rst", "api/user-guide/utilities/typing.rst", "contributing/cla.rst", "contributing/contact.rst", "contributing/contribution-process.rst", "contributing/development-environment.rst", "contributing/getting-involved.rst", "contributing/index.rst", "contributing/proof-initiation.rst", "contributing/rust-initiation.rst", "getting-started/examples/index.rst", "getting-started/index.rst", "getting-started/next-steps.rst", "getting-started/quickstart.rst", "getting-started/statistical-modeling/index.rst", "getting-started/statistical-modeling/linear-regression.rst", "getting-started/statistical-modeling/pca.rst", "getting-started/statistical-modeling/synthetic-data.rst", "getting-started/tabular-data/contingency-tables.rst", "getting-started/tabular-data/essential-statistics.rst", "getting-started/tabular-data/grouping.ipynb", "getting-started/tabular-data/identifier-truncation.rst", "getting-started/tabular-data/index.rst", "getting-started/tabular-data/preparing-microdata.rst", "getting-started/typical-workflow.rst", "getting-started/utility.rst", "index.rst", "theory/a-framework-to-understand-dp.ipynb", "theory/accuracy-pitfalls.ipynb", "theory/attacks/differencing.ipynb", "theory/attacks/index.rst", "theory/attacks/membership.ipynb", "theory/attacks/reconstruction.ipynb", "theory/dp-with-opendp.rst", "theory/index.rst", "theory/mechanisms/exponential-mechanism-quantiles.ipynb", "theory/mechanisms/index.rst", "theory/resources.rst"], "titles": ["API", "Python API Documentation", "opendp package", "opendp.accuracy module", "opendp.combinators module", "opendp.context module", "opendp.core module", "opendp.domains module", "opendp.extras package", "opendp.extras.examples package", "opendp.extras.mbi package", "opendp.extras.numpy package", "opendp.extras.numpy.canonical module", "opendp.extras.polars package", "opendp.extras.polars.contingency_table module", "opendp.extras.sklearn package", "opendp.extras.sklearn.decomposition package", "opendp.extras.sklearn.linear_model package", "opendp.measurements module", "opendp.measures module", "opendp.metrics module", "opendp.mod module", "opendp.prelude module", "opendp.transformations module", "opendp.typing module", "Adaptive Composition", "Amplification", "Chaining", "Compositor Chaining and Nesting", "Fully Adaptive Composition and Odometers", "Combinators", "Measure Casting", "(Non-Adaptive) Composition", "Privacy Filters", "Context", "API User Guide", "Limitations", "Additive Noise Mechanisms", "Approximate Laplace Projection", "Canonical Noise Mechanism", "Measurements", "Report Noisy Max Mechanisms", "Randomized Response", "Thresholded Noise Mechanisms", "Context API Plugins", "Plugins", "Measurement example", "Privately Selecting Grouping Columns", "Thiel-Sen Regression", "Transformation example", "Identifier Truncation and Bounds", "Data Types", "Aggregation", "Boolean", "Columns", "Expressions", "Manipulation", "Operators", "String", "Temporal", "Gaussian Noise", "Polars", "Polars vs. OpenDP", "Core Structures", "Programming Framework", "Supporting Elements", "Aggregation: Mean", "Aggregation: Quantile", "Aggregation: Sum", "Transformations", "Preprocessing: Resize", "Utilities", "Parameter Search", "Serialization", "Typing", "Contributor License Agreement", "Contact", "Contribution Process", "Development Environment", "Getting Involved", "Contributing", "OpenDP Proof Initiation", "OpenDP Rust Initiation", "More Examples", "Getting Started", "Next Steps", "Quickstart", "Statistical Modeling", "Linear Regression", "Differentially Private PCA", "Synthetic Data", "Contingency Tables", "Essential Statistics", "Grouping", "Identifier Truncation", "Working with Tabular Data", "Preparing Microdata", "Typical Workflow", "Assessing Utility", "Welcome", "A Framework to Understand DP", "Accuracy: Pitfalls and Edge Cases", "Differencing Attack", "Attacks", "Membership", "Reconstruction", "Differential Privacy with OpenDP", "Theory", "Exponential Mechanism Quantiles", "Mechanisms", "Resources List"], "terms": {"content": [0, 3, 4, 5, 6, 7, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 44, 45, 46, 47, 49, 50, 53, 55, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 103, 106, 107, 109, 110], "If": [0, 3, 4, 5, 7, 10, 13, 16, 17, 18, 21, 23, 24, 26, 37, 38, 39, 40, 41, 45, 47, 48, 56, 61, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 91, 92, 93, 94, 95, 99, 100, 101, 104, 105, 106], "you": [0, 3, 4, 13, 17, 19, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 85, 86, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 106], "re": [0, 17, 52, 63, 64, 67, 78, 82, 85, 92, 93, 99, 100, 102, 105, 106], "new": [0, 4, 5, 7, 17, 20, 21, 25, 27, 30, 47, 48, 56, 67, 73, 78, 79, 81, 82, 86, 92, 94, 96, 99, 100, 102, 104, 105, 106, 108], "opendp": [0, 1, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 108, 110], "pleas": [0, 32, 36, 37, 38, 41, 42, 43, 61, 66, 67, 68, 73, 75, 77, 79, 80, 82, 85, 89, 92, 106], "go": [0, 29, 52, 81, 93, 106], "back": [0, 51, 71, 77, 82, 93], "get": [0, 3, 6, 7, 19, 20, 21, 22, 24, 26, 28, 39, 48, 51, 52, 56, 61, 64, 65, 67, 70, 77, 80, 81, 82, 86, 90, 91, 92, 93, 96, 99, 100, 101, 102, 107, 108], "start": [0, 5, 10, 13, 18, 22, 34, 39, 42, 48, 52, 54, 61, 67, 69, 72, 77, 78, 79, 80, 81, 82, 86, 90, 91, 92, 99, 102, 106, 107], "interest": [0, 5, 17, 32, 37, 38, 41, 42, 43, 50, 64, 66, 67, 68, 70, 75, 78, 80, 85, 89, 92, 95, 96, 100, 102, 106], "theori": [0, 84, 98, 99], "behind": [0, 4, 62, 64, 106], "differenti": [0, 4, 6, 9, 12, 13, 16, 18, 19, 21, 23, 25, 28, 35, 36, 38, 40, 41, 45, 48, 51, 55, 60, 62, 63, 64, 65, 67, 69, 70, 72, 78, 84, 87, 90, 92, 93, 95, 96, 97, 100, 101, 103, 107, 108], "privaci": [0, 4, 5, 6, 9, 10, 12, 13, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 55, 56, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 77, 78, 81, 82, 84, 87, 90, 91, 92, 93, 94, 95, 96, 98, 103, 107], "how": [0, 3, 4, 5, 10, 13, 17, 18, 21, 23, 27, 32, 36, 38, 39, 43, 47, 48, 52, 60, 62, 65, 68, 70, 72, 77, 78, 81, 85, 86, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 110], "implement": [0, 10, 16, 17, 18, 19, 21, 36, 39, 41, 43, 45, 58, 64, 68, 69, 79, 81, 82, 86, 92, 99, 104], "feel": [0, 24, 36, 79, 82], "free": [0, 71, 72, 78, 79, 82], "jump": 0, "ahead": [0, 33, 93], "document": [0, 3, 4, 5, 6, 7, 13, 17, 18, 19, 20, 23, 24, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 72, 77, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 98, 99, 106], "entri": [0, 18, 23, 41, 45, 77, 105, 106], "point": [0, 10, 17, 18, 21, 25, 27, 28, 35, 36, 48, 56, 69, 70, 72, 78, 81, 89, 92, 93, 97, 100, 104, 105, 106, 109, 110], "user": [0, 3, 4, 5, 6, 7, 13, 16, 18, 19, 20, 21, 23, 24, 37, 42, 43, 45, 46, 47, 49, 50, 52, 55, 64, 65, 73, 77, 78, 82, 83, 85, 90, 91, 94, 95, 96, 97, 99, 100, 106], "guid": [0, 3, 4, 5, 6, 7, 13, 18, 19, 20, 23, 24, 37, 43, 55, 74, 80, 82, 83, 85, 94, 95, 96, 106], "python": [0, 4, 5, 8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 44, 45, 46, 47, 49, 50, 51, 60, 62, 65, 66, 69, 72, 73, 74, 79, 81, 82, 84, 86, 89, 91, 92, 94, 95, 96, 97, 98, 99, 106], "refer": [0, 6, 17, 18, 22, 30, 34, 35, 40, 48, 51, 55, 63, 65, 69, 74, 81, 82, 84, 88, 92, 93, 95, 97, 98, 99, 100, 104, 106], "r": [0, 8, 25, 28, 29, 30, 32, 33, 35, 47, 56, 58, 59, 81, 82, 84, 86, 91, 95, 97, 99, 100, 105], "rust": [0, 3, 4, 5, 6, 7, 8, 18, 19, 20, 21, 23, 24, 35, 36, 45, 51, 69, 74, 79, 80, 81, 84, 86, 91, 95, 99], "packag": [1, 3, 4, 6, 7, 18, 19, 20, 21, 23, 78, 86, 91, 95, 106], "subpackag": 1, "extra": [1, 2, 39, 55, 62, 64, 81, 88, 90, 91, 101], "submodul": [1, 8, 15, 22], "accuraci": [1, 2, 10, 13, 17, 21, 22, 23, 40, 48, 60, 70, 72, 91, 92, 93, 97, 105, 107], "modul": [1, 51, 58, 71, 74, 78, 79, 82, 86, 106], "combin": [1, 2, 10, 13, 22, 26, 27, 28, 31, 33, 35, 39, 47, 48, 63, 65, 69, 85, 89, 91, 93, 102], "context": [1, 2, 3, 4, 6, 7, 10, 13, 18, 19, 20, 21, 22, 23, 24, 35, 39, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 74, 75, 78, 81, 83, 86, 90, 91, 92, 93, 94, 96, 97, 100, 102], "core": [1, 2, 3, 4, 7, 18, 19, 20, 21, 23, 40, 65, 79, 82, 99], "domain": [1, 2, 4, 5, 6, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 38, 40, 42, 43, 44, 45, 47, 50, 51, 53, 56, 60, 63, 64, 66, 67, 69, 70, 73, 74, 82, 86, 92, 93, 95, 97, 100, 106], "measur": [1, 2, 3, 4, 5, 6, 10, 12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 47, 64, 68, 69, 70, 72, 73, 74, 78, 81, 86, 89, 91, 92, 97, 100, 101, 106, 108], "metric": [1, 2, 4, 5, 6, 16, 18, 19, 21, 22, 23, 24, 25, 27, 30, 32, 37, 40, 41, 42, 43, 44, 45, 60, 63, 64, 67, 68, 74, 81, 82, 86, 100, 106], "mod": [1, 2, 5, 22, 24, 27, 28, 33, 65, 72, 81, 82], "prelud": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 32, 34, 35, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 74, 82, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 102, 104, 105, 106, 108], "transform": [1, 2, 4, 5, 6, 7, 10, 13, 21, 22, 27, 28, 30, 35, 36, 44, 45, 47, 52, 55, 56, 64, 65, 66, 67, 68, 70, 71, 72, 74, 78, 81, 90, 91, 100, 108], "type": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 27, 37, 40, 43, 46, 47, 52, 53, 56, 58, 61, 62, 65, 67, 68, 69, 70, 71, 72, 73, 78, 79, 81, 82, 90, 92, 100, 102, 106], "exampl": [2, 3, 4, 5, 7, 8, 10, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 33, 38, 39, 40, 41, 43, 44, 47, 48, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 72, 74, 77, 78, 79, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 107, 108, 110], "mbi": [2, 8, 78, 90, 91], "numpi": [2, 4, 8, 18, 37, 39, 42, 48, 67, 70, 74, 89, 100, 101, 102, 104, 105, 108], "polar": [2, 3, 5, 7, 8, 10, 18, 21, 23, 35, 39, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 73, 78, 83, 85, 87, 90, 91, 92, 93, 94, 95, 96, 101, 102], "sklearn": [2, 8, 88, 89], "accuracy_to_discrete_gaussian_scal": [2, 3], "accuracy_to_discrete_laplacian_scal": [2, 3], "accuracy_to_gaussian_scal": [2, 3, 40, 98], "accuracy_to_laplacian_scal": [2, 3, 21, 40, 98], "discrete_gaussian_scale_to_accuraci": [2, 3], "discrete_laplacian_scale_to_accuraci": [2, 3, 97], "gaussian_scale_to_accuraci": [2, 3, 10, 40, 91, 98], "laplacian_scale_to_accuraci": [2, 3, 40, 98, 101], "summarize_polars_measur": [2, 3], "make_adaptive_composit": [2, 4, 21, 25, 28, 30, 97], "make_approxim": [2, 4, 28, 31], "make_basic_composit": [2, 4], "make_chain_mt": [2, 4, 27, 30], "make_chain_pm": [2, 4, 27, 30], "make_chain_tt": [2, 4, 27, 30], "make_composit": [2, 4, 22, 30, 32, 33, 48, 66, 67], "make_fix_delta": [2, 4, 21, 28, 31, 43, 105], "make_fixed_approxdp_to_approxdp": [2, 4, 31], "make_fully_adaptive_composit": [2, 4, 21, 29, 30, 33], "make_population_amplif": [2, 4, 26], "make_privacy_filt": [2, 4, 33], "make_puredp_to_zcdp": [2, 4, 31], "make_select_private_candid": [2, 4], "make_sequential_composit": [2, 4], "make_zcdp_to_approxdp": [2, 4, 21, 28, 31, 43, 105], "then_adaptive_composit": [2, 4, 28], "then_fully_adaptive_composit": [2, 4], "then_sequential_composit": [2, 4], "account": [2, 5, 6, 10, 26, 37, 43, 44, 50, 56, 62, 68, 69, 70, 79, 92, 93, 97, 100, 106, 108], "compositor": [2, 4, 5, 10, 13, 21, 25, 30, 32, 34, 39, 44, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 65, 67, 73, 89, 90, 91, 92, 93, 94, 95, 96, 97, 102], "current_privacy_loss": [2, 5], "deserialize_polars_plan": [2, 5, 73], "queri": [2, 3, 4, 5, 6, 10, 12, 13, 14, 21, 25, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 44, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 65, 67, 68, 69, 70, 72, 73, 76, 78, 85, 90, 91, 92, 93, 94, 95, 96, 102, 104, 105, 108], "queryabl": [2, 4, 5, 6, 13, 18, 21, 25, 28, 29, 33, 38, 97], "remaining_privacy_loss": [2, 5], "partialchain": [2, 5], "fix": [2, 4, 5, 8, 10, 13, 19, 21, 31, 37, 43, 68, 69, 70, 72, 77, 81, 90, 91, 93, 95, 100, 103, 106], "partial": [2, 4, 5, 18, 23, 78], "wrap": [2, 5, 21, 26, 34, 82], "new_with": [2, 5], "param": [2, 5, 43, 97, 104, 105], "releas": [2, 3, 4, 5, 6, 10, 13, 14, 16, 18, 21, 25, 27, 28, 30, 34, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 73, 77, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 110], "resolv": [2, 5, 13, 68, 73, 96, 102], "domain_of": [2, 5], "loss_of": [2, 5, 10, 13, 21, 34, 39, 44, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 67, 73, 90, 91, 92, 93, 94, 95, 96, 97, 102], "metric_of": [2, 5], "regist": [2, 5, 13, 44], "space_of": [2, 5, 21], "unit_of": [2, 5, 10, 13, 34, 39, 44, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 67, 73, 90, 91, 92, 93, 94, 95, 96, 97, 102], "function_ev": [2, 6], "measurement_check": [2, 6], "measurement_funct": [2, 6], "measurement_input_carrier_typ": [2, 6], "measurement_input_distance_typ": [2, 6], "measurement_input_domain": [2, 6], "measurement_input_metr": [2, 6], "measurement_invok": [2, 6], "measurement_map": [2, 6], "measurement_output_distance_typ": [2, 6], "measurement_output_measur": [2, 6], "new_funct": [2, 6, 45], "new_query": [2, 6, 21], "odometer_input_carrier_typ": [2, 6], "odometer_input_domain": [2, 6], "odometer_input_metr": [2, 6], "odometer_invok": [2, 6], "odometer_output_measur": [2, 6], "odometer_queryable_invok": [2, 6], "odometer_queryable_invoke_typ": [2, 6], "odometer_queryable_privacy_loss": [2, 6], "odometer_queryable_privacy_loss_typ": [2, 6], "queryable_ev": [2, 6], "queryable_query_typ": [2, 6], "transformation_check": [2, 6], "transformation_funct": [2, 6], "transformation_input_carrier_typ": [2, 6], "transformation_input_distance_typ": [2, 6], "transformation_input_domain": [2, 6], "transformation_input_metr": [2, 6], "transformation_invok": [2, 6], "transformation_map": [2, 6], "transformation_output_distance_typ": [2, 6], "transformation_output_domain": [2, 6], "transformation_output_metr": [2, 6], "array_domain": [2, 7], "atom_domain": [2, 3, 4, 5, 7, 18, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 65, 66, 67, 68, 69, 70, 72, 73, 74, 82, 86, 97, 104, 105, 106, 108], "bitvector_domain": [2, 7, 18, 42], "categorical_domain": [2, 7], "datetime_domain": [2, 7], "domain_carrier_typ": [2, 7], "domain_debug": [2, 7], "domain_typ": [2, 7], "enum_domain": [2, 7], "lazyframe_domain": [2, 3, 7, 18, 21], "map_domain": [2, 7, 38, 43], "option_domain": [2, 7, 21, 23], "series_domain": [2, 3, 7, 18, 21], "user_domain": [2, 5, 7, 45, 47, 73], "vector_domain": [2, 5, 7, 18, 21, 23, 25, 26, 27, 28, 29, 32, 33, 37, 41, 46, 47, 48, 49, 65, 66, 67, 68, 69, 70, 72, 73, 82, 97, 104, 105, 106, 108], "wild_expr_domain": [2, 7], "with_margin": [2, 3, 7, 18], "debias_randomized_response_bitvec": [2, 18, 42], "make_alp_query": [2, 18, 38, 40], "make_canonical_nois": [2, 12, 18, 40], "make_gaussian": [2, 18, 37, 40, 69, 72, 98], "make_gaussian_threshold": [2, 18, 40, 43], "make_geometr": [2, 18, 40], "make_laplac": [2, 18, 21, 27, 37, 40, 69, 98, 106], "make_laplace_threshold": [2, 18, 40, 43, 69, 98], "make_nois": [2, 18], "make_noise_threshold": [2, 18], "make_noisy_max": [2, 18, 40, 41, 108], "make_noisy_top_k": [2, 18, 40, 41], "make_private_expr": [2, 18], "make_private_lazyfram": [2, 3, 13, 18], "make_private_quantil": [2, 18, 67], "make_randomized_respons": [2, 18, 40, 42], "make_randomized_response_bitvec": [2, 18, 40, 42], "make_randomized_response_bool": [2, 18, 21, 40, 42], "make_report_noisy_max_gumbel": [2, 18], "make_user_measur": [2, 18, 44, 45, 46], "then_alp_query": [2, 18], "then_canonical_nois": [2, 18, 39], "then_gaussian": [2, 18, 21, 28, 31, 72, 105], "then_gaussian_threshold": [2, 18], "then_geometr": [2, 18], "then_laplac": [2, 18, 21, 22, 25, 26, 28, 29, 31, 32, 33, 49, 66, 67, 70, 86, 97, 101, 104, 106], "then_laplace_threshold": [2, 18], "then_nois": [2, 18], "then_noise_threshold": [2, 18], "then_noisy_max": [2, 18, 47, 108], "then_noisy_top_k": [2, 18], "then_private_expr": [2, 18], "then_private_lazyfram": [2, 18], "then_private_quantil": [2, 18, 48, 108], "then_randomized_response_bitvec": [2, 18], "then_report_noisy_max_gumbel": [2, 18], "then_user_measur": [2, 4, 18], "approxim": [2, 4, 5, 10, 12, 13, 18, 19, 23, 25, 28, 31, 43, 60, 65, 67, 91, 100, 101, 105, 108], "fixed_smoothed_max_diverg": [2, 19], "max_diverg": [2, 3, 4, 17, 18, 19, 25, 28, 29, 33, 41, 44, 46, 47, 48, 67, 97, 106, 108], "measure_debug": [2, 19], "measure_distance_typ": [2, 19], "measure_typ": [2, 19], "new_privacy_profil": [2, 19, 21, 45], "renyi_diverg": [2, 19], "smoothed_max_diverg": [2, 19], "user_diverg": [2, 19, 45], "zero_concentrated_diverg": [2, 19, 28, 41, 108], "absolute_dist": [2, 4, 18, 20, 21, 31, 37, 38, 39, 43, 44, 46, 72, 81, 86, 106], "change_one_dist": [2, 20], "change_one_id_dist": [2, 20], "discrete_dist": [2, 18, 20, 42], "frame_dist": [2, 20], "hamming_dist": [2, 20], "insert_delete_dist": [2, 20, 68], "l01inf_dist": [2, 20, 38, 43], "l02inf_dist": [2, 20, 43], "l1_distanc": [2, 18, 20, 37, 104], "l2_distanc": [2, 18, 20, 37], "linf_dist": [2, 18, 20, 41, 47, 108], "metric_debug": [2, 20], "metric_distance_typ": [2, 20], "metric_typ": [2, 20], "symmetric_dist": [2, 3, 5, 16, 18, 20, 21, 25, 26, 27, 28, 29, 32, 33, 46, 47, 48, 49, 65, 66, 67, 68, 69, 70, 72, 82, 97, 104, 105, 106, 108], "symmetric_id_dist": [2, 20], "user_dist": [2, 20, 45], "approximatediverg": [2, 19, 21], "inner_measur": [2, 21], "atomdomain": [2, 5, 7, 18, 21, 23, 27, 32, 37, 40, 42, 43, 65, 68, 69, 74, 82, 86, 106], "bound": [2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 33, 38, 40, 51, 56, 61, 63, 64, 65, 66, 67, 68, 70, 72, 74, 81, 82, 89, 91, 92, 94, 95, 96, 97, 100, 101, 104, 105, 106], "nan": [2, 4, 7, 11, 18, 19, 21, 23, 26, 31, 37, 39, 41, 43, 47, 51, 53, 65, 69, 70, 72, 86, 92, 97, 104, 106, 108], "changeoneiddist": [2, 20, 21], "identifi": [2, 5, 7, 13, 20, 21, 61, 64, 69, 79, 81, 84, 91, 95, 104, 105], "carrier_typ": [2, 21], "cast": [2, 4, 13, 21, 23, 30, 40, 50, 54, 58, 67, 74, 82, 92, 93, 94, 96, 101, 102], "member": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 47, 63, 65, 66, 74, 82, 104, 105, 106], "extrinsicdomain": [2, 5, 21], "descriptor": [2, 5, 7, 13, 19, 20, 21, 24, 51, 52, 53, 56, 60, 65, 70, 74, 92, 93, 96], "framedist": [2, 10, 21], "inner_metr": [2, 20, 21], "function": [2, 3, 4, 5, 6, 7, 10, 13, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 32, 37, 40, 42, 43, 44, 46, 47, 48, 49, 53, 59, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 78, 82, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101, 104, 105, 106], "lazyframedomain": [2, 7, 10, 18, 21, 23], "column": [2, 3, 5, 7, 9, 10, 11, 13, 18, 21, 23, 39, 45, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 70, 90, 91, 92, 93, 94, 95, 101, 104, 105], "get_margin": [2, 21], "get_series_domain": [2, 21], "distance_typ": [2, 21], "check": [2, 6, 7, 21, 23, 24, 26, 27, 29, 44, 56, 65, 66, 68, 69, 72, 77, 78, 79, 82, 105, 106], "input_carrier_typ": [2, 21], "input_distance_typ": [2, 21], "input_domain": [2, 4, 5, 10, 16, 18, 21, 23, 25, 27, 28, 29, 32, 33, 37, 38, 41, 44, 46, 47, 48, 49, 63, 65, 66, 68, 70, 82, 97, 98, 104, 106], "input_metr": [2, 4, 5, 10, 16, 18, 21, 23, 25, 28, 29, 32, 33, 37, 38, 41, 44, 46, 47, 48, 49, 63, 65, 68, 70, 82, 97, 98, 106], "input_spac": [2, 18, 21, 25, 26, 28, 29, 31, 32, 33, 37, 43, 66, 67, 68, 70, 72, 105, 108], "invok": [2, 4, 6, 19, 21, 25, 27, 28, 29, 33, 37, 42, 43, 63, 65, 82, 86, 106], "map": [2, 4, 6, 10, 13, 18, 19, 21, 23, 25, 27, 28, 31, 32, 37, 38, 41, 42, 43, 46, 47, 48, 49, 63, 64, 66, 68, 69, 70, 72, 81, 82, 97, 101, 104, 105, 106, 108], "output_distance_typ": [2, 21], "output_measur": [2, 4, 5, 10, 17, 18, 21, 25, 28, 29, 32, 33, 41, 44, 46, 48, 63, 65, 82, 97, 106], "odomet": [2, 4, 5, 6, 21, 30, 33], "odometerquery": [2, 4, 5, 21], "privacy_loss": [2, 5, 10, 13, 21, 29, 33, 34, 39, 44, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 67, 73, 90, 91, 92, 93, 94, 95, 96, 97, 102], "opendpexcept": [2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 23, 27, 28, 33, 51, 58], "raw_traceback": [2, 21], "optiondomain": [2, 5, 7, 21, 23, 69], "element_domain": [2, 7, 21], "privacyprofil": [2, 19, 21], "delta": [2, 4, 5, 10, 19, 21, 23, 28, 31, 37, 39, 40, 42, 43, 50, 51, 56, 57, 58, 59, 60, 63, 65, 90, 91, 93, 94, 96, 100, 104, 105, 106], "epsilon": [2, 5, 13, 16, 18, 19, 21, 26, 27, 31, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 70, 73, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 108], "seriesdomain": [2, 7, 21], "name": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 35, 38, 54, 62, 69, 70, 74, 77, 78, 81, 82, 100, 101, 102, 105, 106], "nullabl": [2, 18, 21], "symmetriciddist": [2, 20, 21], "output_domain": [2, 21, 23, 27, 47, 48, 49, 63, 65, 68, 82, 100], "output_metr": [2, 21, 23, 27, 47, 48, 49, 63, 65, 68, 69, 82], "output_spac": [2, 21, 67], "unknowntypeexcept": [2, 3, 4, 6, 7, 18, 19, 20, 21, 23, 24], "vectordomain": [2, 5, 7, 18, 21, 23, 32, 40, 65, 68, 69, 82], "size": [2, 4, 7, 9, 11, 12, 13, 16, 18, 21, 23, 26, 38, 39, 42, 47, 48, 56, 65, 67, 69, 72, 82, 83, 89, 91, 92, 93, 96, 97, 100, 101, 104, 105, 108], "assert_featur": [2, 21, 47], "binary_search": [2, 21, 72, 105], "binary_search_chain": [2, 21, 38, 67, 70, 72, 97], "binary_search_param": [2, 21, 28, 72, 101, 104], "deseri": [2, 21, 73], "disable_featur": [2, 21], "enable_featur": [2, 3, 4, 10, 17, 18, 19, 21, 22, 26, 27, 32, 35, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 82, 86, 89, 90, 91, 92, 93, 94, 96, 97, 101, 102, 104, 105, 106, 108], "exponential_bounds_search": [2, 21, 72], "serial": [2, 5, 21, 71], "choose_branching_factor": [2, 23, 67], "make_b_ary_tre": [2, 23, 69], "make_bounded_float_checked_sum": [2, 23, 68, 69], "make_bounded_float_ordered_sum": [2, 23, 69], "make_bounded_int_monotonic_sum": [2, 23, 69], "make_bounded_int_ordered_sum": [2, 23, 68, 69], "make_bounded_int_split_sum": [2, 23, 69], "make_cast": [2, 23, 27, 69], "make_cast_default": [2, 23, 67, 69, 82], "make_cast_inher": [2, 23, 69], "make_cdf": [2, 23], "make_clamp": [2, 23, 27, 65, 69, 97, 106], "make_consistent_b_ary_tre": [2, 23, 67, 69], "make_count": [2, 23, 69, 97], "make_count_bi": [2, 23, 69], "make_count_by_categori": [2, 21, 23, 69], "make_count_distinct": [2, 23, 69], "make_create_datafram": [2, 23], "make_df_cast_default": [2, 23], "make_df_is_equ": [2, 23], "make_drop_nul": [2, 23, 67, 69], "make_find": [2, 23, 69], "make_find_bin": [2, 23, 69], "make_ident": [2, 23], "make_impute_const": [2, 23, 27, 69, 97], "make_impute_uniform_float": [2, 23, 69], "make_index": [2, 23, 69], "make_is_equ": [2, 23, 69], "make_is_nul": [2, 23, 69], "make_lipschitz_float_mul": [2, 23], "make_mean": [2, 21, 23, 66, 69, 72, 104], "make_metric_bound": [2, 23, 69], "make_metric_unbound": [2, 23, 69], "make_ordered_random": [2, 23, 69], "make_quantile_score_candid": [2, 23, 108], "make_quantiles_from_count": [2, 23, 67, 69], "make_res": [2, 23, 27, 69], "make_select_column": [2, 23, 48, 101], "make_sized_bounded_float_checked_sum": [2, 23, 68, 69], "make_sized_bounded_float_ordered_sum": [2, 23, 69], "make_sized_bounded_int_checked_sum": [2, 23, 68, 69], "make_sized_bounded_int_monotonic_sum": [2, 23, 69], "make_sized_bounded_int_ordered_sum": [2, 23, 69], "make_sized_bounded_int_split_sum": [2, 23, 69], "make_split_datafram": [2, 23, 101], "make_split_lin": [2, 21, 23], "make_split_record": [2, 23], "make_stable_expr": [2, 23], "make_stable_lazyfram": [2, 23], "make_subset_bi": [2, 23], "make_sum": [2, 21, 23, 27, 65, 66, 68, 69, 72, 106], "make_sum_of_squared_devi": [2, 23], "make_unord": [2, 23, 69], "make_user_transform": [2, 23, 45, 47, 48, 49], "make_vari": [2, 23, 69], "then_b_ary_tre": [2, 23, 67], "then_cast": [2, 23, 101], "then_cast_default": [2, 21, 23, 28, 49], "then_cast_inher": [2, 23], "then_clamp": [2, 21, 23, 25, 28, 29, 32, 33, 49, 66, 70, 97, 101, 106], "then_count": [2, 21, 23, 25, 28, 29, 32, 33, 66, 70, 105], "then_count_bi": [2, 23], "then_count_by_categori": [2, 23, 67], "then_count_distinct": [2, 23], "then_df_cast_default": [2, 23], "then_df_is_equ": [2, 23], "then_drop_nul": [2, 23, 48, 67], "then_find": [2, 23, 69], "then_find_bin": [2, 23, 67], "then_ident": [2, 23], "then_impute_const": [2, 21, 23, 66, 69, 70, 101], "then_impute_uniform_float": [2, 23], "then_index": [2, 23, 67], "then_is_equ": [2, 23], "then_is_nul": [2, 23], "then_lipschitz_float_mul": [2, 23], "then_mean": [2, 21, 23, 26, 66, 70, 97, 101], "then_metric_bound": [2, 23], "then_metric_unbound": [2, 23], "then_ordered_random": [2, 23], "then_quantile_score_candid": [2, 23, 108], "then_res": [2, 21, 23, 66, 70, 97, 101], "then_stable_expr": [2, 23], "then_stable_lazyfram": [2, 23], "then_sum": [2, 21, 22, 23, 25, 28, 29, 32, 33, 46, 49, 66, 68, 70, 106], "then_sum_of_squared_devi": [2, 23], "then_unord": [2, 23], "then_vari": [2, 23], "carrier": [2, 5, 6, 7, 18, 21, 23, 24, 82], "runtimetyp": [2, 11, 24], "arg": [2, 5, 6, 21, 24, 25, 28, 29, 32, 33, 49, 82, 86, 97], "infer": [2, 5, 10, 12, 21, 23, 24, 39, 42, 43, 56, 58, 81, 90, 91, 102, 104], "origin": [2, 9, 10, 11, 21, 23, 24, 65, 70, 72, 93, 99], "pars": [2, 3, 4, 6, 7, 13, 18, 19, 20, 23, 24, 51, 55, 56, 57, 58, 59, 62, 93, 96], "parse_or_inf": [2, 24], "sensitivitymetr": [2, 24], "get_atom": [2, 24], "get_atom_or_inf": [2, 24], "get_carrier_typ": [2, 24], "get_distance_typ": [2, 24], "get_first": [2, 24], "get_typ": [2, 24], "get_value_typ": [2, 24], "pass_through": [2, 24], "set_default_float_typ": [2, 24, 74], "set_default_int_typ": [2, 24, 74], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110], "provid": [3, 4, 5, 6, 7, 13, 18, 19, 20, 21, 22, 23, 24, 27, 28, 35, 39, 42, 45, 64, 65, 67, 69, 72, 81, 82, 87, 89, 92, 93, 97, 98, 100, 101, 104, 105, 106, 110], "convert": [3, 18, 23, 28, 31, 33, 37, 40, 42, 43, 65, 69, 70, 98, 101], "between": [3, 4, 5, 6, 10, 18, 19, 20, 21, 23, 24, 25, 27, 36, 37, 39, 41, 43, 48, 51, 56, 60, 63, 64, 65, 68, 69, 73, 74, 81, 82, 90, 91, 92, 93, 96, 97, 98, 99, 105, 106, 108], "scale": [3, 10, 13, 14, 16, 17, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 41, 43, 47, 48, 50, 52, 56, 60, 62, 64, 67, 68, 70, 72, 86, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 108], "paramet": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 28, 31, 33, 37, 38, 40, 41, 42, 43, 48, 56, 65, 66, 70, 71, 74, 81, 92, 93, 94, 95, 100, 102, 105, 108], "For": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 37, 39, 43, 55, 56, 58, 60, 62, 65, 68, 69, 70, 73, 74, 77, 78, 81, 82, 84, 85, 91, 92, 93, 95, 96, 99, 100, 101, 104, 107, 110], "more": [3, 4, 5, 6, 7, 10, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 33, 34, 37, 38, 39, 40, 43, 47, 50, 52, 55, 56, 60, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 78, 79, 81, 82, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108], "see": [3, 4, 5, 6, 7, 10, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 33, 34, 35, 36, 39, 40, 48, 55, 56, 63, 64, 65, 69, 70, 74, 78, 82, 84, 85, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107], "conveni": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 70, 73, 74, 82, 89], "all": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 32, 36, 37, 38, 39, 41, 42, 43, 47, 51, 52, 53, 56, 57, 63, 64, 65, 67, 68, 69, 70, 72, 74, 78, 79, 82, 86, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 108], "thi": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108], "also": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 47, 48, 50, 51, 52, 55, 56, 58, 62, 63, 64, 65, 68, 69, 72, 73, 74, 77, 78, 79, 81, 82, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106], "avail": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 34, 35, 40, 63, 69, 78, 82, 86, 91, 97], "from": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 56, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 77, 78, 79, 81, 82, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 110], "we": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108], "suggest": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 78, 79, 101], "import": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 78, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108], "under": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 28, 37, 39, 41, 43, 47, 50, 55, 60, 70, 92, 94, 97, 106], "convent": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 44, 70, 77, 82], "dp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 82, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110], "alpha": [3, 5, 12, 13, 18, 19, 21, 23, 38, 39, 48, 51, 60, 67, 91, 92, 93, 97, 98, 100, 101, 104, 108], "t": [3, 4, 5, 7, 10, 11, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 78, 81, 82, 86, 89, 91, 92, 93, 96, 97, 100, 101, 102, 104, 105, 106, 108], "none": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 48, 56, 70, 86, 89, 102, 104, 105], "sourc": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 48, 50, 67, 78, 82, 86, 90, 97], "desir": [3, 64, 92], "toler": 3, "discret": [3, 18, 21, 27, 37, 39, 40, 41, 42, 43, 108], "gaussian": [3, 10, 13, 18, 21, 39, 41, 61, 91, 97, 98, 101, 105, 108], "nois": [3, 10, 12, 13, 14, 17, 18, 21, 23, 34, 38, 41, 48, 50, 52, 56, 61, 64, 67, 69, 70, 72, 78, 86, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 110], "statist": [3, 9, 12, 13, 39, 47, 50, 52, 56, 60, 62, 67, 69, 70, 84, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 110], "signific": [3, 12, 13, 39, 41, 50, 78, 79, 92, 98, 104, 110], "level": [3, 12, 13, 21, 28, 34, 39, 40, 42, 43, 50, 56, 64, 65, 67, 69, 82, 86, 89, 92, 93, 97, 98, 99, 100, 101, 102], "proof": [3, 4, 18, 19, 23, 32, 37, 38, 41, 42, 43, 65, 66, 67, 68, 77, 78, 80, 82, 89, 106], "definit": [3, 4, 13, 18, 19, 20, 23, 41, 60, 63, 64, 65, 81, 82, 86, 95, 99], "A": [3, 4, 5, 6, 7, 9, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 38, 39, 42, 44, 47, 51, 52, 54, 63, 64, 65, 67, 68, 69, 74, 77, 78, 81, 82, 89, 91, 92, 95, 97, 99, 102, 104, 105, 106, 107, 110], "far": [3, 21, 37, 68], "valu": [3, 4, 6, 7, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 37, 38, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 56, 63, 64, 65, 68, 69, 72, 78, 81, 82, 86, 92, 93, 97, 98, 100, 101, 104, 105], "mai": [3, 4, 5, 7, 10, 13, 21, 23, 24, 25, 30, 32, 36, 37, 38, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 56, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 77, 78, 79, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 104, 106], "diverg": [3, 19, 21, 64, 65, 78, 82], "input": [3, 4, 5, 6, 7, 10, 12, 13, 16, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 51, 53, 56, 57, 58, 63, 64, 65, 66, 68, 69, 70, 72, 74, 81, 82, 90, 92, 96, 97, 98, 100, 104, 105, 106], "mechan": [3, 4, 10, 12, 18, 19, 21, 23, 27, 36, 38, 42, 45, 46, 47, 60, 69, 86, 90, 91, 92, 97, 98, 101, 102, 104, 107, 110], "1": [3, 4, 5, 10, 11, 13, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 78, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 109], "100": [3, 13, 17, 18, 21, 26, 34, 37, 43, 48, 56, 62, 67, 68, 70, 91, 97, 98, 100, 101, 104, 105], "confid": [3, 10, 12, 13, 21, 91, 92, 93, 98, 100, 104], "must": [3, 4, 5, 6, 7, 13, 18, 19, 20, 21, 23, 24, 25, 28, 36, 37, 42, 43, 51, 56, 62, 69, 72, 78, 81, 82, 91, 93, 94, 96, 100, 106], "within": [3, 5, 19, 21, 23, 28, 36, 39, 64, 69, 78, 81, 93, 99, 100, 101, 104, 105], "0": [3, 4, 5, 10, 12, 13, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108], "argument": [3, 4, 5, 6, 7, 13, 14, 18, 19, 20, 21, 23, 24, 25, 28, 29, 35, 37, 38, 39, 41, 42, 44, 56, 57, 58, 62, 68, 69, 72, 78, 81, 82, 96, 106], "data": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 32, 34, 37, 38, 39, 40, 42, 43, 44, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 83, 84, 86, 87, 89, 91, 92, 93, 94, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110], "rais": [3, 4, 6, 7, 13, 16, 17, 18, 19, 20, 21, 23, 24, 34, 51, 56, 62], "typeerror": [3, 4, 6, 7, 18, 19, 20, 21, 23, 37], "an": [3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 81, 82, 84, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107], "": [3, 4, 5, 6, 7, 12, 13, 16, 17, 18, 19, 20, 21, 23, 27, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 50, 52, 60, 63, 64, 65, 68, 70, 72, 77, 78, 79, 81, 82, 84, 86, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 102, 104, 105, 106, 110], "differ": [3, 4, 5, 6, 7, 10, 13, 18, 19, 20, 21, 23, 28, 37, 41, 42, 43, 47, 48, 50, 51, 52, 56, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 77, 78, 81, 82, 91, 92, 93, 95, 97, 98, 100, 101, 104, 106, 107, 108], "expect": [3, 4, 5, 6, 7, 13, 16, 18, 19, 20, 23, 26, 27, 36, 37, 39, 42, 43, 46, 50, 51, 65, 66, 68, 70, 81, 93, 101, 104, 105, 106], "fail": [3, 4, 6, 7, 13, 18, 19, 20, 21, 23, 24, 27, 56, 69, 72, 78, 104], "error": [3, 4, 6, 7, 13, 18, 19, 20, 21, 23, 24, 33, 37, 41, 51, 56, 57, 58, 62, 65, 66, 67, 68, 70, 72, 78, 81, 82, 86, 92, 93, 96, 100, 101], "librari": [3, 4, 6, 7, 10, 13, 18, 19, 20, 21, 23, 24, 28, 32, 35, 36, 37, 40, 41, 43, 44, 46, 47, 48, 49, 52, 54, 56, 60, 64, 65, 68, 69, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 91, 92, 93, 95, 97, 98, 99, 100, 106, 107, 108, 110], "laplacian": [3, 10, 92, 98, 100], "return": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 33, 37, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 62, 65, 67, 70, 72, 81, 82, 89, 93, 94, 96, 100, 101, 102, 104, 105, 106, 108], "meet": [3, 50, 52, 91, 98], "requir": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 34, 38, 42, 46, 49, 50, 51, 56, 58, 64, 68, 69, 75, 77, 78, 81, 90, 92, 97], "given": [3, 4, 5, 6, 12, 13, 19, 21, 23, 24, 25, 28, 50, 52, 56, 60, 67, 70, 72, 77, 87, 92, 93, 95, 98, 100, 104, 106], "estim": [3, 10, 12, 13, 16, 18, 23, 25, 29, 33, 38, 39, 40, 42, 50, 52, 60, 66, 69, 70, 89, 90, 92, 93, 94, 98, 101, 102, 104, 105, 110], "p": [3, 11, 12, 18, 42, 48, 101], "y": [3, 16, 17, 18, 19, 20, 37, 48, 58, 59, 70, 93, 104], "ge": [3, 19, 20, 65, 81, 100], "where": [3, 4, 12, 13, 16, 18, 19, 23, 25, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 50, 56, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 81, 82, 92, 93, 94, 97, 100, 101, 104, 105, 108], "x": [3, 4, 11, 12, 16, 17, 18, 19, 20, 21, 23, 37, 42, 43, 47, 48, 65, 67, 70, 93, 100, 105, 106], "z": [3, 12, 20, 104], "sim": [3, 19, 70], "mathcal": [3, 41], "l": [3, 11, 40, 47, 56, 66, 67, 68, 69, 100, 106], "_": [3, 16, 19, 39, 42, 44, 47, 48, 62, 67, 73, 97, 101, 102, 105], "That": [3, 10, 19, 25, 35, 37, 41, 43, 48, 66, 78, 91, 99, 100, 108], "i": [3, 4, 5, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 110], "laplac": [3, 4, 10, 13, 18, 21, 27, 34, 39, 41, 50, 52, 54, 56, 60, 62, 64, 73, 74, 86, 92, 93, 94, 96, 97, 98, 100, 101, 104, 110], "random": [3, 4, 12, 17, 18, 23, 47, 48, 50, 63, 64, 65, 67, 68, 89, 97, 99, 100, 104, 105, 108], "variabl": [3, 12, 70, 73, 95, 100, 105], "distribut": [3, 5, 10, 12, 13, 18, 19, 21, 23, 39, 48, 50, 62, 63, 64, 65, 70, 72, 82, 91, 92, 94, 96, 97, 98, 103, 104, 106, 108], "float": [3, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 27, 28, 31, 35, 36, 39, 41, 46, 47, 48, 53, 56, 57, 58, 64, 65, 66, 67, 69, 70, 72, 74, 78, 81, 86, 89, 92, 93, 96, 97, 100, 101, 102, 104, 105, 106, 109, 110], "can": [3, 4, 5, 6, 7, 10, 13, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108], "take": [3, 6, 10, 18, 21, 23, 25, 26, 27, 28, 32, 36, 38, 41, 44, 50, 51, 52, 60, 64, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 82, 92, 93, 102, 104, 105, 108], "floor": 3, "without": [3, 16, 21, 36, 70, 73, 77, 78, 81, 93, 100, 102, 106], "affect": [3, 18, 41, 50, 90, 92, 100, 105], "coverag": [3, 110], "probabl": [3, 4, 12, 18, 19, 21, 39, 42, 43, 56, 63, 64, 65, 67, 82, 93, 100, 101], "summar": [3, 13, 50, 52, 54, 56, 60, 62, 64, 92, 93, 94, 96], "oncefram": [3, 8, 13, 18, 78], "threshold": [3, 4, 10, 13, 14, 18, 38, 50, 60, 91, 93, 94, 97], "configur": [3, 10, 12, 13, 37, 43, 68, 69, 78, 81, 82, 91, 94, 96, 108], "censor": [3, 13, 47], "small": [3, 10, 13, 14, 23, 37, 38, 39, 42, 43, 47, 52, 60, 65, 67, 68, 70, 72, 82, 91, 93, 97, 100, 102, 104], "sensit": [3, 5, 12, 13, 18, 21, 23, 24, 37, 38, 39, 40, 41, 42, 43, 48, 50, 52, 56, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 81, 91, 92, 93, 95, 97, 102, 106, 108, 110], "group": [3, 5, 7, 8, 10, 13, 14, 18, 20, 21, 38, 45, 50, 51, 52, 53, 56, 57, 59, 67, 77, 84, 91, 92, 95], "includ": [3, 9, 13, 14, 17, 21, 23, 35, 36, 43, 52, 53, 62, 69, 73, 74, 78, 79, 81, 86, 91, 92, 93, 95, 97, 99, 100], "contain": [3, 5, 7, 8, 9, 13, 17, 18, 20, 21, 24, 27, 37, 38, 42, 43, 44, 48, 50, 51, 56, 57, 58, 63, 64, 65, 70, 78, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106], "cutoff": [3, 13, 14], "respect": [3, 13, 19, 21, 23, 37, 41, 43, 52, 56, 63, 69, 74, 82, 100, 106], "count": [3, 8, 10, 12, 13, 18, 21, 23, 25, 28, 29, 32, 33, 37, 38, 39, 42, 43, 56, 60, 64, 65, 66, 67, 69, 70, 74, 90, 91, 93, 97, 100, 101, 105], "being": [3, 13, 21, 35, 39, 47, 56, 72, 74, 78, 93, 101, 102], "featur": [3, 4, 6, 7, 16, 18, 19, 20, 21, 23, 36, 76, 77, 78, 82, 86, 95, 102], "contrib": [3, 4, 6, 7, 10, 18, 19, 21, 22, 23, 27, 32, 35, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 50, 51, 52, 54, 56, 57, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 77, 78, 81, 82, 86, 89, 90, 91, 92, 93, 94, 96, 97, 101, 102, 104, 105, 106, 108], "comput": [3, 4, 5, 6, 10, 12, 13, 16, 17, 18, 20, 21, 23, 24, 27, 30, 37, 41, 42, 43, 48, 49, 50, 55, 56, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 81, 92, 93, 96, 97, 99, 100, 104, 105, 106, 108, 110], "which": [3, 4, 5, 6, 7, 10, 13, 18, 21, 23, 25, 38, 39, 41, 42, 50, 51, 56, 59, 62, 64, 65, 67, 68, 69, 70, 72, 74, 77, 78, 81, 82, 86, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 104, 105, 106, 108], "want": [3, 13, 21, 31, 32, 42, 47, 48, 56, 67, 69, 70, 72, 74, 77, 78, 79, 81, 82, 92, 93, 95, 99, 101, 102, 104, 105], "read": [3, 56, 58, 64, 65, 75, 78, 81, 82, 90, 92, 93, 94], "option": [3, 4, 5, 7, 8, 10, 11, 13, 16, 18, 21, 23, 69, 75, 78, 81, 86, 87, 93, 95], "us": [3, 4, 5, 6, 7, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108], "first": [3, 4, 5, 6, 9, 10, 13, 16, 18, 21, 23, 24, 26, 28, 37, 38, 41, 42, 43, 44, 47, 48, 50, 52, 62, 65, 66, 68, 69, 70, 72, 73, 77, 78, 79, 81, 82, 86, 90, 92, 96, 97, 100, 101, 102, 104, 105, 106, 108], "creat": [3, 5, 7, 16, 18, 21, 23, 26, 27, 46, 47, 49, 62, 63, 64, 65, 73, 78, 79, 81, 82, 87, 92, 93, 94, 97, 99, 104, 105, 106, 108], "api": [3, 5, 10, 13, 18, 25, 26, 29, 30, 34, 45, 46, 48, 49, 55, 56, 62, 63, 65, 67, 69, 72, 74, 80, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 106, 107, 110], "pl": [3, 10, 13, 18, 39, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 73, 90, 91, 92, 93, 94, 95, 96, 102], "lf": [3, 18], "lazyfram": [3, 5, 7, 13, 18, 21, 23, 51, 52, 56, 62, 73, 95], "schema": [3, 10, 18, 51, 56], "int32": [3, 13, 18, 51], "b": [3, 18, 21, 23, 24, 37, 42, 43, 51, 54, 65, 69, 81, 82, 100, 105, 106], "string": [3, 5, 7, 13, 19, 20, 23, 24, 28, 38, 54, 55, 56, 57, 59, 61, 62, 69, 71, 74, 82, 93, 96, 101], "lf_domain": [3, 18], "i32": [3, 5, 18, 21, 24, 25, 27, 28, 29, 32, 37, 43, 65, 68, 69, 74, 81], "str": [3, 4, 5, 6, 7, 10, 11, 13, 16, 18, 19, 20, 21, 23, 24, 28, 38, 43, 49, 50, 51, 58, 59, 60, 62, 67, 69, 74, 82, 92, 94, 96, 101], "margin": [3, 5, 7, 8, 10, 13, 14, 18, 21, 50, 52, 54, 56, 57, 60, 90, 91, 92, 93, 94, 95, 96, 102], "max_length": [3, 13, 18, 50, 54, 56, 57, 92, 93, 94, 96, 102], "1000": [3, 13, 21, 38, 39, 42, 51, 67, 68, 70, 96, 101, 102, 104, 108], "mea": [3, 21, 26, 46, 48, 63, 67, 89], "m": [3, 4, 5, 7, 13, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 59, 66, 67, 70, 72, 74, 78, 82, 86, 93, 97, 100, 101, 104, 105, 106, 108], "select": [3, 4, 9, 10, 13, 18, 40, 41, 45, 48, 50, 52, 54, 56, 57, 59, 60, 62, 67, 73, 75, 90, 91, 92, 94, 95, 101, 102, 104, 108], "len": [3, 13, 23, 42, 47, 48, 50, 51, 52, 56, 57, 58, 59, 60, 62, 67, 70, 73, 91, 92, 93, 94, 96, 100, 102, 104, 105], "col": [3, 13, 18, 50, 52, 54, 56, 57, 58, 59, 62, 92, 93, 94, 96, 102], "sum": [3, 4, 10, 13, 16, 18, 21, 23, 25, 27, 28, 29, 32, 33, 34, 37, 38, 39, 42, 43, 44, 47, 50, 52, 54, 56, 66, 67, 69, 70, 73, 93, 94, 96, 100, 102, 105], "global_scal": [3, 13, 18], "extract": [3, 13, 48, 73], "util": [3, 5, 12, 18, 21, 23, 24, 26, 35, 37, 38, 39, 41, 43, 46, 47, 48, 50, 60, 64, 65, 67, 70, 72, 79, 84, 91, 92, 93, 95, 96, 97, 101, 102, 105, 108], "inform": [3, 5, 9, 13, 24, 25, 27, 36, 37, 43, 48, 51, 55, 56, 63, 65, 67, 68, 69, 70, 92, 93, 95, 96, 100, 101, 102, 104, 105], "about": [3, 5, 6, 13, 39, 50, 53, 56, 62, 63, 64, 67, 69, 74, 75, 81, 82, 92, 93, 96, 97, 100, 101, 102, 104, 105, 106, 107], "each": [3, 4, 5, 7, 10, 11, 12, 13, 16, 18, 21, 23, 25, 28, 30, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 54, 56, 60, 63, 64, 65, 67, 68, 69, 70, 72, 74, 78, 81, 82, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109], "aggreg": [3, 5, 13, 23, 37, 40, 42, 43, 47, 50, 51, 53, 55, 56, 57, 60, 61, 62, 63, 65, 70, 92, 93, 94, 96, 101, 106, 110], "result": [3, 5, 9, 13, 17, 18, 19, 21, 23, 26, 27, 31, 37, 38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 78, 81, 82, 91, 92, 93, 94, 96, 97, 104, 106, 108], "frame": [3, 13, 21, 35, 50, 56, 60, 62, 92, 93, 94], "shape": [3, 10, 11, 13, 17, 18, 36, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 69, 89, 90, 91, 92, 93, 94, 96, 104, 105], "2": [3, 4, 5, 10, 11, 13, 17, 18, 19, 21, 25, 26, 28, 29, 32, 33, 37, 38, 39, 41, 42, 43, 44, 46, 49, 50, 51, 52, 54, 56, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 72, 73, 81, 82, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 109], "4": [3, 10, 17, 18, 21, 23, 25, 28, 29, 32, 33, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 62, 67, 68, 70, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 108], "f64": [3, 4, 5, 7, 10, 13, 18, 23, 24, 27, 37, 43, 50, 60, 62, 65, 68, 69, 74, 86, 90, 91, 92, 94, 96, 97, 106], "length": [3, 13, 18, 43, 50, 56, 60, 62, 64, 66, 68, 69, 70, 92, 94, 96, 101, 104, 105], "integ": [3, 13, 18, 21, 23, 24, 27, 28, 44, 50, 52, 54, 56, 60, 62, 64, 65, 66, 69, 72, 74, 81, 92, 93, 94, 96], "pass": [3, 5, 6, 13, 21, 24, 25, 32, 33, 35, 37, 40, 41, 48, 56, 65, 66, 69, 70, 72, 78, 86, 90, 92, 93, 96, 101, 104, 106, 108], "05": [3, 13, 21, 39, 43, 60, 70, 91, 92, 93, 97, 101, 104], "5": [3, 13, 17, 18, 19, 21, 23, 25, 26, 28, 29, 31, 32, 33, 34, 37, 38, 39, 41, 43, 44, 48, 50, 52, 56, 60, 64, 65, 66, 67, 68, 70, 72, 82, 91, 92, 93, 94, 95, 100, 102, 104, 105, 106, 108], "3": [3, 5, 10, 13, 17, 18, 21, 25, 28, 29, 32, 33, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 51, 52, 56, 57, 58, 59, 62, 65, 67, 68, 69, 70, 73, 78, 82, 90, 91, 92, 93, 95, 100, 101, 102, 104, 105, 106, 109], "375618": 3, "method": [4, 5, 10, 13, 17, 18, 23, 45, 48, 51, 62, 65, 73, 81, 93, 95, 100, 101], "access": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 28, 32, 36, 37, 38, 41, 42, 43, 66, 67, 68, 78, 79, 81, 82, 89, 93, 99, 102, 104, 105, 106, 110], "c": [4, 17, 18, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 42, 43, 47, 48, 51, 54, 66, 67, 69, 70, 72, 78, 82, 86, 97, 105], "d_in": [4, 5, 6, 10, 12, 18, 21, 23, 25, 27, 28, 29, 31, 32, 33, 37, 38, 39, 41, 42, 43, 46, 47, 49, 63, 65, 66, 67, 68, 69, 70, 72, 82, 97, 100, 104, 106, 108], "d_mid": [4, 5, 25, 28, 29, 97], "construct": [4, 5, 6, 7, 10, 11, 13, 16, 18, 19, 20, 21, 23, 26, 28, 39, 40, 41, 42, 46, 47, 49, 56, 62, 64, 65, 67, 68, 82, 86, 91, 92, 95, 96, 99, 100, 106], "when": [4, 5, 10, 12, 13, 16, 18, 19, 21, 23, 24, 25, 29, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 47, 50, 51, 52, 56, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 77, 78, 81, 82, 89, 91, 92, 93, 96, 97, 98, 100, 102, 105, 106, 108], "interact": [4, 10, 21, 25, 28, 29, 30, 33, 36, 64, 78, 81, 84], "compos": [4, 30, 31, 82], "composit": [4, 21, 28, 33, 48, 64, 66, 82, 97, 104], "properti": [4, 13, 35, 36, 46, 49, 63, 64, 65, 68, 78, 81, 92, 93, 95, 96, 100], "sequenti": [4, 5, 8, 10, 23, 27, 41, 68, 69, 90], "appli": [4, 5, 10, 13, 18, 21, 23, 34, 37, 39, 42, 43, 50, 53, 56, 59, 68, 79, 86, 90, 91, 92, 93, 96, 97, 98, 99, 100, 104, 105, 106], "same": [4, 5, 7, 10, 17, 21, 23, 28, 30, 32, 36, 37, 38, 41, 42, 43, 47, 50, 51, 52, 56, 60, 65, 66, 67, 68, 69, 70, 72, 73, 78, 81, 82, 87, 90, 91, 92, 93, 94, 96, 99, 100, 101, 106, 108], "dataset": [4, 5, 10, 12, 13, 18, 19, 21, 23, 25, 26, 27, 28, 30, 32, 37, 38, 39, 41, 42, 43, 47, 48, 52, 56, 63, 64, 65, 67, 72, 83, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 104, 105, 106, 108], "basic": [4, 67, 87, 100, 106], "linear": [4, 17, 23, 48, 84, 87, 92, 104], "usag": [4, 21, 51, 56, 72, 81, 86, 99, 105], "specifi": [4, 5, 13, 18, 23, 24, 33, 34, 35, 36, 37, 38, 40, 43, 51, 52, 56, 60, 62, 64, 65, 70, 75, 78, 81, 82, 86, 90, 91, 92, 96, 97, 100, 106], "base": [4, 10, 11, 12, 13, 14, 16, 21, 23, 24, 25, 28, 38, 41, 56, 60, 64, 65, 67, 69, 74, 90, 91, 92, 97, 99, 100, 101, 102, 105, 108], "answer": [4, 18, 21, 25, 38, 42, 52, 56, 60, 67, 68, 70, 95, 102, 104, 105, 108], "previou": [4, 28, 41, 42, 44, 48, 68, 72, 92, 93, 94, 100, 106], "up": [4, 18, 21, 32, 35, 44, 48, 50, 51, 70, 72, 77, 78, 81, 82, 90, 91, 92, 93, 95, 96, 97, 100, 101, 102, 104, 106, 108], "front": [4, 32, 70, 82], "support": [4, 5, 8, 10, 13, 17, 18, 23, 25, 28, 32, 39, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 67, 69, 78, 82, 91, 95, 96, 97, 99, 100, 106], "concurr": [4, 25], "allow": [4, 5, 10, 11, 13, 21, 25, 27, 29, 31, 34, 35, 37, 47, 48, 51, 54, 56, 58, 62, 64, 69, 78, 93, 94, 96, 100, 101, 102], "spawn": [4, 5, 25], "multipl": [4, 10, 13, 20, 21, 30, 38, 41, 49, 54, 66, 67, 77, 81, 85, 93, 94, 95, 97, 99, 100, 102, 105], "interleav": 4, "your": [4, 13, 19, 20, 21, 23, 26, 34, 35, 36, 39, 40, 44, 46, 47, 48, 49, 50, 56, 60, 65, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 100, 110], "amongst": [4, 10, 97], "them": [4, 13, 36, 44, 49, 51, 62, 63, 77, 91, 93, 100, 101, 102, 105], "element": [4, 7, 13, 18, 20, 21, 23, 28, 32, 34, 36, 37, 42, 43, 47, 52, 53, 64, 67, 68, 69, 74, 78, 82, 100, 101, 104, 106], "di": [4, 18, 82, 100], "output": [4, 5, 6, 12, 13, 16, 18, 21, 23, 25, 27, 28, 30, 31, 32, 35, 37, 40, 41, 42, 43, 44, 46, 48, 52, 53, 56, 63, 64, 65, 66, 69, 72, 74, 78, 81, 82, 92, 93, 97, 99, 100, 106], "mi": [4, 18, 23, 82, 100], "mo": [4, 18, 21, 23, 74, 82, 100], "TO": [4, 6, 18, 23, 46, 69, 82, 105], "indic": [4, 6, 18, 23, 37, 39, 40, 41, 51, 56, 69, 72, 74, 81, 82, 104], "space": [4, 5, 17, 18, 21, 23, 32, 37, 38, 39, 40, 44, 48, 51, 68, 69, 72, 82, 86, 104, 108], "valid": [4, 7, 13, 18, 23, 24, 36, 51, 56, 62, 65, 66, 69, 70, 77, 78, 81, 82, 100, 106], "distanc": [4, 5, 6, 10, 18, 19, 20, 21, 23, 24, 25, 27, 28, 31, 32, 37, 41, 42, 43, 47, 50, 60, 63, 64, 68, 69, 72, 74, 81, 82, 86, 97, 106], "maximum": [4, 6, 7, 10, 23, 40, 65, 68, 100, 101, 106], "adjac": [4, 5, 6, 10, 18, 19, 21, 23, 41, 65, 68, 81, 82, 106, 108], "expenditur": [4, 5, 16, 66, 104, 105, 106], "\u03b4": [4, 5, 12, 18, 28, 31, 43, 93], "measurement0": 4, "measurement1": 4, "equival": [4, 16, 18, 21, 23, 27, 37, 41, 42, 43, 50, 52, 65, 67, 70, 82, 92, 94, 100, 105, 106, 108], "noninteract": 4, "via": [4, 5, 10, 21, 35, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51, 54, 56, 58, 65, 68, 70, 74, 79, 82, 90, 91, 92, 100, 104, 105, 106, 110], "vector": [4, 5, 16, 18, 21, 23, 40, 41, 43, 47, 60, 64, 65, 66, 68, 69, 97, 100, 104, 106, 108], "deprec": [4, 18, 23, 101], "sinc": [4, 18, 23, 27, 28, 29, 33, 42, 51, 52, 53, 56, 60, 65, 66, 68, 70, 72, 78, 81, 82, 91, 92, 93, 95, 97, 100, 101, 104, 105, 106, 108], "version": [4, 18, 23, 36, 40, 73, 78, 81, 86, 87, 91, 95, 101, 108], "14": [4, 18, 56, 67, 92, 93, 100, 104, 105], "ha": [4, 5, 18, 21, 23, 24, 25, 29, 30, 33, 36, 37, 38, 41, 42, 43, 46, 48, 51, 52, 56, 60, 62, 65, 69, 70, 74, 77, 78, 79, 81, 82, 83, 85, 86, 90, 93, 94, 95, 97, 99, 100, 101, 102, 104, 105, 106, 108], "been": [4, 5, 13, 25, 28, 29, 36, 37, 41, 52, 56, 81, 82, 83, 85, 93, 94], "renam": 4, "instead": [4, 5, 10, 13, 18, 21, 23, 24, 37, 41, 43, 48, 52, 56, 60, 62, 63, 64, 67, 69, 73, 78, 83, 89, 91, 92, 93, 96, 100, 101, 104, 106], "transformation0": 4, "outer": [4, 27], "inner": [4, 5, 7, 13, 19, 21, 27], "postprocess1": 4, "repres": [4, 5, 10, 11, 21, 23, 27, 30, 37, 38, 42, 43, 51, 65, 69, 70, 82, 92, 95, 96, 100, 101, 106], "non": [4, 13, 18, 19, 20, 21, 23, 25, 28, 30, 53, 56, 65, 67, 69, 89, 97, 102, 106, 110], "postprocess": [4, 10, 19, 23, 25, 27, 37, 43, 66, 67, 69, 70, 90], "postprocessor": [4, 6, 23, 45, 48, 67, 108], "transformation1": 4, "smoothedmaxdiverg": [4, 31, 65], "curv": [4, 19, 21, 31], "maxdiverg": [4, 5, 18, 21, 30, 31, 32, 37, 40, 42, 43, 65, 97, 100, 106], "population_s": [4, 26], "amplifi": [4, 26], "amplif": [4, 30, 81], "subsampl": 4, "doe": [4, 10, 13, 18, 23, 41, 51, 52, 53, 56, 58, 65, 66, 69, 70, 73, 79, 90, 92, 94, 95, 97, 98, 100, 101, 102, 104], "perform": [4, 43, 48, 67, 68, 74, 79, 99, 101, 104, 105], "ani": [4, 5, 7, 10, 11, 13, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 56, 60, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 79, 81, 82, 86, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108], "sampl": [4, 9, 10, 12, 13, 16, 17, 18, 21, 23, 26, 37, 39, 42, 43, 48, 50, 63, 67, 68, 69, 70, 72, 90, 92, 93, 95, 96, 100, 101, 104, 105, 106, 108, 110], "It": [4, 5, 13, 18, 21, 27, 31, 34, 45, 47, 48, 50, 64, 65, 69, 74, 78, 79, 81, 82, 93, 95, 97, 100, 101, 102, 104, 106], "have": [4, 10, 13, 18, 21, 22, 23, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 51, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83, 85, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106], "hand": [4, 43, 47, 70, 72, 93, 94, 97, 99, 108, 110], "simpl": [4, 13, 26, 42, 48, 68, 69, 81, 103, 104, 106, 108], "larger": [4, 18, 23, 26, 28, 38, 43, 68, 69, 72, 92, 93, 97, 100, 101, 104, 106, 108], "popul": [4, 13, 26, 39, 42, 70, 99, 101, 104], "dia": [4, 23], "do": [4, 13, 23, 42, 47, 51, 56, 58, 65, 70, 73, 74, 77, 78, 79, 82, 92, 93, 96, 100, 105], "match": [4, 10, 21, 23, 27, 28, 29, 32, 40, 41, 48, 56, 69, 78, 82, 102, 106], "honest": [4, 6, 7, 13, 18, 19, 20, 23, 26, 35, 46, 47, 48, 49, 78, 86, 89, 102, 108], "curiou": [4, 6, 7, 13, 18, 19, 20, 23, 26, 35, 46, 47, 48, 49, 78, 86, 89, 108], "why": [4, 6, 7, 18, 19, 20, 21, 23, 79, 81, 93, 106], "guarante": [4, 10, 13, 18, 19, 24, 37, 41, 42, 43, 50, 56, 60, 62, 64, 65, 66, 69, 70, 73, 81, 92, 93, 100, 102, 106], "onli": [4, 5, 6, 7, 10, 13, 17, 18, 19, 21, 23, 25, 27, 34, 36, 37, 38, 39, 41, 42, 43, 44, 46, 50, 51, 53, 54, 56, 58, 60, 62, 65, 67, 69, 70, 78, 81, 82, 85, 86, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 106, 108], "record": [4, 5, 12, 13, 16, 23, 39, 47, 48, 49, 50, 51, 52, 56, 60, 65, 66, 68, 69, 70, 72, 82, 91, 92, 93, 94, 96, 100, 104, 106, 108], "int": [4, 5, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 25, 28, 29, 32, 33, 37, 38, 42, 43, 44, 46, 48, 49, 50, 54, 56, 65, 67, 72, 73, 74, 82, 91, 92, 93, 94, 96, 102, 104, 105, 108], "d_out": [4, 5, 6, 10, 12, 18, 21, 23, 27, 28, 33, 38, 39, 63, 65, 67, 69, 70, 72, 97, 100, 104], "limit": [4, 5, 10, 13, 18, 21, 25, 30, 33, 35, 42, 51, 68, 69, 93, 94, 95, 97, 98, 104, 105], "loss": [4, 5, 6, 10, 18, 21, 23, 29, 30, 33, 37, 41, 42, 43, 50, 52, 60, 62, 64, 70, 90, 92, 93, 95, 100, 102, 105, 106], "adjust": [4, 23, 27, 37, 42, 43, 48, 67, 68, 92, 104, 105], "reject": [4, 19, 33, 39, 51, 54, 56], "would": [4, 9, 33, 39, 48, 50, 51, 56, 65, 67, 69, 70, 79, 92, 93, 95, 96, 100, 101, 106], "increas": [4, 10, 17, 23, 29, 33, 37, 41, 43, 48, 50, 60, 64, 67, 68, 69, 70, 91, 93, 94, 100, 102, 104, 105, 108], "total": [4, 12, 13, 18, 34, 38, 42, 43, 52, 65, 66, 67, 91, 92, 93, 102, 104], "abov": [4, 18, 21, 22, 23, 37, 40, 43, 73, 78, 81, 82, 92, 93, 96, 97, 101, 105, 106, 108], "q": [4, 6, 74, 104], "upper": [4, 5, 10, 12, 13, 18, 21, 23, 25, 33, 38, 50, 51, 56, 63, 64, 65, 72, 92, 100, 101, 106], "zeroconcentrateddiverg": [4, 5, 18, 30, 31, 37, 40, 43], "citat": [4, 18, 23], "bs16": 4, "concentr": [4, 5, 13, 19, 40, 60, 92, 100, 102, 108], "simplif": 4, "extens": [4, 55, 64, 78, 81], "lower": [4, 12, 13, 21, 23, 34, 39, 45, 48, 50, 51, 56, 60, 67, 70, 86, 89, 91, 94, 100, 101, 106], "stop_prob": 4, "privat": [4, 6, 9, 10, 12, 13, 16, 18, 21, 23, 25, 28, 37, 38, 39, 40, 42, 43, 45, 46, 48, 51, 56, 58, 60, 62, 63, 64, 65, 69, 70, 72, 81, 83, 84, 87, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 106, 107, 108, 110], "candid": [4, 13, 17, 18, 23, 41, 47, 48, 62, 67, 92, 109], "whose": [4, 13, 18, 21, 24, 35, 36, 40, 43, 78], "score": [4, 13, 18, 23, 40, 41, 47, 92, 109], "satisfi": [4, 5, 6, 19, 20, 21, 25, 28, 36, 39, 41, 47, 48, 51, 52, 56, 60, 62, 72, 77, 82, 91, 92, 95, 97, 105, 106, 108], "\u03b5": [4, 5, 12, 16, 18, 21, 31, 37, 43, 47, 92, 95, 97], "2\u03b5": 4, "invoc": [4, 21], "time": [4, 6, 7, 10, 17, 18, 21, 23, 25, 27, 28, 29, 33, 36, 37, 40, 41, 43, 48, 49, 51, 54, 56, 60, 67, 69, 70, 72, 73, 77, 78, 79, 89, 92, 93, 94, 95, 96, 100, 102, 104], "below": [4, 13, 27, 36, 43, 47, 59, 65, 69, 70, 75, 78, 81, 92, 93, 100, 101], "algorithm": [4, 6, 8, 10, 13, 16, 17, 18, 23, 36, 37, 40, 41, 42, 43, 48, 63, 64, 67, 68, 69, 72, 77, 81, 85, 88, 90, 91, 92, 93, 99, 106, 108, 109, 110], "termin": [4, 67], "noth": 4, "should": [4, 13, 18, 19, 21, 23, 30, 34, 37, 38, 39, 41, 44, 51, 63, 64, 65, 66, 69, 70, 74, 75, 78, 79, 81, 93, 95, 97, 99, 100, 101, 106, 108], "make": [4, 5, 13, 18, 21, 23, 24, 25, 26, 28, 30, 36, 39, 41, 46, 47, 48, 49, 52, 56, 60, 62, 64, 65, 67, 69, 70, 72, 74, 77, 78, 79, 81, 82, 86, 87, 89, 91, 92, 93, 95, 99, 100, 101, 102, 104, 105, 106, 108], "form": [4, 5, 18, 23, 30, 42, 46, 49, 65, 67, 74, 79, 82, 91, 92, 96, 97, 100, 106], "write": [4, 21, 32, 37, 38, 41, 42, 43, 44, 47, 64, 66, 67, 68, 69, 73, 78, 79, 81, 82, 86, 89, 93, 94, 105, 106], "custom": [4, 10, 42, 49], "scorer": 4, "extrinsicobject": [4, 6, 18, 24], "ensur": [4, 9, 10, 13, 16, 18, 23, 36, 44, 50, 56, 57, 62, 65, 69, 75, 92, 93, 95, 96, 97, 100, 101, 102, 106], "left": [4, 10, 12, 19, 23, 39, 48, 56, 57, 67, 93, 96, 100], "arbitrari": [4, 30, 50, 55, 63, 64, 68, 91, 94, 96], "held": 4, "liu": 4, "talwar": 4, "stoc": 4, "2019": 4, "tupl": [4, 5, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 31, 65, 70, 104, 106], "stop": 4, "earli": [4, 36, 81], "iter": [4, 10, 17, 24, 36, 47, 70, 77, 82, 90], "immedi": [4, 23], "greater": [4, 5, 12, 13, 21, 23, 38, 39, 40, 41, 43, 50, 60, 65, 66, 67, 68, 69, 70, 72, 79, 92, 93, 100, 104, 105, 109], "than": [4, 5, 10, 12, 13, 18, 19, 21, 23, 25, 28, 34, 37, 38, 39, 40, 41, 42, 43, 45, 50, 56, 63, 65, 67, 68, 69, 70, 72, 77, 81, 87, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 108], "23": [4, 24, 42, 51, 98], "fals": [4, 5, 7, 13, 16, 18, 20, 21, 23, 24, 26, 31, 37, 39, 41, 43, 47, 51, 52, 56, 58, 65, 66, 67, 69, 72, 86, 97, 100, 104, 106, 108], "demonstr": [4, 17, 26, 40, 47, 48, 50, 54, 56, 67, 70, 82, 86, 92, 93, 94, 95, 96, 98, 102, 103, 104, 105, 110], "purpos": [4, 13, 65, 81, 95, 100], "np": [4, 18, 37, 42, 48, 67, 70, 89, 100, 101, 102, 104, 105, 108], "m_mock": 4, "lambda": [4, 19, 21, 38, 44, 47, 48, 67, 70, 72, 73, 97, 101, 102, 104, 105, 108], "loc": [4, 48, 100], "m_private_select": 4, "20": [4, 10, 13, 43, 47, 56, 67, 68, 70, 90, 91, 92, 96, 104, 105], "assert": [4, 18, 21, 26, 27, 42, 51, 58, 64, 65, 68, 73, 105], "isinst": [4, 47], "constructor": [4, 5, 18, 21, 23, 24, 27, 28, 30, 31, 35, 37, 38, 40, 41, 43, 44, 65, 66, 69, 70, 72, 74, 78, 79, 81], "delai": [4, 18, 23, 106], "applic": [4, 5, 18, 23, 30, 36, 64, 79, 80, 92, 93, 95, 96, 97, 99, 106], "class": [5, 10, 11, 12, 13, 14, 16, 17, 21, 22, 24, 39, 63, 65, 73, 79, 106], "query_spac": 5, "coordin": 5, "instanc": [5, 6, 7, 13, 16, 19, 20, 21, 23, 37, 43, 48, 50, 63, 65, 67, 73, 74, 96, 100, 106, 108], "recommend": [5, 18, 44, 50, 51, 54, 78, 91, 92, 93, 97, 99], "one": [5, 10, 12, 13, 14, 18, 19, 21, 23, 24, 25, 38, 39, 40, 41, 43, 47, 48, 50, 52, 54, 60, 64, 65, 66, 67, 68, 69, 70, 72, 75, 78, 81, 82, 91, 92, 93, 94, 95, 96, 97, 100, 102, 104, 105, 106, 108], "execut": [5, 6, 13, 21, 27, 32, 40, 42, 48, 62, 67, 81, 82, 104], "track": [5, 51, 95, 99], "sequenc": [5, 10, 11, 13, 16, 21, 24, 90], "list": [5, 10, 11, 12, 13, 17, 21, 23, 24, 37, 39, 40, 47, 49, 56, 62, 65, 67, 68, 69, 70, 74, 76, 77, 78, 82, 92, 93, 99, 105, 106, 107], "sent": 5, "overal": [5, 28, 33, 43, 60, 102], "filter": [5, 13, 28, 30, 50, 52, 53, 57, 92, 93, 94, 102, 105], "default": [5, 7, 10, 16, 18, 23, 24, 37, 38, 43, 48, 50, 56, 65, 68, 69, 74, 77, 78, 82, 86, 91, 92, 93, 95, 101], "static": [5, 24, 64, 82, 90], "privacy_unit": [5, 10, 13, 34, 39, 44, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 67, 73, 90, 91, 92, 93, 94, 95, 96, 97, 102], "split_evenly_ov": [5, 13, 34, 39, 44, 50, 51, 52, 54, 56, 57, 58, 59, 60, 62, 67, 73, 92, 93, 94, 95, 96, 97, 102], "split_by_weight": [5, 95], "weight": [5, 10, 18, 28, 42, 67], "assumpt": [5, 48, 60, 93, 94, 106], "structur": [5, 40, 50, 60, 65, 67, 78, 79], "public": [5, 9, 13, 24, 56, 68, 69, 70, 92, 93, 95, 102, 104, 105, 106], "mutual": 5, "exclus": [5, 23, 92], "plan": [5, 13, 18, 62, 73, 79], "In": [5, 7, 13, 18, 19, 22, 23, 25, 26, 27, 28, 37, 38, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 55, 56, 58, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 77, 78, 81, 82, 86, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 104, 106, 108], "addit": [5, 7, 13, 18, 20, 21, 22, 23, 39, 41, 43, 47, 48, 51, 52, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 78, 79, 92, 94, 95, 96, 97, 98, 100, 106], "analyz": [5, 23, 78, 95, 99], "unit": [5, 16, 19, 21, 37, 42, 43, 51, 60, 63, 65, 79, 91, 94, 95, 96, 99, 106], "number": [5, 7, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23, 36, 38, 39, 41, 42, 43, 47, 48, 50, 52, 56, 57, 58, 60, 64, 65, 67, 68, 69, 70, 72, 77, 81, 86, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 110], "part": [5, 13, 38, 48, 51, 53, 69, 77, 81, 82, 93, 94, 99, 100], "evenli": [5, 17, 48, 92, 97, 104], "intermedi": [5, 27, 40, 65, 68, 69, 100], "consum": [5, 13, 70, 87], "otherwis": [5, 24, 42, 72, 81, 96], "current": [5, 13, 21, 34, 36, 42, 54, 58, 73, 86, 95, 96, 98, 100], "serialized_plan": [5, 73], "lazyframequeri": [5, 8, 13, 62], "full": [5, 9, 13, 22, 56, 78, 93, 95, 100], "byte": [5, 18, 42], "like": [5, 9, 10, 13, 17, 18, 21, 24, 25, 28, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 56, 57, 62, 65, 69, 72, 73, 74, 77, 78, 79, 81, 82, 89, 91, 92, 95, 96, 97, 100, 101, 102, 104, 105, 106], "polars_plan": [5, 13, 73], "kwarg": [5, 14], "next": [5, 47, 65, 67, 68, 70, 77, 78, 84, 86, 92, 97, 101, 105], "directli": [5, 13, 30, 62, 64, 65, 69, 86, 92, 95, 100, 101, 102], "remain": [5, 10, 13, 23, 36, 64, 68, 78, 86, 91, 93, 96], "f": [5, 13, 18, 19, 23, 37, 42, 43, 47, 48, 56, 65, 70, 92, 93, 98, 100, 104, 105, 106], "chain": [5, 7, 18, 21, 23, 24, 40, 47, 48, 63, 64, 65, 69, 71, 72, 73, 82, 86, 100], "miss": [5, 10, 23, 79, 81, 91, 93], "numer": [5, 7, 10, 13, 21, 23, 37, 40, 43, 51, 56, 65, 68, 69, 70, 72, 90, 91, 92], "solv": [5, 21, 42, 65, 72, 100, 105], "call": [5, 21, 24, 27, 28, 33, 37, 41, 43, 44, 62, 63, 65, 66, 68, 70, 73, 81, 82, 86, 91, 92, 97, 99, 100, 101, 106], "closest": [5, 21, 48], "stabil": [5, 7, 21, 23, 27, 35, 46, 49, 63, 64, 68, 69, 73, 78, 81, 82, 106], "constraint": [5, 7, 10, 13, 20, 21, 106], "discov": [5, 10, 21, 72], "assign": [5, 23, 51, 77, 108], "attribut": [5, 10, 14, 21, 39, 47, 91, 102, 104], "search": [5, 21, 65, 71, 78], "callabl": [5, 10, 21], "classmethod": [5, 24], "_wrap_releas": 5, "initi": [5, 36, 41, 60, 65, 78, 80, 92, 99], "howev": [5, 17, 23, 30, 33, 37, 41, 43, 48, 50, 52, 56, 63, 65, 67, 68, 69, 92, 93, 94, 100, 105, 108], "stand": [5, 78, 82], "alon": 5, "help": [5, 21, 64, 65, 67, 68, 74, 77, 79, 82, 86, 93, 95, 98, 100, 106], "build": [5, 6, 18, 21, 24, 36, 44, 48, 54, 57, 65, 68, 69, 70, 78, 80, 81, 82, 84, 91, 93, 96, 100, 104], "submit": [5, 25, 28, 29, 33, 42, 78, 105], "intern": [5, 6, 10, 13, 18, 23, 24, 25, 37, 41, 43, 51, 68, 79, 82, 89, 92], "split": [5, 23, 48, 68, 69, 91, 104, 105], "zcdp": [5, 13, 25, 28, 31, 41, 43, 60, 91, 108], "convers": [5, 56, 57, 58, 76, 93, 96], "approx": [5, 28, 43, 48, 101], "wrap_releas": 5, "prior": [5, 10, 13, 16, 25, 39, 65, 69, 70, 91, 92, 97, 100], "either": [5, 12, 16, 18, 21, 23, 39, 42, 56, 65, 69, 70, 72, 78, 79, 81, 82, 91, 98, 104], "allow_transform": 5, "true": [5, 6, 7, 10, 12, 13, 16, 18, 20, 21, 23, 24, 37, 39, 41, 42, 47, 48, 50, 52, 54, 56, 57, 58, 59, 60, 65, 67, 70, 73, 78, 81, 90, 91, 92, 93, 94, 96, 98, 101, 102, 104, 105, 108], "respons": [5, 18, 75, 92, 93, 97, 104], "potenti": [5, 6, 10, 13, 18, 23, 36, 39, 50, 51, 56, 64, 69, 92, 93, 97], "bool": [5, 6, 11, 13, 16, 18, 20, 21, 23, 24, 40, 42, 52, 65, 69, 74, 104, 105], "accept": [5, 12, 13, 28, 37, 40, 43, 44, 56, 65, 72, 74, 75, 82, 98, 106], "set": [5, 7, 9, 10, 13, 18, 19, 20, 21, 23, 24, 26, 28, 33, 37, 38, 40, 42, 43, 47, 50, 51, 53, 56, 57, 58, 60, 63, 64, 65, 67, 69, 70, 72, 74, 77, 78, 79, 81, 82, 90, 91, 92, 93, 96, 100, 101, 102, 104, 106, 108, 110], "express": [5, 13, 18, 21, 23, 24, 37, 38, 42, 50, 51, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 69, 85, 92, 93, 94, 96, 99, 100, 106], "As": [5, 36, 39, 42, 43, 64, 65, 66, 67, 69, 82, 91, 100, 102, 104, 105, 106], "well": [5, 10, 19, 21, 25, 36, 37, 38, 42, 43, 48, 51, 64, 65, 70, 72, 78, 81, 82, 83, 91, 92, 94, 99, 100, 101, 104, 106], "underli": [5, 17, 21, 48, 51, 56, 58, 63, 69, 70, 88, 90, 101, 106], "syntax": [5, 27, 35, 78, 81, 92], "vec": [5, 18, 23, 24, 37, 69, 74, 82, 101], "dictionari": [5, 10, 13, 43, 56], "rang": [5, 13, 23, 39, 42, 47, 48, 56, 62, 67, 68, 70, 72, 92, 93, 97, 99, 101, 102, 104, 105], "primit": [5, 18, 78, 106], "dict": [5, 10, 42, 43], "mapdomain": [5, 7, 18, 23, 40, 43, 69, 82], "key_domain": [5, 7], "value_domain": [5, 7], "complex": [5, 41, 102, 108, 110], "traceback": [5, 24, 27, 28, 33, 73, 91], "most": [5, 10, 12, 13, 18, 21, 22, 24, 27, 28, 33, 37, 38, 41, 43, 46, 47, 49, 50, 51, 52, 60, 62, 65, 68, 69, 72, 73, 74, 78, 82, 91, 93, 94, 95, 96, 97, 100, 102, 105, 106, 108], "recent": [5, 24, 27, 28, 33, 73, 91], "last": [5, 10, 13, 23, 24, 27, 28, 31, 33, 50, 73, 81, 82, 91, 94, 100, 105], "ffi": [5, 78, 79, 82], "altern": [5, 43, 56, 95], "note": [5, 13, 19, 27, 41, 43, 48, 66, 70, 73, 77, 78, 92, 101, 105, 106], "violat": [5, 7, 35, 36, 56, 78, 93, 97, 102], "rho": [5, 10, 19, 28, 37, 40, 41, 43, 60, 90, 91, 100], "consist": [5, 10, 18, 23, 37, 38, 48, 64, 65, 66, 67, 81, 82, 90, 91, 92, 94, 99, 100, 101, 105, 106], "1e": [5, 10, 19, 21, 26, 28, 31, 39, 42, 43, 50, 51, 56, 57, 58, 59, 60, 65, 90, 91, 93, 94, 96, 105], "9": [5, 10, 13, 18, 19, 25, 28, 29, 32, 33, 37, 39, 43, 48, 52, 56, 58, 67, 68, 70, 90, 91, 93, 95, 97, 100, 102, 104, 105, 108], "09": [5, 39, 43], "pure": [5, 7, 8, 13, 18, 19, 23, 28, 31, 41, 52, 60, 64, 65, 91, 95, 97], "zero": [5, 10, 11, 13, 18, 19, 23, 37, 40, 48, 52, 60, 68, 72, 81, 89, 92, 100, 102, 104, 105, 108], "\u03c1": [5, 28, 31, 43], "two": [5, 6, 7, 12, 13, 18, 19, 20, 21, 23, 27, 28, 29, 31, 33, 37, 38, 39, 43, 44, 48, 50, 51, 52, 60, 63, 64, 65, 68, 72, 81, 82, 86, 90, 91, 93, 95, 97, 100, 102, 105, 106, 108], "omit": [5, 44, 67, 90, 92], "make_": [5, 78, 82, 106], "deriv": [5, 9, 28, 41, 42, 72, 78, 79, 91, 98], "shorthand": [5, 13, 23, 27, 82], "symmetricdist": [5, 18, 20, 21, 23, 32, 65, 68, 69, 74, 82, 97, 100], "verbos": [5, 25], "control": [5, 13, 17, 38, 48, 64, 68, 69, 95], "contribut": [5, 10, 13, 34, 38, 39, 43, 44, 45, 47, 48, 50, 51, 52, 54, 56, 57, 58, 59, 62, 65, 67, 68, 73, 75, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 106], "chang": [5, 13, 16, 21, 31, 36, 43, 47, 52, 54, 56, 58, 60, 62, 65, 66, 67, 68, 69, 72, 74, 77, 78, 82, 92, 96, 100, 101, 108], "absolut": [5, 23, 37, 40, 43, 65, 68, 78, 81, 100, 106], "l1": [5, 37, 40, 43, 69, 98], "l2": [5, 21, 37, 40, 43, 69, 98], "local": [5, 40, 42, 73, 78, 86, 95], "order": [5, 7, 10, 13, 19, 20, 21, 23, 26, 41, 50, 51, 65, 68, 81, 91, 93, 96, 100, 104, 106, 108], "u": [5, 7, 9, 32, 36, 37, 38, 39, 41, 42, 43, 48, 52, 66, 67, 68, 69, 70, 75, 77, 79, 82, 85, 89, 92, 93, 95, 99, 100, 105, 106, 110], "l1distanc": [5, 20, 23, 24, 40, 69, 82, 100], "greatest": [5, 13, 19, 41, 43, 60, 65, 69, 72, 95, 100, 102, 105, 106], "microdata": [5, 9, 39, 84, 89, 91, 95, 99, 102, 104, 105], "influenc": [5, 13, 38, 43, 49, 50, 60, 65, 67, 68, 69, 93, 94, 95, 100, 106], "scalar": [5, 23, 39, 40, 56, 69, 91, 100, 106], "individu": [5, 13, 18, 26, 38, 39, 40, 42, 43, 47, 48, 50, 52, 54, 56, 58, 60, 65, 67, 69, 70, 72, 75, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 109], "insertdeletedist": [5, 18, 20, 23, 68, 69, 82], "hammingdist": [5, 20, 23, 69, 82], "changeonedist": [5, 20, 23, 69, 82, 100], "field": [6, 45, 63, 77, 93], "ti": [6, 69], "eval": [6, 21], "suppli": [6, 24, 36, 56, 105], "distance_in": 6, "distance_out": 6, "relat": [6, 21, 26, 27, 48, 63, 64, 65, 69, 72, 76, 78, 79, 82, 96, 100, 106], "retriev": [6, 7, 19, 20, 21, 23, 38, 48, 51, 56, 59, 81, 89, 92, 104], "term": [6, 18, 21, 23, 31, 37, 38, 40, 42, 43, 51, 56, 65, 68, 69, 70, 74, 82, 97, 100, 106], "defin": [6, 18, 19, 21, 23, 32, 37, 41, 42, 43, 46, 47, 48, 49, 63, 64, 65, 69, 70, 81, 82, 86, 90, 91, 94, 95, 97, 100, 106], "callback": [6, 18, 19, 23], "post": [6, 18, 42, 100], "processor": 6, "criteria": [6, 47, 56], "These": [6, 8, 24, 31, 36, 38, 39, 40, 51, 52, 53, 57, 62, 63, 65, 68, 69, 73, 74, 81, 82, 92, 95, 100, 102, 104, 106], "invari": [6, 13, 18, 56, 92, 96, 97], "necessari": [6, 21, 27, 56, 60, 68, 72, 81, 94, 95, 96, 98], "show": [6, 37, 39, 51, 68, 70, 79, 81, 92, 93, 98, 100, 104, 105], "correct": [6, 18, 23, 35, 36, 42, 65, 66, 78, 81, 101, 105], "other": [6, 10, 13, 21, 28, 31, 33, 38, 43, 46, 47, 50, 52, 60, 63, 64, 65, 66, 67, 69, 72, 74, 77, 78, 79, 81, 82, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 107, 108], "global": [6, 63, 65, 86, 95], "state": [6, 12, 25, 39, 69, 99], "system": [6, 24, 36, 48, 100], "clock": 6, "reveal": [6, 9, 51, 69, 70, 97, 100, 102], "elaps": 6, "escal": 6, "side": [6, 12, 18, 21, 23, 36, 39, 40, 48, 51, 77], "channel": [6, 36, 40], "vulner": [6, 35, 36, 78, 93], "direct": [6, 21, 41, 43, 67, 72, 78, 80, 99, 108], "secondli": 6, "independ": [6, 23, 40, 51, 56, 99], "except": [6, 17, 18, 21, 23, 25, 34, 37, 51, 56, 58, 72, 73, 91, 100, 102, 108], "both": [6, 13, 21, 23, 28, 32, 41, 51, 52, 56, 63, 65, 68, 70, 72, 78, 81, 82, 86, 90, 92, 99, 100, 101, 104, 108], "cancel": 6, "avoid": [6, 28, 56, 57, 58, 68, 89, 93, 96], "transit": 6, "self": [6, 10, 12, 13, 21, 63, 81], "extern": [6, 81], "width": [7, 68], "arraydomain": 7, "seri": [7, 13, 21, 51, 56, 60, 69, 91, 105], "arrai": [7, 11, 17, 18, 23, 42, 48, 51, 74, 91, 104, 105], "unbound": [7, 23, 68, 69, 70, 94, 100, 106], "whether": [7, 11, 13, 18, 19, 21, 40, 52, 72, 75, 77, 99, 102], "atom": [7, 11, 21, 23, 24, 37, 43, 69, 74, 82], "max_weight": [7, 18, 42], "bitvectordomain": [7, 18], "posit": [7, 23, 41, 60, 68, 69, 72, 81, 100, 104], "bit": [7, 18, 24, 65, 68, 69, 74, 81, 105, 110], "categori": [7, 10, 13, 18, 21, 23, 42, 51, 67, 69, 91], "categoricaldomain": 7, "time_unit": [7, 58], "time_zon": 7, "datetimedomain": 7, "zone": [7, 51], "found": [7, 13, 23, 37, 39, 43, 56, 78, 96, 99, 106], "One": [7, 18, 23, 38, 42, 56, 81, 92, 93, 99, 100, 102], "n": [7, 12, 26, 37, 42, 47, 52, 58, 67, 68, 69, 70, 72, 81, 97, 99, 101, 104, 105], "correspond": [7, 8, 10, 13, 16, 19, 21, 38, 41, 65, 82, 91, 93, 94, 97, 108], "nano": 7, "micro": 7, "millisecond": [7, 51, 59], "debug": [7, 19, 20, 21, 78, 81], "stringifi": [7, 19, 20], "enumdomain": 7, "kei": [7, 10, 13, 18, 23, 38, 40, 43, 52, 56, 82, 90, 91, 96, 97, 101], "hashmap": [7, 18, 23, 43], "d": [7, 11, 19, 20, 21, 23, 37, 41, 42, 50, 59, 60, 65, 69, 74, 77, 78, 82, 100, 104, 105], "userdomain": 7, "equal": [7, 10, 13, 18, 19, 20, 21, 23, 27, 40, 42, 65, 70, 105], "uniqu": [7, 10, 13, 23, 37, 47, 79, 92, 93, 94, 95, 105], "sound": [7, 81], "its": [7, 13, 23, 24, 25, 36, 51, 56, 58, 60, 64, 65, 67, 73, 74, 99, 100, 106, 108], "descript": [7, 18, 19, 20, 24, 35, 77, 78, 93], "test": [7, 12, 18, 77, 82, 101, 104], "wildexprdomain": [7, 18, 23], "frame_domain": 7, "get_california_pums_path": [8, 9, 39, 70, 101, 102], "get_france_lfs_path": [8, 9, 10, 50, 52, 54, 56, 57, 58, 59, 60, 90, 91, 92, 93, 94, 96], "aim": [8, 10, 13, 36, 90], "contingencyt": [8, 10, 13, 14, 91], "mst": [8, 10, 90], "make_contingency_t": [8, 10], "mirror_desc": [8, 10, 13], "canon": [8, 11, 18, 74, 101], "nparray2domain": [8, 11], "nparrayddomain": [8, 11], "array2_domain": [8, 11, 16, 48], "arrayd_domain": [8, 11], "contingency_t": [8, 10, 13, 90, 91], "dpexpr": [8, 13, 55, 62], "lazygroupbyqueri": [8, 13], "sortbi": [8, 13, 50], "dp_len": [8, 13], "decomposit": [8, 15, 89], "linear_model": [8, 15, 88], "tool": [8, 9, 39, 65, 79, 81, 98, 99, 106, 110], "yet": [8, 29, 36, 59, 60, 81, 82, 92, 97], "bind": [8, 64, 78, 82, 99], "some": [8, 13, 21, 23, 36, 37, 39, 42, 43, 45, 48, 56, 59, 62, 63, 64, 65, 69, 70, 72, 74, 77, 78, 81, 82, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 106], "depend": [8, 19, 35, 36, 51, 56, 58, 62, 63, 65, 69, 70, 74, 75, 78, 81, 86, 91, 92, 95, 96, 97], "namespac": [8, 13, 55, 62], "path": [9, 22, 73, 78, 81], "csv": [9, 69, 102, 104, 105], "pum": [9, 83, 104, 105], "file": [9, 69, 78, 79, 81, 82, 104], "censu": [9, 18, 93, 104, 105], "header": [9, 81], "row": [9, 10, 11, 12, 13, 16, 18, 26, 47, 48, 50, 51, 52, 53, 56, 57, 68, 69, 70, 82, 92, 93, 94, 95, 96, 97, 100, 101, 104, 105, 106], "ag": [9, 10, 13, 39, 56, 57, 62, 70, 90, 91, 93, 95, 101, 102, 105], "sex": [9, 10, 39, 52, 57, 70, 90, 91, 93, 95, 101, 102, 105], "educ": [9, 39, 70, 99, 101, 102, 105, 110], "race": [9, 39, 70, 101, 102], "incom": [9, 21, 39, 62, 70, 99, 101, 102], "marri": [9, 39, 70, 101, 102, 105], "eu": 9, "labor": [9, 56, 90, 91], "forc": [9, 56, 60, 90, 91, 92, 93, 95], "survei": [9, 42, 60, 92, 93, 94, 95, 104, 105], "code": [9, 24, 28, 36, 40, 44, 45, 46, 48, 49, 51, 56, 60, 63, 69, 74, 77, 78, 81, 82, 86, 92, 95, 100, 101, 106], "develop": [9, 36, 77, 79, 80, 81, 95], "work": [9, 21, 36, 38, 50, 51, 56, 60, 61, 64, 68, 69, 72, 74, 75, 77, 78, 79, 82, 83, 84, 89, 90, 92, 93, 96, 100, 101, 102, 104, 106], "could": [9, 38, 43, 47, 49, 50, 52, 63, 69, 70, 74, 81, 82, 85, 89, 91, 92, 93, 96, 97, 100, 101, 102, 108], "scientif": 9, "believ": [9, 101], "good": [9, 87, 95, 102], "inadvertantli": 9, "person": [9, 39, 67, 97, 100, 102], "To": [9, 13, 23, 25, 30, 38, 41, 48, 50, 52, 62, 65, 68, 70, 72, 78, 81, 82, 84, 91, 92, 93, 94, 96, 97, 98, 100, 102, 104], "reduc": [9, 10, 13, 22, 23, 38, 50, 52, 60, 67, 68, 70, 78, 92, 93, 96, 102], "download": 9, "tutori": [9, 16, 48, 95], "ve": [9, 17, 27, 28, 36, 70, 74, 79, 82, 85, 86, 92, 95, 100, 105, 106], "preprocess": [9, 27, 50, 51, 52, 56, 63, 66, 69, 90, 91, 92, 93, 95, 98, 101], "singl": [9, 13, 17, 21, 32, 55, 56, 58, 68, 74, 77, 81, 95, 97, 99, 100, 102, 106], "countri": 9, "franc": [9, 92, 93, 95], "drop": [9, 23, 29, 36, 52, 53, 68, 69, 92, 94, 100], "unus": 9, "subset": [9, 21, 23, 53, 55, 70, 81, 91, 100, 105], "concaten": 9, "ll": [9, 18, 26, 36, 39, 41, 42, 43, 47, 48, 52, 56, 57, 58, 63, 64, 67, 68, 69, 70, 72, 77, 78, 82, 86, 89, 92, 93, 94, 95, 96, 97, 102, 104, 105, 106], "present": [9, 43, 60, 90, 91, 92, 93], "run": [9, 10, 17, 18, 21, 32, 34, 36, 41, 42, 47, 48, 56, 62, 67, 70, 72, 78, 82, 86, 90, 100, 101, 102, 104], "matter": [9, 67], "instal": [10, 11, 12, 13, 14, 15, 16, 17, 78, 86, 90, 91, 95], "pip": [10, 11, 12, 13, 14, 15, 16, 17, 78, 86, 91, 95], "short": [10, 77, 82, 110], "pgm": [10, 91], "made": [10, 60, 65, 72, 77, 78, 92, 100, 102, 108], "onewai": [10, 13], "oneway_split": [10, 13, 91], "measure_split": [10, 13], "max_siz": [10, 13], "80": [10, 13, 50, 56, 70, 92, 94, 96, 104], "round": [10, 13, 23, 37, 43, 68, 81, 100, 101, 104, 105], "mmsm22": 10, "adapt": [10, 21, 28, 30, 33, 90, 97], "choos": [10, 13, 18, 23, 27, 40, 41, 47, 48, 50, 60, 65, 67, 69, 75, 77, 81, 92, 97, 102, 108], "least": [10, 12, 39, 47, 48, 67, 81, 97, 101, 105, 110], "stronger": [10, 39, 41, 42], "correl": 10, "cliqu": 10, "per": [10, 13, 16, 18, 42, 47, 50, 70, 92, 95, 105, 108], "step": [10, 18, 48, 68, 72, 78, 84, 94, 97, 108], "budget": [10, 13, 16, 21, 28, 33, 34, 62, 70, 72, 87, 89, 90, 91, 92, 93, 95, 97, 104, 110], "doesn": [10, 25, 44, 56, 65, 68, 69, 72, 96, 104], "suffici": [10, 18, 37, 43, 65, 78, 92], "improv": [10, 17, 26, 36, 48, 60, 77, 85, 91, 97], "model": [10, 16, 17, 26, 36, 40, 42, 46, 49, 50, 63, 64, 66, 68, 84, 89, 90, 91, 95], "scan_csv": [10, 50, 52, 54, 56, 57, 58, 59, 60, 90, 91, 92, 93, 94, 96, 102], "ignore_error": [10, 39, 50, 52, 54, 56, 57, 58, 59, 60, 90, 91, 92, 93, 94, 96], "36": [10, 44, 50, 52, 54, 56, 57, 58, 59, 60, 90, 91, 92, 93, 94, 95, 96], "7": [10, 25, 28, 29, 32, 33, 37, 39, 41, 43, 48, 51, 52, 56, 57, 58, 59, 60, 65, 67, 68, 70, 90, 91, 93, 96, 100, 102, 104, 105, 106, 108], "table_aim": [10, 90], "truncat": [10, 23, 61, 66, 68, 69, 72, 84, 90, 91, 95], "here": [10, 13, 17, 21, 50, 63, 64, 70, 73, 78, 79, 81, 85, 90, 91, 92, 93, 95, 97, 105, 106], "hwusual": [10, 50, 52, 54, 56, 57, 90, 91, 92, 93, 94, 95, 96], "ilostat": [10, 50, 56, 90, 91, 93, 95], "cut": [10, 13, 17, 48, 51, 81, 90, 91, 96], "40": [10, 13, 43, 56, 57, 70, 90, 91, 92, 93, 96, 104, 105], "60": [10, 13, 54, 56, 60, 70, 90, 91, 92, 96, 104, 105], "synthes": [10, 90], "3_807_732": [10, 90], "i64": [10, 13, 18, 24, 37, 43, 74, 90, 91, 92], "55": [10, 90, 105], "446336": [10, 90], "776579": [10, 90], "28": [10, 67, 90], "21838": [10, 90], "53348": [10, 90], "43": [10, 70, 90], "291215": [10, 90], "34": [10, 90, 101], "406155": [10, 90], "106615": [10, 90], "22": [10, 43, 90, 105], "413161": [10, 90], "42": [10, 18, 90], "585227": [10, 90], "11279": [10, 90], "58": [10, 90], "197292": [10, 90], "139579": [10, 90], "59": [10, 90, 102], "371221": [10, 90], "19": [10, 90, 105], "671153": [10, 90], "862917": [10, 90], "339046": [10, 90], "492355": [10, 90], "32": [10, 37, 43, 65, 73, 74, 81, 90], "233661": [10, 90], "863244": [10, 90], "737908": [10, 90], "similar": [10, 21, 23, 40, 41, 56, 60, 65, 69, 70, 78, 79, 81, 82, 89, 95, 100, 104, 106, 108], "exponenti": [10, 21, 40, 91, 107, 109, 110], "mwem": 10, "introduc": [10, 18, 23, 41, 64, 67, 70, 72, 92, 93, 94, 95, 98, 100, 106], "hlm10": 10, "graphic": 10, "fit": [10, 16, 17, 48, 89], "mirror": [10, 16], "descent": [10, 110], "joint": [10, 54, 92, 104], "densiti": [10, 37, 67, 100], "updat": [10, 21, 25, 56, 62, 78, 81, 82, 91], "rule": [10, 97, 102], "higher": [10, 20, 21, 38, 48, 65, 70, 78, 91, 108], "dimension": [10, 11, 38, 40, 60, 104, 105], "liter": [10, 11, 12, 13, 21, 56, 74], "unkei": 10, "make_margin": 10, "ordin": [10, 18], "warm": 10, "markovrandomfield": 10, "memori": [10, 18, 38, 51, 69, 91, 99], "mb": 10, "proport": [10, 12, 39, 42, 60, 91, 92], "alloc": [10, 13, 89, 92, 93], "complement": [10, 35], "spent": 10, "explicit": [10, 13, 21, 38, 56, 82, 90], "workload": [10, 41, 90, 91], "degre": [10, 23], "consid": [10, 13, 19, 24, 36, 39, 41, 42, 51, 56, 57, 65, 66, 68, 72, 81, 90, 91, 93, 96, 99, 101, 104, 105, 108], "abc": 10, "conting": [10, 13, 14, 84, 90, 95], "tabl": [10, 13, 14, 23, 37, 84, 90, 92, 93, 95], "loss_fn": 10, "optim": [10, 18, 21, 78, 110], "signatur": [10, 82], "abstract": [10, 100], "wai": [10, 14, 36, 42, 50, 51, 52, 60, 62, 63, 64, 65, 68, 69, 73, 77, 79, 81, 82, 90, 91, 93, 96, 97, 100, 101, 102], "half": [10, 23, 48, 52, 91, 104, 105], "further": [10, 27, 37, 43, 48, 50, 51, 60, 69, 93, 100, 102, 104, 106], "factori": [10, 13], "k": [10, 13, 18, 21, 23, 37, 42, 43, 65, 69, 72, 100, 104, 105, 106], "low": [10, 18, 38, 39, 40, 70, 82, 86, 90, 91, 99, 104], "open": [10, 77, 78, 79, 93], "linearmeasur": 10, "span": [10, 50, 90, 92, 93, 100], "project": [10, 18, 36, 75, 77, 78, 91, 99, 104, 110], "attr": [10, 13, 91], "ndarrai": [10, 11, 104, 105], "preserv": [10, 18, 48, 50, 56, 64, 68, 91, 92, 96, 110], "project_melt": [10, 91], "datafram": [10, 13, 18, 23, 37, 47, 51, 56, 61, 67, 68, 69, 70, 78, 91, 93, 95, 100, 101, 104, 105], "std": [10, 24, 91], "standard": [10, 26, 68, 70, 91], "deviat": [10, 23, 91], "varianc": [10, 16, 23, 66, 70, 93, 94, 97, 108], "therefor": [10, 37, 43, 48, 56, 60, 62, 68, 69, 92, 93, 100, 102, 106, 108], "central": [10, 42], "theorem": 10, "tend": [10, 67, 72, 92], "toward": [10, 18, 70, 80, 81, 100], "interv": [10, 12, 91, 92, 93, 98, 100], "uncertainti": [10, 101], "gener": [10, 17, 21, 24, 36, 40, 42, 50, 60, 64, 69, 70, 72, 76, 78, 81, 82, 89, 90, 92, 95, 96, 97, 98, 100, 101, 102, 104, 105], "synthet": [10, 84, 87, 95, 99], "off": [10, 18, 28, 41, 42, 56, 69, 70, 79, 93, 95, 102], "stabl": [10, 21, 23, 38, 43, 47, 48, 52, 55, 63, 65, 67, 69, 70, 79, 81, 82, 90, 91, 100, 108], "appear": [10, 23, 51, 77, 82], "fewer": [10, 67, 69, 70, 101], "null": [10, 12, 13, 14, 21, 23, 39, 50, 51, 53, 65, 69, 82, 91, 92, 93, 94, 96, 101, 104, 106], "denot": [10, 13, 19, 37, 42, 43, 65, 66, 74, 81, 97, 100], "priorit": 10, "over": [10, 18, 19, 23, 28, 29, 37, 38, 39, 42, 43, 50, 54, 56, 60, 65, 68, 69, 70, 82, 91, 92, 93, 94, 95, 100, 101, 104], "unknown": [10, 13, 23, 38, 43, 69, 83, 91, 92, 97, 101], "num_select": 10, "mms21": 10, "greedili": 10, "pair": [10, 18, 19, 23, 43, 48, 64, 65, 81, 100, 106], "poorli": [10, 16], "becom": [10, 35, 37, 60, 68, 70, 78, 81, 91, 92, 104], "connect": [10, 79], "minimum": [10, 18, 68, 78, 90], "tree": [10, 23, 90], "table_mst": 10, "second": [10, 18, 28, 41, 52, 59, 65, 78, 81, 82, 94, 100, 104], "conjunct": [10, 57], "specif": [10, 13, 24, 37, 41, 43, 51, 63, 64, 72, 78, 79, 81, 91, 92, 93, 95, 98, 100, 106], "bin": [10, 13, 23, 39, 47, 56, 67, 69, 78, 90, 93, 96], "edg": [10, 13, 23, 42, 56, 67, 69, 72, 90, 97, 107], "replic": 10, "binomialcnd": [11, 12, 39], "confidence_interv": [11, 12, 39, 97], "p_valu": [11, 12, 39], "one_sided_confidence_interv": [11, 12], "one_sided_pvalu": [11, 12], "one_sided_uniformly_most_powerful_test": [11, 12, 39], "two_sided_confidence_interv": [11, 12], "two_sided_pvalu": [11, 12], "norm": [11, 16, 67], "num_column": [11, 16, 48, 89, 91], "cardin": [11, 100], "namedtupl": [11, 16], "categor": [11, 18, 23, 56, 62, 69, 91], "center": [11, 12, 16, 37, 100, 106], "region": [11, 72, 100], "design": [11, 13, 64, 79, 92, 99, 110], "assum": [11, 21, 23, 36, 41, 51, 63, 70, 81, 82, 92, 94, 97, 100, 102, 104, 105], "runtimetypedescriptor": [11, 24], "_genericalia": [11, 24], "genericalia": [11, 24], "conduct": [12, 13, 21, 39, 56, 70, 72, 93, 104, 105], "binomi": [12, 42], "instanti": [12, 39], "theta": [12, 39], "cnd": 12, "realiz": [12, 100, 101], "counter": [12, 39, 42, 70, 100, 105], "increment": [12, 27, 30, 39], "outcom": [12, 18, 39, 70, 81, 92, 93, 99, 103], "tail": [12, 39, 43], "hypothesi": [12, 18, 39, 104], "less": [12, 18, 19, 23, 39, 41, 52, 53, 56, 60, 67, 70, 72, 86, 87, 92, 93, 95, 97, 100], "right": [12, 16, 19, 23, 39, 47, 48, 56, 57, 75, 77, 93, 100, 108], "success": [12, 27, 39, 47, 77], "rate": [12, 39, 104, 110], "observ": [12, 13, 39, 70, 92, 93, 100], "trial": [12, 104], "ump": 12, "choic": [12, 19, 25, 37, 41, 42, 43, 68, 74, 77, 92, 97, 100, 104, 106, 108], "contingencytablequeri": [13, 14], "add": [13, 18, 23, 37, 41, 43, 51, 55, 60, 64, 68, 69, 78, 81, 82, 91, 92, 93, 95, 96, 99, 100, 105, 108], "per_group": [13, 50, 60, 96], "num_group": [13, 50, 96], "describ": [13, 16, 18, 21, 23, 30, 37, 42, 43, 55, 63, 64, 65, 68, 74, 78, 92, 93, 95, 96, 100, 101, 106], "significantli": [13, 60, 92, 93, 97], "expr": [13, 18, 23], "mani": [13, 17, 36, 38, 41, 42, 43, 47, 48, 52, 56, 57, 58, 60, 69, 70, 72, 74, 77, 78, 79, 82, 92, 93, 95, 96, 100, 101, 104], "typic": [13, 38, 39, 42, 46, 49, 51, 62, 64, 65, 67, 69, 72, 74, 81, 84, 100, 106], "object": [13, 17, 64, 71, 73], "shortcut": [13, 22, 30], "exact": [13, 37, 43, 70, 92, 100, 101, 105, 106], "fill": [13, 23, 24, 28, 44, 68, 70, 81, 92, 101], "known": [13, 18, 19, 23, 28, 36, 42, 64, 69, 92, 100, 102, 105], "visit": 13, "collect": [13, 18, 32, 42, 51, 52, 56, 57, 58, 59, 60, 62, 69, 70, 72, 73, 82, 92, 93, 96, 100, 102, 104], "u32": [13, 21, 24, 50, 60, 62, 74, 81, 92, 94, 96], "ad": [13, 14, 17, 18, 21, 33, 40, 41, 48, 52, 56, 60, 67, 68, 69, 74, 77, 78, 79, 82, 91, 92, 96, 100, 101, 105, 108], "three": [13, 21, 22, 32, 38, 43, 47, 48, 51, 67, 81, 82, 91, 92, 93, 97, 102, 105, 108], "standard_devi": [13, 18], "sqrt": [13, 18, 43, 60, 104, 105, 108], "mean": [13, 16, 19, 21, 23, 26, 33, 37, 40, 42, 43, 50, 51, 52, 56, 60, 64, 65, 67, 68, 69, 70, 78, 82, 89, 91, 93, 94, 96, 97, 100, 101, 102, 104, 105, 106, 108], "amount": [13, 17, 48, 50, 60, 67, 70, 93, 94, 96, 97, 100, 102, 104, 105, 108], "determin": [13, 18, 21, 28, 37, 38, 42, 43, 65, 68, 72, 82, 92, 97, 104, 105, 106], "clip": [13, 21, 50, 51, 72, 92, 93, 98, 100, 101, 104, 106], "rel": [13, 23, 52, 81, 92, 93, 96, 101, 104], "config": 13, "float_precis": 13, "just": [13, 18, 28, 30, 34, 38, 40, 42, 47, 56, 60, 63, 67, 68, 70, 72, 73, 77, 78, 86, 89, 91, 92, 94, 95, 96, 100, 102, 105, 108], "prevent": [13, 34, 56, 92, 105], "doctest": 13, "denomin": [13, 70, 108], "separ": [13, 23, 40, 59, 66, 68, 69, 78, 92, 93, 101], "ratio": [13, 70, 100], "median": [13, 18, 23, 52, 62, 67], "calibr": [13, 18, 23, 39, 60, 69, 93, 97, 106, 110], "entropi": [13, 105], "quantil": [13, 18, 23, 48, 52, 97, 107, 109, 110], "much": [13, 41, 43, 51, 52, 56, 60, 65, 66, 70, 90, 91, 92, 93, 94, 100, 101, 102, 104, 106, 108], "10": [13, 17, 18, 21, 25, 26, 28, 29, 31, 32, 33, 34, 37, 39, 43, 46, 47, 48, 50, 51, 56, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 78, 82, 93, 94, 95, 100, 104, 105, 106, 108], "30": [13, 51, 60, 70, 93, 96, 104], "50": [13, 18, 38, 47, 67, 70, 92, 93, 97, 101, 104, 108], "70": [13, 67, 70, 104], "90": [13, 70, 104], "likelihood": [13, 38, 70, 72], "closer": [13, 60, 70, 82, 108], "n_uniqu": [13, 52, 92], "address": 13, "chosen": [13, 29, 67, 69, 94, 100, 108, 110], "accord": [13, 51, 56, 60, 68, 69, 106], "standard_dev": 13, "null_count": [13, 52, 92], "boolean": [13, 18, 21, 23, 55, 61, 65, 72, 96, 104, 105], "nulliti": [13, 23, 51, 69], "25": [13, 17, 48, 67, 92, 100], "quartil": [13, 67, 92], "actual": [13, 17, 37, 39, 42, 48, 56, 65, 72, 81, 92, 101, 102, 105], "impli": [13, 20, 21, 93, 96, 100], "sever": [13, 28, 30, 48, 60, 66, 77, 81, 92], "oper": [13, 36, 37, 43, 55, 56, 61, 63, 64, 66, 68, 69, 86, 101, 108], "due": [13, 23, 36, 65, 68, 70, 72, 92, 93, 101], "mimic": [13, 74, 81], "few": [13, 32, 43, 70, 71, 78, 93, 95, 105], "across": [13, 36, 50, 92, 93, 95, 97, 106], "union": [13, 21, 24, 95, 100], "predic": [13, 21, 53, 56, 57, 59, 65, 72, 81, 102, 104, 105], "discard": [13, 43, 93, 96], "relev": [13, 21, 36, 64, 106], "group_bi": [13, 18, 50, 51, 52, 56, 57, 58, 59, 60, 93, 94, 96], "maintain_ord": 13, "named_bi": 13, "join": [13, 37, 76, 78, 93, 99], "left_on": 13, "right_on": 13, "suffix": 13, "_right": 13, "join_nul": 13, "coalesc": 13, "allow_parallel": 13, "force_parallel": 13, "logic": [13, 50, 81, 106], "named_expr": 13, "statement": [13, 22, 64, 98, 100, 101], "don": [13, 27, 36, 44, 47, 48, 56, 62, 64, 65, 67, 68, 70, 78, 81, 82, 91, 92, 93, 100, 105, 106], "select_seq": 13, "sort": [13, 18, 42, 50, 56, 57, 58, 59, 93, 96, 100], "more_bi": 13, "descend": 13, "nulls_last": 13, "multithread": 13, "subtract": [13, 81], "95": [13, 18, 21, 37, 39, 92, 93, 98, 104, 105], "convict": 13, "dtype": [13, 18, 42, 51, 56, 59, 91], "ignor": [13, 16, 18, 27, 67, 68, 70, 81, 82, 100, 102], "6": [13, 21, 25, 26, 28, 29, 31, 32, 33, 37, 39, 41, 42, 43, 48, 52, 56, 60, 65, 67, 68, 70, 93, 100, 102, 104, 105, 108], "429605": 13, "interpret": [13, 70, 78, 82, 98, 100, 108], "def": [13, 18, 21, 28, 42, 43, 44, 46, 47, 48, 49, 56, 67, 70, 81, 89, 100, 101, 102, 104, 105], "interpret_accuraci": 13, "truncate_num_group": [13, 50, 94], "keep": [13, 23, 28, 50, 51, 68, 70, 100, 101, 104], "truncate_per_group": [13, 50, 94], "with_column": [13, 52, 56, 57, 58, 59, 91, 92, 93, 96], "with_columns_seq": 13, "with_kei": [13, 52, 56, 93], "lgb_plan": 13, "lazygroupbi": 13, "agg": [13, 18, 50, 51, 52, 56, 57, 58, 59, 60, 93, 94], "named_agg": 13, "alias": 13, "max_group": [13, 93], "what": [13, 44, 47, 62, 64, 65, 69, 74, 77, 79, 82, 87, 97, 100, 102, 105, 106, 107], "publicli": [13, 97], "might": [13, 32, 65, 73, 81, 92, 101, 105], "find": [13, 19, 21, 23, 28, 41, 42, 56, 65, 69, 71, 72, 79, 81, 98, 100, 101, 105, 106], "Be": [13, 65, 78, 93, 97], "awar": [13, 36, 60, 77, 93, 99], "aspect": [13, 64, 81, 93], "mark": [13, 81, 82, 86, 93], "subject": [13, 21, 25, 36, 93, 100], "protect": [13, 28, 38, 40, 52, 56, 64, 68, 70, 92, 93, 95, 97, 102, 104, 108, 110], "so": [13, 17, 19, 23, 27, 30, 31, 41, 42, 45, 47, 52, 54, 56, 57, 58, 60, 65, 66, 67, 69, 70, 72, 73, 74, 77, 78, 79, 82, 87, 91, 92, 93, 94, 95, 96, 100, 101, 102, 105, 106], "conserv": [13, 92], "By": [13, 37, 43, 50, 63, 81, 91, 92, 94, 100, 104], "analysi": [13, 23, 37, 42, 43, 49, 50, 60, 65, 68, 70, 74, 83, 89, 93, 95, 97, 101, 108, 110], "formal": [13, 36], "effect": [13, 18, 23, 36, 51, 60, 68, 92, 99, 104, 105, 108], "weaker": [13, 60], "advertis": [13, 106], "distinct": [13, 22, 23, 25, 100, 104], "max_influenced_partit": 13, "issu": [13, 36, 77, 95], "paper": [13, 64, 79], "widespread": [13, 23], "underestim": [13, 23, 68, 69, 70], "know": [13, 21, 25, 34, 36, 37, 42, 43, 47, 50, 62, 64, 70, 79, 85, 92, 93, 96, 97, 99, 100, 101, 102, 104, 106], "veri": [13, 39, 41, 44, 56, 60, 64, 67, 69, 70, 82, 92, 93, 100, 101, 104, 105, 106], "loos": 13, "max_num_partit": 13, "max_partition_contribut": 13, "max_partition_length": 13, "public_info": 13, "onc": [13, 21, 26, 41, 65, 74, 77, 78, 79, 86, 95, 104], "those": [13, 38, 46, 49, 56, 77, 82, 92, 96, 104, 106], "evalu": [13, 18, 21, 32, 63, 64, 65, 72, 82, 101, 104, 105, 106], "against": [13, 23, 36, 40, 56, 68, 77, 105, 108], "repeatedli": [13, 21, 41, 70], "exhaust": [13, 28, 33, 90, 91], "lazi": [13, 92, 93], "circumv": 13, "entir": [13, 23, 25, 26, 48, 70, 97, 106], "becaus": [13, 16, 23, 25, 27, 32, 34, 36, 37, 39, 42, 43, 45, 48, 50, 51, 56, 58, 60, 63, 64, 65, 66, 68, 69, 70, 72, 78, 81, 82, 86, 89, 91, 92, 93, 95, 96, 97, 100, 102, 104, 108], "ever": [13, 42, 46, 50, 60, 92, 93, 96, 102], "analyst": [13, 25, 70, 101, 102, 105], "extend": [13, 14, 62, 81, 85], "shuffl": [13, 48, 93, 104], "enabl": [13, 18, 21, 27, 35, 78, 81, 86, 91, 95, 102], "follow": [13, 15, 19, 21, 23, 27, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 55, 56, 60, 62, 65, 67, 68, 69, 74, 77, 78, 82, 86, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 106, 108], "sort_bi": [13, 50], "maintain": [13, 97, 104, 110], "thread": [13, 99, 106], "place": [13, 18, 24, 78, 79, 82, 95, 105], "oneway_scal": [14, 91], "oneway_threshold": [14, 91], "special": [14, 40, 73, 106, 108], "merg": 14, "parent": [14, 67], "pca": [15, 16, 84, 87, 97], "pcaepsilon": [15, 16], "make_private_pca": [15, 16], "linearregress": [15, 17], "scikit": [15, 16, 17, 87, 89], "learn": [15, 16, 17, 35, 74, 78, 87, 89, 102], "organ": [15, 21, 78, 99], "our": [16, 18, 22, 36, 37, 42, 47, 49, 50, 70, 77, 78, 81, 92, 95, 97, 100, 101, 102, 104, 105, 108], "diffenti": 16, "row_norm": [16, 89], "n_sampl": [16, 17, 89], "n_featur": [16, 17, 89], "n_compon": [16, 89], "n_chang": 16, "whiten": 16, "wrapper": [16, 86], "covari": [16, 89], "kareem": 16, "amin": 16, "et": [16, 104], "al": [16, 104], "try": [16, 17, 24, 35, 37, 47, 51, 58, 60, 68, 72, 78, 84, 99], "importerror": 16, "detail": [16, 21, 30, 36, 37, 40, 64, 65, 66, 69, 72, 78, 81, 85, 92, 99, 101, 107, 109], "components_": [16, 89], "multipli": [16, 18, 23, 68, 69, 106, 108], "squar": [16, 23, 37, 48, 60, 105], "root": [16, 28, 37, 78], "divid": [16, 66, 67, 69, 92, 93], "singular": 16, "uncorrel": 16, "compon": [16, 36, 64, 73, 77, 81, 89, 106], "wise": 16, "train": [16, 17], "eigval": 16, "eigvec": 16, "eigenvalu": [16, 89], "eigenvector": [16, 89], "portion": [16, 90], "eigendecomposit": 16, "cross": [16, 72], "product": [16, 19, 77, 92, 104, 105], "matrix": [16, 17, 89, 105], "sscp": 16, "beforehand": 16, "domin": [16, 43, 56, 105], "unit_epsilon": 16, "num_compon": 16, "clamp": [16, 18, 21, 23, 34, 39, 44, 65, 70, 73, 74, 97, 100, 101], "vt": 16, "theil": [17, 48], "sen": [17, 45], "regress": [17, 45, 68, 79, 84, 87, 110], "plugin": [17, 18, 35, 47, 48, 70, 73, 78, 85], "x_bound": [17, 48], "y_bound": [17, 48], "candidates_count": 17, "fraction_bound": 17, "75": [17, 42, 48, 67, 92, 104], "interfac": [17, 21, 24, 28, 36, 68, 78, 79, 81, 82, 87, 99, 104, 105, 106], "parallel": 17, "offer": [17, 36, 87, 100], "moment": [17, 68, 77], "target": [17, 69, 70, 72, 78, 92, 98, 102, 105], "pairwis": [17, 23, 68, 69], "predict": [17, 101], "robust": [17, 48, 70, 100, 104], "cost": [17, 38, 48], "need": [17, 18, 21, 22, 23, 27, 30, 33, 38, 40, 48, 50, 56, 63, 64, 65, 67, 68, 69, 72, 73, 78, 79, 81, 82, 87, 89, 92, 96, 100, 102, 104, 105, 106], "later": [17, 35, 48, 77, 78, 82, 95, 100], "percentil": [17, 48], "modulenotfounderror": 17, "pytest": [17, 42, 78, 79], "skip": [17, 42, 78], "lin_reg": 17, "never": [17, 30, 51, 65, 74, 82, 91, 100], "copi": [17, 48, 95], "spars": [17, 18, 47], "notimplementederror": 17, "bitvec": [18, 42], "frequenc": [18, 38, 42, 43, 91], "frac": [18, 19, 42, 70, 100, 108], "bitvector": [18, 42], "flip": [18, 41, 42, 104], "encod": [18, 51, 56, 73, 93], "total_limit": [18, 38], "value_limit": [18, 38], "size_factor": 18, "o": [18, 41, 67, 68, 69, 70, 74, 78], "process": [18, 32, 34, 35, 36, 37, 38, 41, 42, 43, 51, 56, 65, 66, 67, 68, 70, 79, 80, 82, 86, 89, 91, 97, 99, 100, 106], "beta": 18, "There": [18, 30, 36, 37, 43, 64, 65, 66, 69, 70, 71, 72, 74, 78, 79, 82, 95, 99, 100, 104], "trade": [18, 28, 70, 79], "larg": [18, 21, 37, 38, 43, 56, 60, 67, 68, 72, 77, 81, 91, 92, 93, 96, 97, 100, 104, 105, 108], "hash": [18, 38, 81, 104, 105], "collis": [18, 38], "alp21": 18, "fast": [18, 37, 43], "ci": [18, 39, 78, 79], "l01infdist": [18, 20, 23, 40, 43], "absolutedist": [18, 20, 21, 23, 37, 40, 43, 65, 68, 69, 74, 82, 86, 100, 106], "\u03b2": 18, "tailor": [18, 87, 89], "tulap": [18, 39], "av23": [18, 39], "qi": [18, 40], "granular": [18, 47], "print": [18, 21, 25, 26, 28, 29, 32, 33, 34, 37, 41, 42, 43, 47, 66, 67, 68, 70, 73, 89, 92, 96, 100, 101, 102, 104, 105, 106], "Or": [18, 65, 85], "readabl": 18, "propos": 18, "computation": [18, 50], "effici": [18, 50, 68, 69, 95], "looser": [18, 26, 46, 49], "smallest": [18, 21, 41, 64, 65, 72, 74, 82, 93, 100], "exclud": [18, 51, 54, 72, 92, 95, 102], "exce": [18, 33, 50, 102], "restrict": [18, 21, 23, 56, 65, 68, 69, 81, 82, 106], "constant": [18, 21, 23, 40, 44, 46, 66, 68, 70, 74, 81, 97, 101, 105, 108], "grs12": [18, 23], "univers": [18, 23, 86, 110], "maxim": [18, 23, 47, 100], "quantifi": [18, 19, 63, 94, 97], "geometr": [18, 37, 110], "done": [18, 19, 42, 106], "cks20": 18, "appropri": [18, 37, 40, 68, 102, 106, 108], "negat": [18, 41, 53, 108], "index": [18, 23, 41, 70, 109], "highest": [18, 21], "tia": [18, 23, 67, 69, 74, 82], "linfdist": [18, 20, 23, 40], "usiz": [18, 23, 24, 67, 69], "min": [18, 37, 41, 68, 70, 96, 97, 100, 109], "select_index": 18, "bottom": [18, 35, 78, 104], "govern": [18, 27, 97, 99], "exprplan": 18, "neighbor": [18, 21, 23, 37, 42, 43, 48, 63, 64, 65, 68, 69, 97, 106], "tune": [18, 102], "abl": [18, 25, 35, 56, 63, 78, 92, 101, 102], "tradeoff": [18, 38, 66, 98, 108], "insid": [18, 28, 79, 81, 82, 91], "still": [18, 21, 25, 28, 32, 33, 36, 37, 38, 41, 42, 43, 44, 50, 52, 65, 66, 67, 68, 70, 72, 77, 81, 89, 93, 100, 101, 102, 104, 105, 106], "empti": [18, 24, 62, 67, 92], "imagin": [18, 38, 47, 50, 81, 101], "elementari": 18, "school": [18, 99], "pet": 18, "grade": 18, "pet_count": 18, "lf_domain_with_margin": 18, "With": [18, 39, 60], "now": [18, 25, 26, 28, 29, 33, 39, 41, 42, 48, 49, 60, 62, 67, 68, 70, 78, 81, 82, 90, 91, 92, 93, 97, 100, 101, 102, 104, 106, 108], "piec": [18, 27, 30, 79, 82], "dp_sum_pets_by_grad": 18, "df": [18, 62, 70, 93, 95, 101], "from_record": [18, 70], "No": [18, 24, 95, 100], "kindergarten": 18, "grader": 18, "chicken": 18, "orient": 18, "tighter": [18, 65, 70, 97], "prob": [18, 21, 42], "discretedist": [18, 20, 40, 42], "num_categori": 18, "random_str": 18, "99": [18, 21, 50, 56, 57, 92, 93, 94, 95, 96], "constant_tim": 18, "rappor": 18, "aggregat": 18, "bernoulli": [18, 39], "sampler": [18, 37, 43], "extrem": [18, 39, 67, 72, 93], "slow": 18, "m_rr": [18, 42], "8006676684558611": 18, "formula": [18, 42, 70, 100], "ln": [18, 19, 41, 42], "prepar": [18, 56, 59, 60, 84, 92, 93, 95], "packbit": [18, 42], "array_equ": [18, 105], "8": [18, 19, 21, 25, 28, 29, 31, 32, 33, 37, 39, 41, 42, 43, 48, 50, 52, 56, 65, 67, 68, 70, 72, 74, 91, 93, 94, 100, 102, 104, 105, 106, 108], "12": [18, 23, 24, 37, 39, 51, 56, 67, 68, 93, 100, 101, 104, 105], "uint8": [18, 42, 51], "roundtrip": 18, "mech": 18, "frombuff": [18, 42], "tobyt": 18, "compar": [18, 43, 48, 64, 65, 100, 104, 105], "unpackbit": [18, 42], "slower": [18, 41], "random_bool": 18, "max": [18, 19, 21, 47, 64, 65, 66, 68, 69, 70, 81, 92, 97, 100, 106, 108], "report": [18, 40, 47, 76, 81, 109], "noisi": [18, 23, 37, 38, 42, 43, 47, 67, 70, 92, 93, 100, 106, 109], "privacy_map": [18, 44, 46, 63, 82, 106], "everi": [18, 19, 23, 45, 65, 90, 99, 100, 105], "associ": [18, 21, 23, 38, 65, 68, 94, 100, 101], "close": [18, 19, 21, 23, 63, 64, 65, 68, 70, 81], "anydomain": 18, "anymetr": 18, "anymeasur": 18, "anyobject": 18, "const_funct": 18, "_arg": [18, 46], "_d_in": 18, "user_measur": 18, "pm": 19, "smaller": [19, 23, 39, 43, 56, 60, 65, 70, 81, 91, 92, 93, 102, 108], "cdot": [19, 37, 42, 43, 48, 66, 100, 106], "commonli": [19, 38, 39, 53, 60, 62, 65, 82, 93], "notion": [19, 64], "possibl": [19, 21, 36, 38, 42, 50, 63, 64, 65, 70, 72, 77, 81, 82, 91, 93, 100, 102, 106], "whenev": 19, "exist": [19, 21, 23, 69, 79, 81, 93, 99, 104], "event": 19, "e": [19, 37, 42, 64, 78, 81, 100, 101, 102, 106], "pr": [19, 77, 78, 81, 100], "d_": [19, 42, 66, 68, 100, 106], "mathrm": [19, 42, 67, 100], "_e": 19, "condit": [19, 41, 52, 70, 106], "until": [19, 36, 67, 70], "neg": [19, 20, 23, 42, 52, 68, 69, 72, 81, 97, 100], "smooth": [19, 37, 65], "infti": [19, 38, 43, 108], "max_": [19, 100], "subseteq": [19, 100], "textrm": 19, "supp": [19, 100], "big": 19, "dfrac": 19, "leq": [19, 100], "profil": [19, 21, 31, 43, 45, 93], "monoton": [19, 20, 21, 23, 47, 68, 69, 72], "decreas": [19, 70, 93, 105, 108], "ep": [19, 105], "els": [19, 23, 24, 56, 102], "enough": [19, 38, 43, 64, 93, 102], "satur": [19, 23, 68], "499": 19, "invert": 19, "suitabl": [19, 28, 67, 72, 93, 106], "insuffici": [19, 33], "infinit": [19, 20, 53, 81, 100, 101], "inf": [19, 56, 96], "r\u00e9nyi": 19, "rdp": 19, "mathbb": [19, 100], "userdiverg": 19, "essenti": [19, 27, 52, 60, 81, 84, 95], "beyond": [19, 27, 87], "meaning": [19, 44, 56, 57, 93, 96], "fuction": 20, "partit": [20, 43, 93, 97], "l02infdist": [20, 40], "l2distanc": [20, 21, 40, 69, 100], "userdist": 20, "pseudo": [20, 77, 104, 105], "symmetri": 20, "le": [20, 100, 106], "triangl": [20, 100], "inequ": [20, 81], "program": [21, 35, 36, 63, 78, 81, 82, 86, 100, 106, 110], "framework": [21, 34, 35, 36, 65, 67, 81, 82, 86, 96, 97, 99, 106, 107], "top": [21, 35, 37, 104], "mass": [21, 43], "thei": [21, 24, 27, 28, 33, 35, 36, 44, 49, 53, 60, 63, 64, 65, 67, 69, 70, 78, 81, 82, 91, 94, 100, 102, 106], "alwai": [21, 44, 51, 56, 60, 64, 65, 67, 72, 74, 79, 81, 93, 101, 102, 106], "store": [21, 23, 28, 51, 65, 81, 91], "lp_anydomain": 21, "section": [21, 23, 27, 37, 38, 40, 43, 65, 68, 69, 70, 77, 78, 81, 82, 83, 84, 92, 93, 95, 96, 98, 100, 101, 102, 103, 106, 107, 108, 109], "doc": [21, 47, 74, 79, 81], "type_": 21, "prescrib": 21, "val": [21, 101], "membership": [21, 103, 107], "lp_anyfunct": 21, "lp_anymeasur": 21, "__call__": 21, "101": [21, 108], "concis": [21, 106], "tran": [21, 49, 63], "integr": [21, 23, 37, 43, 68, 77, 79, 81, 92, 93, 99, 100], "lp_anymetr": 21, "lp_anyodomet": 21, "respond": [21, 42, 56, 60, 70, 93], "honestli": 21, "meas_rr": 21, "fulli": [21, 30, 33, 36, 42], "trivial": [21, 81, 100, 101, 104], "qbl_comp": 21, "consumpt": [21, 25, 106], "8109302162163288": 21, "variant": [21, 58, 81], "messag": [21, 37, 66, 70, 81, 82], "errorvari": 21, "stack": [21, 35, 48, 77, 105], "trace": [21, 35, 104], "give": [21, 35, 40, 64, 65, 66, 67, 69, 72, 79, 82, 92, 95, 100, 104, 105, 106], "vice": 21, "versa": 21, "query_typ": 21, "remov": [21, 47, 48, 51, 56, 58, 64, 65, 66, 68, 69, 77, 83, 92, 93, 96, 97, 100, 106, 108], "lp_anytransform": 21, "toa": [21, 23, 49, 67, 69, 82, 101], "n2": 21, "n3": 21, "were": [21, 23, 27, 37, 43, 63, 65, 68, 69, 72, 91, 92, 93, 95, 97, 100, 105], "apart": [21, 56], "ouput": 21, "return_sign": 21, "decis": [21, 72], "boundari": [21, 72], "unari": 21, "awai": [21, 41, 70, 72, 108], "inferr": 21, "invalid": [21, 23, 72, 93, 96], "valueerror": [21, 24, 91], "cannot": [21, 23, 24, 46, 49, 56, 57, 58, 60, 70, 93, 95, 96, 99, 100, 101], "histogram": [21, 23, 43, 51, 74, 83, 97, 100], "emit": [21, 27, 37, 43, 55, 63, 64, 81, 106], "dp_mean": [21, 70, 97, 101], "5235561269546629": 21, "make_chain": 21, "tightli": [21, 65], "said": [21, 99], "complet": [21, 23, 30, 32, 36, 37, 38, 41, 42, 43, 66, 67, 68, 69, 75, 77, 79, 82, 86, 89, 105, 106], "parameter": [21, 108], "nearest": [21, 23, 37, 43, 68, 81, 92, 105, 108], "major": [21, 36, 99, 101], "pre": [21, 38, 90], "produc": [21, 27, 30, 37, 41, 43, 64, 69, 81, 101, 106, 110], "doubl": [21, 37, 43, 50, 65, 74, 96], "discrete_laplac": 21, "widest": 21, "admiss": 21, "10_000": [21, 37, 39, 42, 68, 89], "ideal": [21, 23, 36, 38, 65, 67, 81, 97], "make_fixed_laplac": 21, "polici": [21, 99], "research": [21, 36, 79, 95, 99], "accur": [21, 50, 70, 72, 87, 91, 105], "symmetr": [21, 23, 40, 64, 65, 68, 69, 100, 106], "500": [21, 34, 38, 67], "000": [21, 92], "out": [21, 23, 24, 28, 36, 38, 68, 72, 73, 78, 81, 82, 89, 93, 100, 102, 104, 106], "necessary_scal": 21, "data_s": [21, 70, 101], "500_000": 21, "admit": [21, 42], "1000000": 21, "1498": 21, "dp_json": 21, "disallow": [21, 62], "binari": [21, 51, 56, 57, 65, 73, 78, 82], "band": [21, 72], "Will": 21, "attempt": [21, 72, 78, 81, 82, 90, 105], "recov": [21, 102], "throw": [21, 56, 58, 65, 72, 82], "ok": [21, 81, 86], "li": [21, 43], "dp_obj": [21, 73], "notebook": [22, 37, 40, 41, 43, 64, 67, 68, 69, 79, 81, 82, 89, 98, 100, 101, 104, 105, 106, 110], "begin": [22, 36, 42, 50, 77, 81, 99], "after": [22, 23, 48, 67, 69, 78, 81, 82, 86, 87, 96, 100, 101, 106], "Its": 22, "deterministicli": 23, "size_guess": [23, 67], "branching_factor": [23, 67], "minim": [23, 72, 105], "cdf": [23, 67, 100], "ari": [23, 69], "qyl13": 23, "understand": [23, 36, 64, 65, 73, 99, 106, 107], "hierarch": 23, "guess": [23, 67, 69, 70, 102], "leaf_count": [23, 67], "expand": [23, 45, 79], "branch": [23, 67], "children": [23, 67, 105], "ta": [23, 69, 74], "leaf": [23, 67], "node": [23, 67, 97], "factor": [23, 38, 41, 60, 67, 96, 97, 101, 102, 108], "shallow": 23, "size_limit": [23, 68], "advantag": [23, 52, 82, 102, 104, 105], "better": [23, 41, 43, 50, 60, 67, 78, 83, 92, 102, 108], "establish": [23, 56, 70, 100, 101, 106], "summat": [23, 68, 69], "item": [23, 42, 43, 73, 81, 92, 96, 102], "f32": [23, 24, 37, 43, 68, 69, 74, 81], "precis": [23, 24, 37, 38, 43, 64, 65, 68, 74, 81, 97, 100], "csvw22": 23, "dmns06": 23, "overflow": [23, 65, 68, 69, 72, 81, 92], "impos": 23, "overestim": [23, 70], "share": [23, 32, 41, 51, 56, 63, 68, 69, 78, 92, 93, 94, 96, 100, 105], "sign": [23, 65, 68, 69, 72, 74, 75, 77, 81], "failur": [23, 62], "handl": [23, 42, 65, 69, 73, 77, 91, 92], "summari": [23, 69, 92, 93, 110], "cumul": [23, 67], "datum": [23, 69], "let": [23, 36, 39, 43, 48, 60, 63, 64, 65, 70, 81, 82, 85, 86, 90, 91, 92, 93, 95, 99, 100, 102, 105], "inclus": 23, "layer": [23, 101], "balanc": [23, 93], "implicitli": [23, 69, 82], "breadth": 23, "leav": 23, "even": [23, 35, 41, 46, 48, 50, 53, 56, 57, 60, 65, 67, 68, 72, 78, 79, 92, 93, 99, 100, 102], "apport": 23, "hrms09": 23, "boost": 23, "through": [23, 24, 36, 45, 48, 64, 79, 86, 91, 93, 95, 99, 106], "tv": [23, 40], "bv17": 23, "finit": [23, 37, 39, 41, 43, 68, 100, 106, 110], "tk": [23, 40, 43, 78], "null_categori": [23, 67], "end": [23, 34, 37, 42, 69, 70, 77, 81, 82, 104], "col_nam": [23, 101], "dataframedomain": [23, 82], "hashabl": [23, 69], "column_nam": 23, "imput": [23, 51, 56, 62, 70, 92, 93, 101], "fall": 23, "infin": [23, 41, 47, 81, 100], "ident": [23, 26, 81], "warn": [23, 51, 56], "won": [23, 47, 68, 92, 93, 102], "chainabl": 23, "wherea": [23, 60, 65, 96, 108], "replac": [23, 43, 67, 82, 90, 91, 100, 101], "uniformli": [23, 90, 91], "treat": [23, 70, 74], "op": [23, 24], "enforc": [23, 56, 57, 82, 86, 93, 94], "boundedmetr": 23, "unboundedmetr": 23, "unord": 23, "permut": [23, 41], "orderedmetr": 23, "u64": [23, 24, 74], "bin_edg": 23, "interpol": [23, 67], "wa": [23, 27, 39, 41, 42, 65, 67, 68, 92, 93, 95, 99, 100, 102, 105, 108], "befor": [23, 25, 29, 33, 39, 42, 47, 49, 50, 56, 61, 62, 63, 67, 69, 70, 72, 75, 78, 79, 82, 91, 92, 93, 96, 100, 102, 105], "downcast": 23, "load": [23, 47, 69, 73, 78], "token": 23, "line": [23, 37, 48, 67, 70, 78, 81, 82, 93], "exprdomain": 23, "indicator_column": 23, "keep_column": 23, "ssd": 23, "unorderedmetr": 23, "stability_map": [23, 47, 48, 49, 63, 82], "runtim": [23, 37, 41, 43, 51], "ddof": 23, "dhk15": 23, "social": [23, 93], "scienc": [23, 48, 99], "freedom": 23, "bridg": 24, "reli": [24, 35, 60, 73, 78], "secur": [24, 76, 78, 79, 93, 99], "natur": [24, 38, 50, 105], "fine": [24, 50], "grain": [24, 50], "gap": [24, 37, 81], "manipul": [24, 51, 55, 58, 59, 61, 62, 68], "normal": [24, 48, 60, 105, 108], "public_exampl": 24, "py_object": 24, "recogn": [24, 81], "subtyp": 24, "type_nam": 24, "hint": [24, 79], "plaintext": 24, "depth": [24, 68, 74, 81], "inherit": [24, 90], "getitem": 24, "stdlib": 24, "throughout": [24, 56, 74, 93], "particularli": [24, 57, 74, 79], "unspecifi": 24, "u8": [24, 65, 74], "u16": [24, 74], "i8": [24, 74], "i16": [24, 74], "view": [25, 35, 77, 91, 97], "anoth": [25, 40, 42, 50, 64, 65, 66, 68, 79, 81, 82, 87, 91, 93, 96, 100], "gain": [25, 70], "case": [25, 27, 37, 39, 40, 41, 42, 43, 45, 50, 56, 60, 62, 65, 66, 68, 69, 70, 72, 73, 77, 79, 81, 82, 90, 92, 93, 94, 95, 97, 100, 102, 104, 106, 107, 108], "explicitli": [25, 36, 37, 43, 52, 60, 74, 82, 93, 97, 102], "meas_adaptive_comp": [25, 28], "1l": [25, 28, 29, 32, 33, 97], "int_dataset": [25, 28, 29, 32, 33], "qbl_adaptive_comp": [25, 28], "2l": [25, 29, 32, 33], "3l": [25, 29, 32, 33, 97], "4l": [25, 29, 32, 33], "5l": [25, 29, 32, 33], "6l": [25, 29, 32, 33], "7l": [25, 29, 32, 33], "8l": [25, 29, 32, 33], "9l": [25, 29, 32, 33], "10l": [25, 28, 29, 32, 33], "machin": 25, "similarli": [25, 27, 29, 33, 37, 39, 42, 43, 67, 69, 72, 82, 93, 100, 106, 108], "meas_count": [25, 28, 29, 32, 33], "meas_sum": [25, 28, 29, 32, 33], "61": 25, "vari": [25, 39, 40, 68, 78, 92, 95, 97, 101, 102, 104, 105], "activ": [25, 78], "lock": 25, "freez": 25, "previous": [25, 94, 100], "arriv": 25, "necessarili": [25, 65, 68, 90, 100], "hold": [25, 65, 67, 68, 81, 91, 100, 101, 106], "earlier": [25, 48, 70, 96], "lift": [25, 51], "prove": [25, 45, 81, 100], "renyi": 25, "permiss": [26, 72, 74, 75, 82], "trust": [26, 46, 49], "arbitrarili": [26, 100], "03": 26, "97": [26, 101, 104], "theoret": [26, 100, 101], "captur": [26, 37, 43, 64, 65, 81, 91, 100, 106], "had": [26, 43, 65, 70, 91, 95, 100], "4941": 26, "efficaci": 26, "chainer": [27, 30, 65], "togeth": [27, 30, 32, 38, 48, 60, 64, 65, 68, 69, 82, 86, 93, 94, 100, 106], "longer": [27, 30, 47, 67, 78, 90, 93, 96], "pipelin": [27, 30, 48, 69, 94, 96], "stitch": 27, "constitu": [27, 32, 64, 70], "notic": [27, 32, 37, 38, 40, 43, 48, 51, 52, 65, 67, 69, 70, 81, 82, 92, 100, 102, 105, 106, 108], "make_chain_mm": 27, "onto": 27, "conform": [27, 44, 69, 100], "sum_tran": [27, 28, 68], "lap_mea": 27, "noisy_sum": 27, "investig": 27, "practic": [27, 44, 50, 51, 65, 68, 86, 92, 95, 100, 102, 104, 106], "frequent": [27, 38, 97], "written": [27, 60, 69, 81], "automat": [27, 56, 58, 60, 79, 82, 100], "noisy_sum_mea": 27, "bounded_sum": [27, 65, 106], "base_dl": 27, "subtl": 27, "capabl": [27, 83], "domainmismatch": 27, "http": [27, 47, 78, 86, 104, 105], "github": [27, 76, 77, 78, 79], "com": [27, 78, 104, 105], "discuss": [27, 37, 40, 62, 65, 73, 92, 100], "297": 27, "noisy_sum_tran": 27, "come": [27, 37, 43, 50, 72, 77, 90, 92, 96, 100, 104], "intend": [27, 36, 64, 69, 92, 107], "preprocessor": 27, "plain": 28, "old": [28, 56, 93, 95], "str_space": 28, "meas_adaptive_comp_str": 28, "qbl_adaptive_comp_str": 28, "69": 28, "repeat": [28, 60], "mind": [28, 50, 51, 60, 70, 79, 93, 100, 104], "max_contribut": [28, 67, 106], "0l": [28, 32], "snip": [28, 46, 49, 56, 81, 82], "\u03c1_1": 28, "\u03c1_2": 28, "scale_weight": 28, "w": [28, 104], "make_zcdp_adaptive_composit": 28, "approxdp": [28, 31, 39], "zcdp_compositor_scal": 28, "meas_adaptive_comp_zcdp": 28, "child": [28, 95], "qbl_adaptive_comp_zcdp": 28, "rho_1": 28, "rho_2": 28, "0734": 28, "0146": 28, "make_sum_zcdp": 28, "dg_scale": 28, "At": [28, 56, 78, 81, 104, 105], "meas_count_approxdp": 28, "make_count_zcdp": 28, "failedfunct": [28, 33], "conclus": 28, "odom_fully_adaptive_comp": [29, 33], "qbl_fully_adaptive_comp": [29, 33], "56": [29, 104], "commensur": [29, 33, 104], "overload": 30, "long": [30, 48, 60, 65, 69, 79, 94], "fixedsmoothedmaxdiverg": [30, 31], "nest": 30, "coupl": 30, "mention": [30, 81, 97], "meas_puredp": 31, "meas_fixed_approxdp": 31, "meas_zcdp": 31, "meas_approxdp": 31, "11": [31, 33, 37, 39, 43, 48, 56, 67, 68, 70, 93, 100, 104, 105, 108], "688596249354896": 31, "13": [31, 56, 82, 93, 100, 105], "3861046488579": 31, "08": 31, "vet": [32, 35, 36, 37, 38, 41, 42, 43, 66, 67, 68, 78, 81, 86, 89, 102, 106], "opt": [32, 36, 37, 38, 41, 42, 43, 66, 67, 68, 77, 86, 89, 106], "contact": [32, 37, 38, 41, 42, 43, 66, 67, 68, 75, 80, 89, 106], "thank": [32, 37, 38, 41, 42, 43, 66, 67, 68, 75, 89, 106], "simultan": [32, 41, 48, 54, 105], "batch": [32, 93], "meas_mean_fract": 32, "dp_sum": [32, 66, 106], "dp_count": [32, 66, 70, 97], "unlist": 32, "52": [32, 38, 104], "caus": [33, 68, 69], "meas_fully_adaptive_comp": 33, "benefit": [33, 51, 56, 60, 64, 91], "cap": [33, 65], "pend": 33, "trycatch": 33, "rather": [34, 63, 77], "sum_queri": 34, "impute_const": [34, 39, 97, 101], "dp_sum_queri": 34, "down": [35, 50, 70, 82, 91, 93, 108], "pictur": 35, "edit": [35, 69, 78, 81], "cargo": [35, 78, 82, 86, 95], "toml": [35, 78, 86, 95], "adversari": [35, 78, 81, 92, 102, 104, 105], "someth": [35, 73, 78], "promis": [35, 37, 43, 66, 78, 101, 106], "comprehens": [35, 78], "histori": [36, 81], "commun": [36, 42, 45, 70, 78, 79, 81, 95, 99, 104, 105, 110], "trustworthi": 36, "alreadi": [36, 38, 48, 56, 61, 69, 78, 79, 81, 82, 89, 92, 96, 97, 100, 105], "deploi": 36, "progress": 36, "impact": [36, 74, 92], "real": [36, 38, 47, 62, 73, 93, 95, 97, 100, 104, 110], "arithmet": [36, 56, 68, 69, 81, 106], "common": [36, 41, 51, 52, 56, 60, 69, 74, 78, 80, 93, 97, 100, 106], "literatur": [36, 41, 70], "Their": 36, "discrep": 36, "ongo": [36, 101], "clearli": [36, 46, 92, 93], "distinguish": [36, 51, 100, 104, 108], "ones": [36, 79], "concret": [36, 65, 82], "faithfulli": 36, "attack": [36, 70, 79, 93, 107, 109], "harden": 36, "thing": [36, 64, 78, 81], "cach": 36, "etc": [36, 69], "who": [36, 42, 79, 94, 95, 102], "obtain": [36, 100, 101, 104, 105], "outsid": [36, 55, 68, 91, 92, 104], "carefulli": [36, 69, 75, 81, 99], "implic": 36, "critic": [36, 65], "undergo": [36, 78], "verifi": [36, 46, 49, 64], "characterist": [36, 63, 64], "involv": [36, 80, 81, 82, 93, 94], "mathemat": [36, 64, 65, 99, 102, 106], "underwai": [36, 86], "uncov": 36, "bug": [36, 76, 81], "flag": [36, 77, 78], "unvet": 36, "conceptu": [36, 64, 84, 99], "basi": [36, 46, 49], "foremost": 36, "among": [36, 43, 93, 100, 105], "concept": [36, 74, 82, 100], "prototyp": [36, 45, 99], "flesh": 36, "roadmap": 36, "wait": 36, "flux": 36, "lot": 36, "backward": 36, "incompat": [36, 78], "flexibl": [36, 44, 63, 64, 86, 87, 95, 106], "evolv": 36, "appreci": 36, "feedback": [36, 77, 79], "strive": 36, "high": [36, 39, 40, 64, 69, 93, 99, 100, 101], "encount": [36, 65, 78, 79], "variat": [37, 41, 52, 92, 97, 100], "five": [37, 43, 100, 106], "simpli": [37, 39, 42, 56, 60, 65, 67, 72, 106], "mu": [37, 43, 106], "importantli": [37, 43, 106], "permit": [37, 42, 43, 70, 106], "quantiti": [37, 38, 43, 52, 70, 81, 92, 106], "base_lap": [37, 106], "4762688937509709": 37, "analog": [37, 43], "gauss": 37, "11580942383880671": 37, "125": [37, 41], "base_gauss": 37, "analogu": [37, 43], "continu": [37, 39, 43, 81], "while": [37, 43, 44, 46, 48, 50, 52, 54, 56, 58, 60, 64, 65, 67, 68, 69, 70, 73, 77, 82, 92, 93, 95, 100, 104], "base_discrete_lap": 37, "discretelaplac": [37, 43], "base_discrete_gauss": 37, "discretegaussian": [37, 43], "cover": [37, 52, 64, 68, 69, 91], "thu": [37, 70, 81, 90, 93, 100, 104, 106], "again": [37, 81, 95], "base_lap_vec": 37, "wrong": 37, "often": [37, 65, 77, 100, 101], "page": [37, 55, 75, 78, 86, 106], "info": [37, 75, 76, 81, 85, 93, 102, 104, 106], "lt": [37, 105], "gt": [37, 57, 101, 105], "2540423714495987": 37, "1781233226386165": 37, "610700530416051": 37, "lp": 37, "reflect": [37, 39, 77, 91], "relationship": [37, 48, 64, 68, 90, 91, 100, 101, 105], "__doc__": 37, "splitlin": 37, "startswith": 37, "calcul": [37, 64, 68, 70, 87, 92, 101, 106], "base_gauss_vec": 37, "414": 37, "999698": 37, "64": [37, 43, 56, 65, 74], "ration": [37, 43, 81, 108], "represent": [37, 38, 43, 51, 56, 65, 68, 69, 81, 82], "tight": [37, 43, 92], "truli": [37, 43, 92], "1074": [37, 43], "subnorm": [37, 43], "faster": [37, 41, 43, 51, 78], "penalti": [37, 43, 68], "subsequ": [37, 43, 92], "plot": [37, 39, 48, 67, 68, 70, 100, 104, 105, 108], "matplotlib": [37, 39, 48, 67, 70, 100, 104, 105, 108], "pyplot": [37, 39, 48, 67, 70, 100, 104, 105, 108], "plt": [37, 39, 48, 67, 70, 100, 104, 105, 108], "num_sampl": 37, "fig": [37, 70], "ax": [37, 60, 70, 102, 105], "subplot": [37, 70], "nrow": 37, "ncol": 37, "figsiz": 37, "subplots_adjust": 37, "axi": [37, 48, 70, 89, 104, 105], "zip": [37, 42, 56, 70], "return_count": 37, "bar": [37, 68, 70, 93], "set_xtick": 37, "set_titl": 37, "set_ylabel": 37, "suptitl": 37, "increasingli": 37, "approach": [37, 38, 39, 40, 44, 50, 64, 66, 67, 92, 93, 96, 105, 106, 107], "penal": 37, "behavior": [37, 62, 64, 70, 72, 79, 81, 92, 96, 105], "1073": 37, "\u03b5_penalti": 37, "k_i": 37, "panda": [37, 47, 67, 68, 70, 101, 104, 105], "pd": [37, 47, 67, 68, 70, 101, 104, 105], "set_index": 37, "000000e": 37, "00": [37, 51, 95, 105], "940656e": 37, "324": 37, "888609e": 37, "31": 37, "01": [37, 43, 58, 59, 92, 95], "deal": [38, 101], "themselv": [38, 40, 81], "shown": [38, 56, 65, 70, 82, 92, 96, 100], "occur": [38, 60, 78, 89], "peopl": [38, 43, 70, 79, 80, 93], "world": [38, 43, 47, 97, 110], "hundr": [38, 56], "michael": 38, "750": [38, 67], "jame": 38, "sharon": 38, "tripl": [38, 81], "delta_0": [38, 43], "delta_1": [38, 43, 65], "delta_": [38, 43], "retain": 38, "capac": 38, "too": [38, 43, 47, 67, 91, 93], "unlik": [38, 39, 52, 56, 67, 72, 94], "m_alp": 38, "50000": 38, "qbl": 38, "lancelot": 38, "736": 38, "496": [38, 104], "roughli": [38, 43, 94, 96, 106], "four": [38, 43, 53, 63, 69, 82], "compress": 38, "final": [38, 47, 48, 67, 77, 82, 85, 93, 95, 99], "size_multipli": 38, "fifti": 38, "compris": 38, "heurist": [38, 47, 67, 72], "reason": [38, 41, 58, 62, 63, 68, 72, 79, 82, 91, 92, 93, 95, 96, 100, 101, 102], "uniform": [39, 47, 89], "m_cnd": 39, "10k": 39, "hist": [39, 67], "200": [39, 70, 104], "suit": [39, 78], "california": [39, 102], "demograph": 39, "marriag": 39, "statu": [39, 50, 70, 77, 93, 95, 102, 105], "married_data": 39, "read_csv": [39, 101, 104, 105], "has_head": 39, "new_column": 39, "cast_default": 39, "behav": [39, 82], "canonical_nois": 39, "543": 39, "5862745175556": 39, "standalon": 39, "binomial_s": 39, "1_000": [39, 67, 70, 101, 102], "502": 39, "87558450908193": 39, "0000000093132269": 39, "5e": 39, "draw": [39, 100, 104], "familiar": [39, 63, 69, 74, 79, 81, 82, 92, 100], "4608320830961166": 39, "5449190859220473": 39, "lower_ci": 39, "46834281999150473": 39, "tell": [39, 52, 60, 65, 99, 106], "p_value_marri": 39, "8861710889637788": 39, "5569144555181105": 39, "highli": [39, 64, 97], "corrobor": 39, "strongli": 39, "4430855444818895": 39, "ump_test": 39, "1001": [39, 51, 70], "visual": [39, 42, 48, 67, 68, 70, 93, 105], "overview": [40, 69, 78, 84, 110], "defint": 40, "exposit": 40, "alia": [40, 52, 54, 74, 92], "l0": [40, 43], "regim": [40, 68, 72], "overlap": 40, "gumbel": [40, 47, 108], "goal": [41, 81], "best": [41, 50, 67, 69, 77, 86, 91, 92, 95, 99, 102, 108], "report_noisy_max": 41, "privacy_measur": [41, 97], "competit": 41, "exponential_max": 41, "base_rnm_gumbel": 41, "gumbel_max": 41, "sai": [41, 48, 63, 65, 68, 79, 100, 101, 102], "halv": 41, "monotonic_exponential_max": 41, "goe": [41, 66, 77, 106], "fourth": 41, "largest": [41, 72], "exponential_min": 41, "exponential_top_k": 41, "linearli": 41, "peel": 41, "dk": 41, "oneshot": 41, "contrast": [41, 60, 63, 78, 105], "heap": 41, "shot": 41, "though": [41, 92, 93, 101, 102], "meant": 42, "devic": [42, 97], "server": [42, 73, 78], "privileg": 42, "network": 42, "character": [42, 64, 81], "six": [42, 60, 102, 106], "wedg": 42, "_bernoulli": 42, "rr_bool_mea": 42, "alice_survey_respons": 42, "0986": 42, "num_respons": 42, "true_prob": 42, "private_bool_respons": 42, "randomized_respons": 42, "append": [42, 70, 104, 105], "naive_proport": 42, "naiv": [42, 100], "bia": [42, 50, 70, 72, 92, 93, 94, 98, 105], "rr": 42, "unbias": [42, 70], "x_i": [42, 106], "y_i": 42, "texttt": [42, 81], "_bool": 42, "_mea": 42, "align": [42, 48, 56, 57, 81, 93, 96], "distil": 42, "debias_randomized_response_bool": 42, "mean_releas": 42, "estimated_bool_proport": 42, "rr_mea": 42, "197": 42, "suffer": 42, "private_cat_respons": 42, "naive_cat_proport": 42, "cat": [42, 96, 97], "de": 42, "th": 42, "c_k": 42, "law": 42, "sum_": 42, "j": [42, 48], "ne": [42, 57], "c_j": 42, "Then": [42, 68, 73, 78, 86, 100], "raw": [42, 67, 101, 104, 105], "pk": 42, "debias_randomized_respons": 42, "ab": [42, 100], "estimated_cat_proport": 42, "bias": [42, 70], "estimated_bool_count": 42, "estimated_cat_count": 42, "astyp": [42, 47, 91, 104, 105], "importorskip": 42, "biaser": 42, "littl": [42, 60, 68, 92], "endian": 42, "fmt": 42, "bitord": 42, "4327906486489863": 42, "magnitud": [43, 67, 68, 69, 72, 81, 93], "intuit": [43, 48, 60, 68, 100, 104], "look": [43, 47, 60, 63, 65, 78, 79, 82, 93, 99, 101, 104], "variou": [43, 95, 97], "delta_singl": 43, "m_lap": 43, "39": [43, 78, 91, 95, 105], "17307713885866": 43, "kind": [43, 51, 65, 67, 69, 72, 92, 93, 100], "\u03b4_0": 43, "\u03b4_1": 43, "\u03b4_": 43, "lap_eps_del": 43, "801398224505647e": 43, "carri": [43, 82, 100], "m_gauss": 43, "93198267967212": 43, "1102230246251565e": 43, "16": [43, 56, 72, 74, 96], "delta_2": [43, 65], "euclidean": [43, 60], "8e": 43, "fat": 43, "decai": 43, "quickli": [43, 68, 91, 105, 108], "comparison": [43, 57, 70, 92, 105], "\u03b4_2": 43, "m_gauss_profil": 43, "m_gauss_approx": 43, "3035767282855915": 43, "On": [43, 47, 65, 70, 72, 77, 93, 95, 97, 99, 108, 110], "aris": 43, "sensitivity_spread": 43, "001": [43, 104], "0316078580263621e": 43, "07": 43, "049969691134438526": 43, "redund": [43, 106], "m_dlap": 43, "319000812207484e": 43, "m_dgauss": 43, "excerpt": 43, "built": [44, 64, 78, 99], "almost": 44, "own": [44, 45, 46, 47, 49, 68, 72, 73, 74, 77, 79, 80, 85, 87, 99, 100, 106, 110], "make_anything_const": 44, "anything_const": 44, "deni": [44, 46], "care": [44, 65, 97, 106], "happili": 44, "make_int_const": 44, "int_const": 44, "drawback": [44, 56, 67, 96], "hard": 44, "wide": 45, "itself": [45, 65, 69, 70, 72, 78, 108], "machineri": 45, "usual": [45, 56, 70, 82, 95, 96], "easier": [45, 64, 66, 72, 77, 83, 86, 93, 94, 100, 104], "idea": [45, 78, 85, 95, 106], "barrier": 45, "broader": [45, 104], "translat": [45, 60, 69, 82, 101], "thiel": 45, "mock": [46, 49, 62, 106], "make_base_const": 46, "interchang": [46, 49, 69, 74], "incorpor": [46, 70, 75, 101], "problem": [47, 72, 78, 79, 104, 107], "yourself": [47, 75, 79, 92, 93], "divers": 47, "appeal": [47, 96, 102], "make_grouping_cols_scor": 47, "min_bin_contribut": 47, "assess": [47, 84], "rough": 47, "groupbi": [47, 105], "pandasdomain": 47, "make_select_grouping_col": 47, "min_bin_s": 47, "idx": 47, "row_count": 47, "col_count": 47, "private_data": 47, "too_uniform_": 47, "randint": [47, 97, 104, 105], "too_diverse_": 47, "just_right_": 47, "itertool": 47, "powerset": 47, "org": [47, 75, 76, 85, 99], "html": 47, "recip": 47, "duplic": [47, 49], "from_iter": 47, "m_select_gcol": 47, "89": 47, "dp_selected_grouping_column": 47, "past": 48, "slope": 48, "ordinari": 48, "outlier": 48, "skew": [48, 67], "heteroskedast": 48, "wikipedia": 48, "slight": 48, "intercept": 48, "25th": 48, "75th": 48, "coeffici": 48, "x_cut": 48, "pairwise_predict": 48, "p1": 48, "p2": 48, "array_split": 48, "dx": 48, "dy": 48, "midpoint": [48, 92], "x_bar": 48, "y_bar": 48, "degener": 48, "illustr": [48, 64, 97, 100], "ten": [48, 66, 94], "x_rang": 48, "titl": [48, 68, 77, 81, 104, 105], "scatter": [48, 93, 108], "vline": 48, "linestyl": [48, 70], "xlim": 48, "ylim": [48, 104], "y_predict": 48, "safe": [48, 64, 68, 72], "make_pairwise_predict": 48, "nx2": 48, "vstack": 48, "b_in": 48, "make_private_percentile_median": 48, "favor": 48, "m_median": [48, 108], "linspac": [48, 67, 108], "put": [48, 65, 102], "everyth": [48, 64, 78, 85], "make_private_theil_sen": 48, "luckili": [48, 72], "p_inv": 48, "linalg": [48, 67, 105], "inv": 48, "ones_lik": 48, "2xn": 48, "recalibr": 48, "reus": [48, 65, 92, 93], "y_fit": 48, "label": [48, 51, 56, 69, 70, 81, 93, 100, 105], "4f": 48, "color": [48, 70], "tab": 48, "orang": [48, 100], "legend": [48, 70, 93, 100, 105], "power": [48, 72, 104], "valuabl": 48, "serv": [48, 65], "foundat": [48, 95], "workflow": [48, 78, 84], "make_repeat": 49, "mix": 49, "think": [50, 62, 81, 100], "area": [50, 99, 100], "opportun": [50, 79], "henc": [50, 100], "pident": [50, 94, 95, 96], "150_000": [50, 54, 56, 57, 92, 93, 94, 96], "prefer": 50, "pai": [50, 56, 93, 95], "profit": [50, 56, 93, 95], "int_rang": [50, 94], "6400": [50, 94], "640": 50, "despit": 50, "unlimit": [50, 102], "year": [50, 56, 58, 59, 60, 93, 94, 95], "quarter": [50, 59, 60, 92, 93, 94, 95], "annalysi": 50, "quarterli": [50, 60, 92, 93, 94, 95], "1714": [50, 94], "unless": [50, 86], "contigu": 51, "arrow": 51, "bitmap": 51, "fill_nul": [51, 56, 92], "lack": 51, "certain": [51, 58, 62, 92, 106], "simplest": [51, 92, 102], "uint32": [51, 56], "uint64": 51, "int8": 51, "int16": 51, "int64": [51, 91, 100], "uint16": 51, "acquir": [51, 91, 102], "although": [51, 62, 106], "lost": [51, 105], "upon": [51, 58], "float32": 51, "float64": [51, 104], "presenc": [51, 56, 60, 78], "fill_nan": [51, 56], "slowest": 51, "to_phys": [51, 56], "unfortun": [51, 68, 92, 93, 100], "forbid": 51, "trigger": [51, 82], "remap": [51, 56], "latter": [51, 53], "context_categor": 51, "unreach": [51, 58], "err": [51, 58, 81], "enum_data": 51, "context_enum": 51, "alphalencatu32": 51, "quot": [51, 52, 54, 56, 78, 93], "999": 51, "apach": 51, "date": [51, 56, 81, 93], "datetim": [51, 56, 59], "nanosecond": [51, 58, 59], "microsecond": [51, 59], "ingest": 51, "2000": [51, 70, 104], "hour": [51, 56, 59, 92, 93, 95, 96], "2020": 51, "1500": 51, "2010": [51, 93], "timelentimeu3212": 51, "00100123": 51, "00100001": 51, "001001": 51, "dt": [51, 59], "recreat": [52, 92], "tabular": [52, 61, 84, 87, 92], "introduct": [52, 81, 82, 92, 107], "query_len_vari": 52, "columnaggregatedistributionscalestrstrstrf64": [52, 54, 56, 93], "360": [52, 92], "detect": 52, "sexlenhwusuali64u32u32219830911982182118297201827929": 52, "query_n_uniqu": 52, "180": [52, 60, 92], "hwusualu3218": 52, "unsign": [52, 65, 74, 81], "happen": [52, 69, 72, 102], "query_count": 52, "complementari": 52, "query_counts_via_group": 52, "is_nul": [52, 53], "hwusual_is_nul": 52, "hwusual_is_nulllenboolu32true20815false3791161": 52, "is_not_nul": [53, 56], "is_finit": 53, "is_not_finit": 53, "is_nan": 53, "is_not_nan": 53, "not_": 53, "bitwis": 53, "work_hours_col": 54, "hwactual": [54, 56], "single_expr": 54, "split_expr": 54, "4320": 54, "tempor": [55, 56, 58, 61, 62], "mixtur": [56, 57, 58, 93, 96], "correctli": [56, 70], "void": 56, "inexact": [56, 69, 106], "thousand": [56, 104], "14405": 56, "179857": 56, "14400": [56, 92], "insert": [56, 67, 92], "anywher": 56, "broken": 56, "phase": 56, "break": [56, 81, 82, 93, 96, 108], "98": [56, 93, 95, 96, 104], "hwusuallencatu32null20828": 56, "6212": 56, "120914": 56, "1026819": 56, "292128": 56, "50453": 56, "2295210": 56, "spend": [56, 70, 91, 93], "cut_label": 56, "left_clos": [56, 96], "bl": 56, "br": 56, "144": [56, 93], "hwusuallencatu32": 56, "6412": 56, "120732": 56, "292358": 56, "50671": 56, "2294912": 56, "drop_nan": 56, "Not": [56, 92, 95], "confus": [56, 79], "drop_nul": [56, 67], "complic": [56, 67, 102], "mismatch": 56, "sure": [56, 78, 86], "retir": [56, 93], "65": 56, "14117": 56, "076259": 56, "broadcast": 56, "filler": 56, "recod": [56, 95], "14112": 56, "replace_strict": 56, "pickier": 56, "fallibl": [56, 81, 82, 86], "15": [56, 67, 69, 93, 95, 100, 104], "ilostat_label": 56, "emploi": [56, 93, 105], "unemploi": 56, "columnaggregatedistributionscalethresholdstrstrstrf64u32": 56, "02973": 56, "enum": [56, 81], "hwusuallenu32u32056901120886210265243292169450467532962294774": 56, "link": [57, 65, 77, 78, 79, 81, 106], "and_": [57, 102], "over_40": 57, "sexover_40leni64boolu321false3373681true4395942false2963992true416626": 57, "to_dat": [58, 59], "to_datetim": 58, "to_tim": 58, "format": [58, 59, 62, 73, 81, 82, 101], "yearlendateu322005": 58, "013421932006": 58, "013396832007": 58, "013504292008": 58, "013485742009": 58, "014169662010": 58, "015003852011": 58, "015171662012": 58, "015154602013": 58, "01480615": 58, "lead": [58, 70, 77, 81, 93, 105], "situat": [58, 65, 68, 69, 70, 75, 104], "unstabl": 58, "lf_date": 59, "concat_str": 59, "lit": 59, "iso_year": 59, "month": [59, 95, 97], "week": [59, 95], "weekdai": 59, "dai": 59, "ordinal_dai": 59, "minut": 59, "seen": [59, 82], "yearmonthleni32i8u32200538733920056865422005983517200512847462006386530": 59, "hellip": 59, "201212130903201331266982013612239620139115050201312116449": 59, "easili": [60, 102], "switch": 60, "labour": [60, 92, 93, 95], "perturb": [60, 65, 69, 72, 92, 100], "query_num_respons": [60, 92], "354": 60, "isn": [60, 81, 92, 104], "simplifi": [60, 68], "afford": [60, 97], "l_1": 60, "l_2": 60, "along": [60, 72], "taxicab": 60, "sens": [60, 81, 100], "travel": 60, "corner": 60, "crow": 60, "fli": 60, "opposit": 60, "grow": [60, 68, 91], "slowli": 60, "v": [60, 61, 68, 78, 82, 100], "worst": [60, 68, 69, 92, 94, 97], "hide": [60, 99], "attract": 60, "cadenc": [60, 95], "knowledg": [60, 69, 92, 97, 100, 102], "context_margin": 60, "184": 60, "1133": 60, "fold": [60, 94], "reduct": 60, "dimens": 60, "explain": [60, 65, 67, 78, 85, 92, 96, 108, 109], "haven": 61, "review": [61, 74, 77, 99], "dive": [61, 68, 106], "materi": [61, 91, 108, 110], "realiti": 62, "somewhat": [62, 98], "mandatori": 62, "focus": [63, 77], "regardless": [63, 93], "arrang": 63, "determinist": [63, 64, 100], "snippet": [63, 86, 98], "talk": [63, 79], "assembl": 64, "softwar": [64, 77], "faith": 64, "rigor": [64, 99, 100], "highlight": [64, 82], "acquaint": [64, 92], "motiv": [64, 104, 105], "encourag": 64, "g": [64, 101], "constrain": [64, 82], "glue": 64, "possibli": [64, 82], "interdepend": 64, "programm": 64, "greatli": 64, "whole": [64, 92], "straightforward": 65, "f64_atom_domain": 65, "127": 65, "i32_bounded_domain": 65, "bool_vector_domain": 65, "bool_vector_2_domain": 65, "fewest": 65, "bundl": 65, "midwai": 65, "effort": [65, 79, 99], "provabl": 65, "clamper": [65, 69], "in_symmetric_dist": 65, "treatment": 65, "thorough": [65, 106], "d_x": 65, "d_y": 65, "whatev": [65, 78], "epsilon_1": 65, "incompar": 65, "epsilon_2": 65, "neither": [65, 95], "nor": [65, 95], "tightest": [65, 72], "speak": [65, 69, 72, 97, 100, 105], "surpris": 65, "bisect": 65, "sb_mean_tran": 66, "divis": [66, 70], "0000000000000169": 66, "particular": [66, 69, 74, 82, 95, 99, 104, 106], "resiz": [66, 97, 101], "count_mea": 66, "mean_mea": 66, "dp_fraction_mea": 66, "techniqu": [67, 92, 104, 105], "realist": [67, 101], "seaborn": [67, 70, 102], "sn": [67, 70, 102], "displot": 67, "kde": 67, "true_quantil": 67, "tolist": [67, 70, 102, 108], "800778225846171": 67, "663246151408615": 67, "49926270360073": 67, "private_quantil": 67, "release_quantil": 67, "make_expo_quantil": 67, "t_pre": 67, "make_from_scal": 67, "m_expo_quantil": 67, "procedur": [67, 70, 72, 101], "land": 67, "scan": 67, "make_hist_quantil": 67, "num_bin": 67, "num": 67, "bin_nam": 67, "realli": [67, 73], "hist_quartiles_mea": 67, "945": 67, "73": [67, 105], "150000000000006": 67, "difficult": 67, "reach": [67, 68, 73, 89], "wider": 67, "slightli": [67, 68, 69, 93, 100], "recurs": [67, 73], "modif": [67, 70], "log_b": 67, "hyperparamet": 67, "26": 67, "lipschitz": 67, "make_tree_quantil": 67, "tree_quartiles_mea": 67, "963603570000425": 67, "090319791380644": 67, "162433994583424": 67, "baselin": [67, 70, 105], "sample_error": 67, "expo_err": 67, "log_2": [67, 68, 69], "average_error": 67, "num_trial": [67, 104, 105], "m_hist_quantil": 67, "m_tree_quantil": 67, "hist_err": 67, "tree_err": 67, "nb": 67, "250": 67, "Of": 67, "rapidli": 67, "pick": 67, "make_distribution_count": 67, "xlabel": [67, 70, 100, 102, 104, 105], "ylabel": [67, 68, 70, 100, 104, 105], "great": [67, 79, 82], "deep": [68, 74, 110], "easi": [68, 74, 81, 89, 99, 108], "widen": 68, "shift": [68, 72, 100], "stair": 68, "sized_bounded_sum": 68, "ieee": 68, "754": 68, "00000000004426": 68, "hit": 68, "snag": 68, "million": [68, 92], "degrad": 68, "000000093132268": 68, "unchang": 68, "save": 68, "unaffect": 68, "bake": 68, "00000000000295": 68, "relax": [68, 93], "isol": 68, "10_000_000": 68, "abil": 68, "sqlite": 68, "mysql": 68, "exhibit": [68, 105], "akin": 68, "bewar": 68, "strategi": [68, 69, 93], "1234": 68, "explan": [69, 74, 82, 85, 105], "compromis": 69, "codebook": [69, 93], "expertis": 69, "proper": [69, 75, 93], "peek": 69, "caster": 69, "tricki": 69, "manner": [69, 90], "propag": 69, "fed": 69, "bypass": 69, "da": 69, "relabel": 69, "word": [69, 77, 82, 100], "finder": 69, "binner": 69, "indici": 69, "2342": 69, "2k": 69, "sizeddomain": 69, "taken": 69, "downstream": [69, 87], "Such": [69, 104], "substitut": [69, 78], "make_sized_bounded_covari": 69, "loader": 69, "deeper": [69, 85], "addition": [69, 92], "mantissa": 69, "simul": [69, 70, 101, 102, 103], "leak": [70, 92, 110], "rare": 70, "diseas": 70, "var_nam": [70, 101, 102], "age_bound": [70, 101], "120": 70, "age_prior": 70, "38": 70, "averag": [70, 92, 102, 105], "genfromtxt": [70, 102], "delimit": [70, 102], "84811402354421": 70, "truthfulli": 70, "ballpark": 70, "dp_count_releas": 70, "make_mean_measur": 70, "target_s": 70, "dp_mean_releas": 70, "44": 70, "60152231817973": 70, "moreov": 70, "wherebi": 70, "went": 70, "therebi": 70, "intention": 70, "receiv": 70, "lower_n": 70, "real_n": 70, "higher_n": 70, "09883682992345": 70, "671207844903705": 70, "41": 70, "396972829360706": 70, "move": [70, 82, 83, 96, 100, 101], "helper": 70, "functool": [70, 104], "lru_cach": [70, 104], "maxsiz": [70, 104], "make_count_with": 70, "10000": [70, 89], "make_mean_with": 70, "mean_chain": 70, "make_sum_with": 70, "bounded_age_sum": 70, "n_simul": 70, "history_count": 70, "history_mean": 70, "count_chain": 70, "true_mean_ag": 70, "light": 70, "blue": [70, 100], "circl": [70, 100], "fillstyl": 70, "cornflowerblu": 70, "compute_expected_mean": 70, "expected_count": 70, "expected_mean": 70, "dark": 70, "dot": [70, 81, 104, 105], "indigo": 70, "red": [70, 78], "tomato": 70, "dash": 70, "unknow": 70, "tick": 70, "n_rang": 70, "2001": 70, "boxplot": 70, "axhlin": 70, "thankfulli": 70, "simpler": [70, 86, 95], "sometim": [70, 77], "plug": [70, 88, 98, 102], "solut": [70, 105], "agre": 70, "asymmetr": [70, 100], "history_plugin": 70, "history_res": 70, "resize_count": 70, "plugin_count": 70, "plugin_sum": 70, "resize_mean": 70, "kdeplot": 70, "linewidth": [70, 102], "forestgreen": 70, "leg": 70, "around": [70, 86, 93, 102, 105, 108], "manag": 71, "aid": 72, "primari": 72, "secondari": 72, "oftentim": 72, "act": 72, "7071067811865476": 72, "unnecessari": 72, "414213562373095": 72, "353553389770093": 72, "locat": [72, 78, 79], "unkown": 72, "thrown": 72, "eight": 72, "logarithm": 72, "explor": [72, 99, 101, 106], "offset": 72, "intersect": 72, "outright": 72, "malform": 72, "claim": [72, 77, 79], "perhap": 73, "remot": [73, 99], "client": [73, 78], "dummi": 73, "new_context": 73, "new_queri": 73, "overridden": 73, "opendp_polars_lib_path": [73, 78], "environ": [73, 80, 81, 82, 86], "serialized_measur": 73, "fact": [73, 74, 92, 95], "serialized_domain": 73, "new_domain": 73, "__function__": 73, "json": 73, "discourag": 73, "serializ": 73, "trivial_user_domain": 73, "strict": 74, "implicit": [74, 81], "annot": [74, 82], "pattern": [74, 78, 86, 100], "modifi": 74, "qo": 74, "i128": 74, "u128": 74, "docstr": [74, 79], "aren": 74, "submiss": 75, "compani": [75, 97], "instruct": [75, 77, 90], "question": [75, 79, 81, 82, 101], "cla": 75, "behalf": 75, "request": [76, 78, 81, 93, 95, 102], "send": [76, 82], "email": 76, "slack": [76, 89], "mail": 76, "anticip": [77, 78, 102], "bot": [77, 81], "autom": 77, "verif": 77, "tag": 77, "head": 77, "codebas": 77, "fork": [77, 78], "verb": 77, "123": [77, 86, 104], "typo": 77, "readm": [77, 78], "retitl": 77, "script": [77, 78], "changelog": 77, "backlog": 77, "narrowli": 77, "But": 77, "bigger": 77, "prerequisit": 77, "obviou": 77, "cours": [77, 110], "straight": 77, "main": [77, 86, 95, 104, 105], "partner": 77, "experi": [77, 78, 95, 97], "graphit": 77, "team": 77, "engin": 77, "regular": [77, 106], "disabl": [77, 78, 105], "confirm": 77, "patient": 77, "credit": [77, 93], "crate": [77, 78, 81], "io": 77, "pypi": [77, 86], "task": 78, "tackl": [78, 79], "languag": [78, 81, 106], "repositori": [78, 81], "directori": [78, 81, 86], "git": [78, 81], "cd": 78, "ssh": 78, "toolchain": 78, "latest": [78, 81], "rustup": 78, "subdirectori": 78, "compil": [78, 81, 82, 86], "platform": [78, 99], "runn": 78, "openssl": 78, "untrust": 78, "command": [78, 82], "foreign": 78, "creation": [78, 99], "libpython": 78, "then_": [78, 106], "mode": 78, "opendp_test_releas": 78, "loop": 78, "regener": 78, "virtual": 78, "conda": 78, "python3": 78, "venv": 78, "dev": [78, 86], "txt": 78, "reinstal": 78, "src": [78, 81, 82], "folder": [78, 82, 101], "restart": [78, 82], "kernel": [78, 82], "oserror": 78, "dlopen": 78, "mach": 78, "architectur": 78, "rustc": 78, "vv": 78, "mac": 78, "m1": 78, "x86_64": 78, "gone": 78, "bunch": 78, "57": 78, "02": [78, 104], "forget": 78, "quick": [78, 82, 85, 105], "websit": 78, "sphinx": [78, 79], "export": 78, "opendp_lib_dir": 78, "realpath": 78, "maco": 78, "gui": 78, "tcl": 78, "smoothest": 78, "brew": 78, "harfbuzz": 78, "fribidi": 78, "libgit2": 78, "xquartz": 78, "devtool": 78, "rcpptoml": 78, "lintr": 78, "load_al": 78, "recompil": 78, "r_stage": 78, "sh": 78, "amp": 78, "rscript": 78, "restor": 78, "manual": 78, "cmd": 78, "opendp_": 78, "tar": 78, "gz": 78, "cran": 78, "roxygen": 78, "man": 78, "comment": [78, 79, 82, 93], "pkgdown": 78, "render": [78, 96], "md": 78, "latex": 78, "templat": 78, "precondit": 78, "pseudocod": 78, "postcondit": 78, "overrid": 78, "stale": 78, "_lib": 78, "lib_path": 78, "opendp_headless": 78, "opendp_sphinx_port": 78, "opendp_sphinx_uri": 78, "host": 78, "uri": 78, "port": 78, "localhost": 78, "site": [78, 79, 81], "opendp_rustdoc_port": 78, "opendp_rustdoc_uri": 78, "rustdoc": [78, 79, 81], "intellij": 78, "sublim": 78, "comfort": 78, "panel": 78, "live": 78, "workshop": [78, 81], "cp": 78, "vscode": [78, 81], "codewithm": 78, "attach": 78, "banner": 78, "welcom": 79, "guidelin": 79, "usabl": 79, "invest": 79, "chanc": 79, "board": 79, "ask": [79, 82, 102], "clarifi": 79, "revis": 79, "ownership": 79, "embed": 79, "benchmark": 79, "stochast": 79, "tester": 79, "ey": 79, "focu": [80, 86], "consult": 80, "contributor": 80, "licens": 80, "agreement": 80, "bodi": [81, 82], "trait": [81, 82], "proven": [81, 100], "hoar": 81, "esqu": 81, "exploit": 81, "sharpli": 81, "argu": 81, "macro": [81, 82], "fn": [81, 82, 86], "infsub": 81, "alertingab": 81, "inf_sub": 81, "alerting_ab": 81, "exactli": [81, 101, 108], "backtrac": 81, "exit": 81, "derefer": 81, "clone": [81, 82], "tex": 81, "documentclass": 81, "articl": 81, "overleaf": 81, "lib": 81, "sty": 81, "boilerpl": 81, "_distanc": 81, "author": [81, 99, 110], "maketitl": 81, "asofcommit": 81, "f5bb719": 81, "subsect": 81, "vettingpr": 81, "519": 81, "commit_hash": 81, "commit": [81, 82, 92], "log": [81, 100, 104], "pretti": 81, "h": 81, "proofwrit": 81, "footnot": 81, "permalink": 81, "pr_number": 81, "pull": [81, 93], "docsr": 81, "validtransform": 81, "input_argu": 81, "function_nam": 81, "validmeasur": 81, "shell": 81, "escap": 81, "pdflatex": 81, "synctex": 81, "nonstopmod": 81, "aux": 81, "advic": 81, "artifact": 81, "intent": [81, 106], "pdf": [81, 100, 104], "1i32": 81, "2i32": 81, "bignum": 81, "strictli": [81, 82], "lstlist": 81, "escapechar": 81, "leverag": [81, 104, 105], "met": 81, "text": 81, "stuck": 81, "abus": 81, "widget": 81, "book": 82, "surfac": 82, "default_cast_tran": 82, "struct": [82, 94], "chapter": 82, "pub": [82, 105], "stabilitymap": 82, "partialeq": 82, "closur": 82, "456": 82, "ship": 82, "did": [82, 93, 95, 101, 102], "compat": [82, 91, 95, 106], "ultim": [82, 86], "input_domain_1": 82, "output_domain_1": 82, "input_domain_2": 82, "output_domain_2": 82, "function_1": 82, "function_2": 82, "input_metric_1": 82, "output_metric_1": 82, "input_metric_2": 82, "output_metric_2": 82, "stability_map_1": 82, "stability_map_2": 82, "prefix": 82, "checknul": 82, "roundcast": 82, "datasetmetr": 82, "metricspac": 82, "round_cast": 82, "unwrap_or_default": 82, "new_from_const": 82, "colon": 82, "claus": 82, "cloneabl": 82, "anonym": 82, "privacymap": 82, "properli": 82, "button": 82, "gitignor": 82, "scratch": 82, "decor": 82, "bootstrap": 82, "hesit": 82, "room": 82, "accompani": 82, "plai": 82, "nice": 82, "rustfmt": 82, "meaningfulli": 82, "elsewher": 83, "wizard": [84, 110], "quickstart": 84, "tour": 85, "touch": 85, "dure": [86, 95], "launch": 86, "repo": 86, "init": 86, "pin": 86, "laplace_mechan": 86, "dp_valu": 86, "new_non_nan": 86, "println": 86, "aka": [86, 91], "unsur": 87, "analys": [87, 110], "sample_microdata": 89, "num_row": 89, "cov": 89, "sample_covari": 89, "multivariate_norm": 89, "100_000": 89, "num_featur": 89, "example_dataset": 89, "introspect": 89, "singular_values_": 89, "2e": 90, "mayb": 91, "num_unknown": 91, "eighth": 91, "227": 91, "68399153212334": 91, "1364": 91, "third": 91, "uncommon": 91, "infrequ": 91, "absorb": 91, "1515729": 91, "155912": 91, "1450748": 91, "689452": 91, "109": 91, "melt": 91, "5157e6": 91, "156011": 91, "15206": 91, "4509e6": 91, "689551": 91, "39267": 91, "119": 91, "022842": 91, "446": 91, "2524232592843": 91, "1270561": 91, "table2": 91, "1828251": 91, "1982295": 91, "1228": 91, "113": 91, "84199576606166": 91, "fashion": 91, "eager": 92, "539": 92, "731115": 92, "math": 92, "829": 92, "429939": 92, "justifi": 92, "instabl": 92, "rememb": [92, 93, 94, 106, 108], "achiev": [92, 99], "household": [92, 97], "150": 92, "inconsequenti": 92, "undermin": 92, "query_work_hour": [92, 93], "35": 92, "fulfil": 92, "weekli": 92, "43139": 92, "04473": 92, "400": [92, 104], "seem": [92, 93, 102], "retrospect": 92, "quit": [92, 101], "nearli": [92, 105], "43k": 92, "imprecis": 92, "28800": 92, "86277": 92, "589474": 92, "1078": 92, "963271": 92, "twice": [92, 108], "context_bounded_dp": 92, "metadata": 92, "query_mean_work_hour": 92, "terminologi": 92, "7200": 92, "21569": 92, "772352": 92, "recap": 92, "query_median_hour": 92, "exponentialmin": 92, "query_multi_quantil": 92, "3240": 92, "1080": 92, "judg": [92, 93], "examin": 93, "hvplot": 93, "card": 93, "catastroph": 93, "identif": 93, "accomplish": 93, "benign": [93, 102], "latanya": 93, "sweenei": 93, "reidentifi": 93, "governor": 93, "massachusett": 93, "healthcar": [93, 99], "disappear": 93, "worker": [93, 95], "query_age_ilostat": 93, "columnaggregatedistributionscaleaccuracythresholdstrstrstrf64f64u32": 93, "0431": 93, "8845792773": 93, "young": 93, "adult": 93, "lai": [93, 95], "youngest": 93, "graph": [93, 97, 100, 104], "employ": 93, "rewrit": [93, 106], "clear": 93, "weaken": 93, "reluct": 93, "absenc": 93, "constitut": 93, "bureau": [93, 104, 105], "query_quarterly_count": 93, "columnaggregatedistributionscaleaccuracystrstrstrf64f64": 93, "884579": 93, "errorbar": 93, "yerr1": 93, "spite": 93, "2008": 93, "declar": 93, "risk": [93, 97, 104], "damag": 93, "lf_preprocess": 93, "gender": 93, "1764": 93, "05284": 93, "97166": 93, "0nan": 93, "7056": 93, "disaggreg": 93, "conceal": [93, 97, 108], "hstack": 93, "sex_str": 93, "male": [93, 95], "femal": [93, 95, 105], "sexsex_strhwusuali64stri642": 93, "341": 93, "signal": [93, 105], "poor": 93, "excess": 93, "mislead": 93, "speedup": 93, "mediat": [93, 102], "kept": [94, 100], "nine": 94, "rank": 94, "dens": 94, "1872": 95, "eurostat": 95, "european": 95, "tradit": [95, 101], "disclosur": [95, 104, 105], "suppress": 95, "chose": [95, 108], "realism": 95, "studi": [95, 110], "famili": 95, "conscript": 95, "compulsori": 95, "militari": 95, "servic": 95, "job": [95, 99], "busi": [95, 99], "he": [95, 104], "she": 95, "absent": 95, "consider": [95, 96, 97], "blank": 95, "abstain": 95, "delet": 95, "del": [95, 102], "topic": 95, "seldom": 96, "query_hwusual_bin": 96, "shadow": 96, "mask": [96, 105], "query_total_hours_work": 96, "17280": 96, "576": 96, "context_pid": 96, "480": 96, "nevertheless": 96, "broadli": [97, 100, 105], "medium": 97, "id": 97, "varieti": 97, "harm": 97, "ethic": 97, "legal": 97, "oblig": 97, "custodian": 97, "proxi": 97, "customari": [97, 100], "thumb": [97, 102], "deploy": [97, 99, 110], "registri": [97, 110], "imputed_valu": 97, "m_sc": 97, "runif": 97, "100l": 97, "rep": 97, "count_queri": 97, "0000000000000004": 97, "445721638273584": 97, "count_transform": 97, "count_sensit": 97, "count_measur": 97, "mean_queri": 97, "mean_transform": 97, "mean_measur": 97, "challeng": 98, "navig": 98, "compens": 98, "kmr": 98, "unavoid": 98, "020426913849308": 98, "inject": 99, "background": [99, 100], "handbook": 99, "administr": [99, 110], "evid": 99, "resourc": [99, 100, 107], "differentialprivaci": 99, "shorter": [99, 106], "co": [99, 110], "architect": [99, 110], "solid": 99, "safeti": 99, "audit": 99, "corpor": 99, "fairli": 99, "sql": 99, "ml": 99, "smartnois": 99, "sdk": 99, "tech": 99, "un": 99, "commission": 99, "refuge": 99, "unhcr": 99, "swiss": 99, "feder": 99, "offic": 99, "loma": 99, "oblivi": 99, "telecom": 99, "pilot": 99, "antigranular": 99, "openmin": 99, "pysyft": 99, "microsoft": 99, "dailymot": 99, "nation": 99, "broadband": [99, 110], "percentag": 99, "databas": 99, "harvard": [99, 104, 110], "atla": 99, "internet": 99, "substanti": 99, "dispar": 99, "urban": 99, "rural": 99, "citi": 99, "liveramp": 99, "covid": 99, "christchurch": 99, "fundament": 99, "perspect": 100, "alic": [100, 104], "jane": 100, "john": 100, "jack": 100, "multiset": 100, "sym": 100, "sum_x": 100, "u_i": 100, "v_i": 100, "And": 100, "d_symmetricdist": 100, "NOT": 100, "lose": 100, "symmetric_differ": 100, "indirectli": 100, "stipul": 100, "sim_": 100, "asid": 100, "rv": 100, "bother": [100, 105], "arang": [100, 104], "rv_m": 100, "scipi": 100, "stat": 100, "plot_pdf": 100, "p_": 100, "prop": 100, "dissimilar": 100, "limits_": 100, "equat": 100, "randomli": [100, 104], "plot_": 100, "fill_between": 100, "divergence_over_": 100, "pr_mu_in_": 100, "pr_mv_in_": 100, "2867171279172761": 100, "3978533407816897": 100, "32758733417005853": 100, "hypothet": 100, "u_prim": 100, "008486665039311609": 100, "8475873341700586": 100, "came": 100, "moreso": 100, "qualifi": 100, "immun": 100, "foral": 100, "quad": 100, "bigl": 100, "bigr": 100, "crucial": 100, "boldsymbol": 100, "textbf": 100, "induc": 100, "particip": 100, "mostli": 100, "formul": 100, "ambigu": 100, "reclaim": 100, "d_ab": 100, "attain": 100, "clamped_sum_0_12": 100, "_sum": 100, "_0": 100, "_12": 100, "conceiv": 100, "_nois": 100, "laplace_nois": 100, "block": 100, "m_": 100, "t_": 100, "t_2": 100, "t_1": 100, "laplace_sum": 100, "48": [100, 104], "takeawai": 100, "encapsul": 100, "clamped_sum_0_12_map": 100, "repackag": 100, "laplace_noise_map": 100, "laplace_sum_map": 100, "nontrivi": 100, "especi": 100, "trip": 101, "phi": 101, "phi_": 101, "tild": 101, "drawn": 101, "extent": 101, "empir": 101, "plausibl": 101, "pid": 101, "d_mean_ag": 101, "read_text": 101, "n_sim": 101, "d_tilde_mean_ag": 101, "make_mean_aggreg": 101, "mean_aggreg": 101, "d_tild": 101, "var": 101, "jm": 101, "40wztt291610f8pk5w0sw20r0000gq": 101, "ipykernel_31426": 101, "793901930": 101, "py": 101, "27": 101, "deprecationwarn": 101, "staticmethod": 101, "29": [101, 104, 105], "2996": 101, "94": [101, 104], "93": 101, "scenario": 101, "1050": 101, "diagnost": 101, "knew": 101, "1_050": 101, "d_tilde_mean": 101, "2853": 101, "68": 101, "wors": [101, 105], "mitig": [102, 103, 109], "data_path": 102, "target_incom": 102, "deduc": 102, "n_individu": 102, "mean_non_target": 102, "reconstruct_incom": 102, "reconstruct": [102, 103, 107], "recovered_incom": 102, "suspici": 102, "hidden": 102, "imposs": 102, "curat": 102, "auxiliari": 102, "with_column_nam": 102, "infer_schema_length": 102, "sneakili": 102, "everyon": 102, "or_": 102, "200_000": 102, "dp_non_target_incom": 102, "dp_target_incom": 102, "wildli": 102, "inaccur": 102, "2586576": 102, "couldn": 102, "nonetheless": 102, "34414": 102, "4984984985": 102, "31825": 102, "333333333332": 102, "70_000": 102, "86414": 102, "craft": 102, "hat": 102, "student": 102, "m_target_incom": 102, "histplot": 102, "edgecolor": 102, "black": [102, 105], "my": 102, "wasn": 102, "figur": [102, 104], "differenc": [103, 107], "sequest": [104, 105], "pose": 104, "dssuv": 104, "traceabl": 104, "american": [104, 105], "ac": [104, 105], "seed": 104, "gist": 104, "membership_attack_fig_1": 104, "reference_sampl": 104, "dwork": 104, "privacytool": 104, "sea": 104, "edu": 104, "alice_similar": 104, "cosin": 104, "reference_similar": 104, "tau": 104, "membership_attack_fig_2": 104, "eta": [104, 108], "mont": 104, "carlo": 104, "simplic": 104, "githubusercont": [104, 105], "cs208": [104, 105], "spring2022": [104, 105], "fultonpums5sample100": 104, "make_boolean_project": 104, "prime": [104, 105], "691": [104, 105], "desc": [104, 105], "modulu": [104, 105], "sample_s": 104, "rest": 104, "iloc": 104, "execute_exact_queri": 104, "medic": 104, "poll": 104, "polit": 104, "parti": 104, "strength": 104, "sequestered_data": 104, "inconclus": 104, "4000": 104, "true_": 104, "anita": 104, "false_": 104, "simulate_attack": 104, "membership_attack": 104, "reference_s": 104, "num_pred": 104, "fp_result": 104, "tp_result": 104, "fp": 104, "tp": 104, "start_tim": 104, "plot_fpr_tpr": 104, "fpr": 104, "tpr": 104, "84": 104, "600": 104, "800": 104, "897": 104, "995": 104, "084": 104, "21": 104, "1200": 104, "37": 104, "1400": 104, "51": 104, "1600": 104, "63": 104, "1800": 104, "67": 104, "2200": 104, "79": 104, "2400": 104, "86": 104, "2600": 104, "2800": 104, "3000": 104, "3200": 104, "3400": 104, "3600": 104, "3800": 104, "execute_dp_queri": 104, "find_mea": 104, "num_queri": 104, "epsilon_p": 104, "exact_aggreg": 104, "47": 104, "54": 104, "49": 104, "46": 104, "thwart": 104, "coin": 104, "citizen": 105, "fultonpums5reconstruct": 105, "latino": 105, "asian": 105, "divorc": 105, "militaryservic": 105, "english": 105, "uscitizen": 105, "execute_subsetsums_exact": 105, "resembl": 105, "pred": 105, "reconstruction_attack": 105, "data_pub": 105, "lstsq": 105, "rcond": 105, "scheme": 105, "make_random_pred": 105, "random_pred": 105, "num_citizens_that_matched_random_pred": 105, "random_predicate_mask": 105, "readi": 105, "exact_answ": 105, "reconstructed_target": 105, "perfectli": 105, "citizenship": 105, "execute_subsetsums_round": 105, "execute_subsetsums_nois": 105, "sigma": 105, "execute_subsetsums_sampl": 105, "sub_data": 105, "rmse": 105, "compute_accuracy_reconstruct": 105, "compute_rmse_answ": 105, "evaluate_perform": 105, "interface_nam": 105, "predicates_temp": 105, "spot": 105, "perf": 105, "072": 105, "62": 105, "289": 105, "surprisingli": 105, "evaluate_all_perform": 105, "all_perf": 105, "reset_index": 105, "inplac": 105, "stratifi": 105, "defens": 105, "pronounc": 105, "invers": 105, "strang": 105, "max_influ": 105, "bring": 106, "modular": 106, "ubiquit": 106, "ecosystem": 106, "bounded_mock_dataset": 106, "forward": 106, "mock_dataset": 106, "compound": 106, "breez": 106, "successor": 106, "pitfal": 107, "quantile_score_candid": 108, "golf": 108, "t_median_scor": 108, "nearer": 108, "l_": 108, "m_select_scor": 108, "noisy_index": 108, "fiftieth": 108, "fortun": 108, "7071": 108, "digit": 108, "7071067811865475": 108, "trickier": 108, "primer": 110, "technic": 110, "audienc": 110, "jupyt": 110, "confidenti": 110, "snap": 110, "converg": 110, "gradient": 110, "feasibl": 110, "tax": 110}, "objects": {"": [[2, 0, 0, "-", "opendp"]], "opendp": [[3, 0, 0, "-", "accuracy"], [4, 0, 0, "-", "combinators"], [5, 0, 0, "-", "context"], [6, 0, 0, "-", "core"], [7, 0, 0, "-", "domains"], [8, 0, 0, "-", "extras"], [18, 0, 0, "-", "measurements"], [19, 0, 0, "-", "measures"], [20, 0, 0, "-", "metrics"], [21, 0, 0, "-", "mod"], [22, 0, 0, "-", "prelude"], [23, 0, 0, "-", "transformations"], [24, 0, 0, "-", "typing"]], "opendp.accuracy": [[3, 1, 1, "", "accuracy_to_discrete_gaussian_scale"], [3, 1, 1, "", "accuracy_to_discrete_laplacian_scale"], [3, 1, 1, "", "accuracy_to_gaussian_scale"], [3, 1, 1, "", "accuracy_to_laplacian_scale"], [3, 1, 1, "", "discrete_gaussian_scale_to_accuracy"], [3, 1, 1, "", "discrete_laplacian_scale_to_accuracy"], [3, 1, 1, "", "gaussian_scale_to_accuracy"], [3, 1, 1, "", "laplacian_scale_to_accuracy"], [3, 1, 1, "", "summarize_polars_measurement"]], "opendp.combinators": [[4, 1, 1, "", "make_adaptive_composition"], [4, 1, 1, "", "make_approximate"], [4, 1, 1, "", "make_basic_composition"], [4, 1, 1, "", "make_chain_mt"], [4, 1, 1, "", "make_chain_pm"], [4, 1, 1, "", "make_chain_tt"], [4, 1, 1, "", "make_composition"], [4, 1, 1, "", "make_fix_delta"], [4, 1, 1, "", "make_fixed_approxDP_to_approxDP"], [4, 1, 1, "", "make_fully_adaptive_composition"], [4, 1, 1, "", "make_population_amplification"], [4, 1, 1, "", "make_privacy_filter"], [4, 1, 1, "", "make_pureDP_to_zCDP"], [4, 1, 1, "", "make_select_private_candidate"], [4, 1, 1, "", "make_sequential_composition"], [4, 1, 1, "", "make_zCDP_to_approxDP"], [4, 1, 1, "", "then_adaptive_composition"], [4, 1, 1, "", "then_fully_adaptive_composition"], [4, 1, 1, "", "then_sequential_composition"]], "opendp.context": [[5, 2, 1, "", "Context"], [5, 2, 1, "", "PartialChain"], [5, 2, 1, "", "Query"], [5, 1, 1, "", "domain_of"], [5, 1, 1, "", "loss_of"], [5, 1, 1, "", "metric_of"], [5, 1, 1, "", "register"], [5, 1, 1, "", "space_of"], [5, 1, 1, "", "unit_of"]], "opendp.context.Context": [[5, 3, 1, "", "accountant"], [5, 4, 1, "", "compositor"], [5, 4, 1, "", "current_privacy_loss"], [5, 4, 1, "", "deserialize_polars_plan"], [5, 4, 1, "", "query"], [5, 3, 1, "", "queryable"], [5, 4, 1, "", "remaining_privacy_loss"]], "opendp.context.PartialChain": [[5, 4, 1, "", "fix"], [5, 3, 1, "", "partial"], [5, 4, 1, "", "wrap"]], "opendp.context.Query": [[5, 4, 1, "", "compositor"], [5, 4, 1, "", "new_with"], [5, 4, 1, "", "param"], [5, 4, 1, "", "release"], [5, 4, 1, "", "resolve"]], "opendp.core": [[6, 1, 1, "", "function_eval"], [6, 1, 1, "", "measurement_check"], [6, 1, 1, "", "measurement_function"], [6, 1, 1, "", "measurement_input_carrier_type"], [6, 1, 1, "", "measurement_input_distance_type"], [6, 1, 1, "", "measurement_input_domain"], [6, 1, 1, "", "measurement_input_metric"], [6, 1, 1, "", "measurement_invoke"], [6, 1, 1, "", "measurement_map"], [6, 1, 1, "", "measurement_output_distance_type"], [6, 1, 1, "", "measurement_output_measure"], [6, 1, 1, "", "new_function"], [6, 1, 1, "", "new_queryable"], [6, 1, 1, "", "odometer_input_carrier_type"], [6, 1, 1, "", "odometer_input_domain"], [6, 1, 1, "", "odometer_input_metric"], [6, 1, 1, "", "odometer_invoke"], [6, 1, 1, "", "odometer_output_measure"], [6, 1, 1, "", "odometer_queryable_invoke"], [6, 1, 1, "", "odometer_queryable_invoke_type"], [6, 1, 1, "", "odometer_queryable_privacy_loss"], [6, 1, 1, "", "odometer_queryable_privacy_loss_type"], [6, 1, 1, "", "queryable_eval"], [6, 1, 1, "", "queryable_query_type"], [6, 1, 1, "", "transformation_check"], [6, 1, 1, "", "transformation_function"], [6, 1, 1, "", "transformation_input_carrier_type"], [6, 1, 1, "", "transformation_input_distance_type"], [6, 1, 1, "", "transformation_input_domain"], [6, 1, 1, "", "transformation_input_metric"], [6, 1, 1, "", "transformation_invoke"], [6, 1, 1, "", "transformation_map"], [6, 1, 1, "", "transformation_output_distance_type"], [6, 1, 1, "", "transformation_output_domain"], [6, 1, 1, "", "transformation_output_metric"]], "opendp.domains": [[7, 1, 1, "", "array_domain"], [7, 1, 1, "", "atom_domain"], [7, 1, 1, "", "bitvector_domain"], [7, 1, 1, "", "categorical_domain"], [7, 1, 1, "", "datetime_domain"], [7, 1, 1, "", "domain_carrier_type"], [7, 1, 1, "", "domain_debug"], [7, 1, 1, "", "domain_type"], [7, 1, 1, "", "enum_domain"], [7, 1, 1, "", "lazyframe_domain"], [7, 1, 1, "", "map_domain"], [7, 1, 1, "", "option_domain"], [7, 1, 1, "", "series_domain"], [7, 1, 1, "", "user_domain"], [7, 1, 1, "", "vector_domain"], [7, 1, 1, "", "wild_expr_domain"], [7, 1, 1, "", "with_margin"]], "opendp.extras": [[9, 0, 0, "-", "examples"], [10, 0, 0, "-", "mbi"], [11, 0, 0, "-", "numpy"], [13, 0, 0, "-", "polars"], [15, 0, 0, "-", "sklearn"]], "opendp.extras.examples": [[9, 1, 1, "", "get_california_pums_path"], [9, 1, 1, "", "get_france_lfs_path"]], "opendp.extras.mbi": [[10, 2, 1, "", "AIM"], [10, 2, 1, "", "Algorithm"], [10, 2, 1, "", "ContingencyTable"], [10, 2, 1, "", "Count"], [10, 2, 1, "", "Fixed"], [10, 2, 1, "", "MST"], [10, 2, 1, "", "Sequential"], [10, 1, 1, "", "make_contingency_table"], [10, 1, 1, "", "mirror_descent"]], "opendp.extras.mbi.AIM": [[10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "max_size"], [10, 3, 1, "", "measure_split"], [10, 3, 1, "", "queries"], [10, 3, 1, "", "rounds"]], "opendp.extras.mbi.Algorithm": [[10, 4, 1, "", "estimator"], [10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "oneway"], [10, 3, 1, "", "oneway_split"]], "opendp.extras.mbi.ContingencyTable": [[10, 3, 1, "", "cuts"], [10, 3, 1, "", "keys"], [10, 3, 1, "", "marginals"], [10, 3, 1, "", "model"], [10, 4, 1, "", "project"], [10, 4, 1, "", "project_melted"], [10, 3, 1, "", "schema"], [10, 4, 1, "", "std"], [10, 4, 1, "", "synthesize"], [10, 3, 1, "", "thresholds"]], "opendp.extras.mbi.Count": [[10, 3, 1, "", "by"], [10, 3, 1, "", "weight"]], "opendp.extras.mbi.Fixed": [[10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "oneway"], [10, 3, 1, "", "queries"]], "opendp.extras.mbi.MST": [[10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "measure_split"], [10, 3, 1, "", "num_selections"]], "opendp.extras.mbi.Sequential": [[10, 3, 1, "", "algorithms"], [10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "weights"]], "opendp.extras.numpy": [[11, 2, 1, "", "NPArray2Domain"], [11, 2, 1, "", "NPArrayDDomain"], [11, 1, 1, "", "array2_domain"], [11, 1, 1, "", "arrayd_domain"], [12, 0, 0, "-", "canonical"]], "opendp.extras.numpy.NPArray2Domain": [[11, 3, 1, "", "T"], [11, 3, 1, "", "cardinalities"], [11, 3, 1, "", "nan"], [11, 3, 1, "", "norm"], [11, 3, 1, "", "num_columns"], [11, 3, 1, "", "origin"], [11, 3, 1, "", "p"], [11, 3, 1, "", "size"]], "opendp.extras.numpy.NPArrayDDomain": [[11, 3, 1, "", "T"], [11, 3, 1, "", "shape"]], "opendp.extras.numpy.canonical": [[12, 2, 1, "", "BinomialCND"], [12, 1, 1, "", "one_sided_confidence_interval"], [12, 1, 1, "", "one_sided_pvalue"], [12, 1, 1, "", "one_sided_uniformly_most_powerful_tests"], [12, 1, 1, "", "two_sided_confidence_interval"], [12, 1, 1, "", "two_sided_pvalue"]], "opendp.extras.numpy.canonical.BinomialCND": [[12, 4, 1, "", "confidence_interval"], [12, 4, 1, "", "p_value"]], "opendp.extras.polars": [[13, 2, 1, "", "Bound"], [13, 2, 1, "", "DPExpr"], [13, 2, 1, "", "LazyFrameQuery"], [13, 2, 1, "", "LazyGroupByQuery"], [13, 2, 1, "", "Margin"], [13, 2, 1, "", "OnceFrame"], [13, 2, 1, "", "SortBy"], [14, 0, 0, "-", "contingency_table"], [13, 1, 1, "", "dp_len"]], "opendp.extras.polars.Bound": [[13, 3, 1, "", "by"], [13, 3, 1, "", "num_groups"], [13, 3, 1, "", "per_group"]], "opendp.extras.polars.DPExpr": [[13, 4, 1, "", "count"], [13, 4, 1, "", "gaussian"], [13, 4, 1, "", "laplace"], [13, 4, 1, "", "len"], [13, 4, 1, "", "mean"], [13, 4, 1, "", "median"], [13, 4, 1, "", "n_unique"], [13, 4, 1, "", "noise"], [13, 4, 1, "", "null_count"], [13, 4, 1, "", "quantile"], [13, 4, 1, "", "sum"]], "opendp.extras.polars.LazyFrameQuery": [[13, 4, 1, "", "contingency_table"], [13, 4, 1, "", "filter"], [13, 4, 1, "", "group_by"], [13, 4, 1, "", "join"], [13, 4, 1, "", "release"], [13, 4, 1, "", "resolve"], [13, 4, 1, "", "select"], [13, 4, 1, "", "select_seq"], [13, 4, 1, "", "sort"], [13, 4, 1, "", "summarize"], [13, 4, 1, "", "truncate_num_groups"], [13, 4, 1, "", "truncate_per_group"], [13, 4, 1, "", "with_columns"], [13, 4, 1, "", "with_columns_seq"], [13, 4, 1, "", "with_keys"]], "opendp.extras.polars.LazyGroupByQuery": [[13, 4, 1, "", "agg"]], "opendp.extras.polars.Margin": [[13, 3, 1, "", "by"], [13, 3, 1, "", "invariant"], [13, 3, 1, "", "max_groups"], [13, 3, 1, "", "max_influenced_partitions"], [13, 3, 1, "", "max_length"], [13, 3, 1, "", "max_num_partitions"], [13, 3, 1, "", "max_partition_contributions"], [13, 3, 1, "", "max_partition_length"], [13, 3, 1, "", "public_info"]], "opendp.extras.polars.OnceFrame": [[13, 4, 1, "", "collect"], [13, 4, 1, "", "lazy"]], "opendp.extras.polars.SortBy": [[13, 3, 1, "", "by"], [13, 3, 1, "", "descending"], [13, 3, 1, "", "maintain_order"], [13, 3, 1, "", "multithreaded"], [13, 3, 1, "", "nulls_last"]], "opendp.extras.polars.contingency_table": [[14, 2, 1, "", "ContingencyTableQuery"]], "opendp.extras.polars.contingency_table.ContingencyTableQuery": [[14, 4, 1, "", "release"]], "opendp.extras.sklearn": [[16, 0, 0, "-", "decomposition"], [17, 0, 0, "-", "linear_model"]], "opendp.extras.sklearn.decomposition": [[16, 2, 1, "", "PCA"], [16, 2, 1, "", "PCAEpsilons"], [16, 1, 1, "", "make_private_pca"]], "opendp.extras.sklearn.decomposition.PCA": [[16, 4, 1, "", "fit"], [16, 4, 1, "", "measurement"], [16, 3, 1, "", "n_features"]], "opendp.extras.sklearn.decomposition.PCAEpsilons": [[16, 3, 1, "", "eigvals"], [16, 3, 1, "", "eigvecs"], [16, 3, 1, "", "mean"]], "opendp.extras.sklearn.linear_model": [[17, 2, 1, "", "LinearRegression"]], "opendp.extras.sklearn.linear_model.LinearRegression": [[17, 4, 1, "", "fit"], [17, 4, 1, "", "predict"]], "opendp.measurements": [[18, 1, 1, "", "debias_randomized_response_bitvec"], [18, 1, 1, "", "make_alp_queryable"], [18, 1, 1, "", "make_canonical_noise"], [18, 1, 1, "", "make_gaussian"], [18, 1, 1, "", "make_gaussian_threshold"], [18, 1, 1, "", "make_geometric"], [18, 1, 1, "", "make_laplace"], [18, 1, 1, "", "make_laplace_threshold"], [18, 1, 1, "", "make_noise"], [18, 1, 1, "", "make_noise_threshold"], [18, 1, 1, "", "make_noisy_max"], [18, 1, 1, "", "make_noisy_top_k"], [18, 1, 1, "", "make_private_expr"], [18, 1, 1, "", "make_private_lazyframe"], [18, 1, 1, "", "make_private_quantile"], [18, 1, 1, "", "make_randomized_response"], [18, 1, 1, "", "make_randomized_response_bitvec"], [18, 1, 1, "", "make_randomized_response_bool"], [18, 1, 1, "", "make_report_noisy_max_gumbel"], [18, 1, 1, "", "make_user_measurement"], [18, 1, 1, "", "then_alp_queryable"], [18, 1, 1, "", "then_canonical_noise"], [18, 1, 1, "", "then_gaussian"], [18, 1, 1, "", "then_gaussian_threshold"], [18, 1, 1, "", "then_geometric"], [18, 1, 1, "", "then_laplace"], [18, 1, 1, "", "then_laplace_threshold"], [18, 1, 1, "", "then_noise"], [18, 1, 1, "", "then_noise_threshold"], [18, 1, 1, "", "then_noisy_max"], [18, 1, 1, "", "then_noisy_top_k"], [18, 1, 1, "", "then_private_expr"], [18, 1, 1, "", "then_private_lazyframe"], [18, 1, 1, "", "then_private_quantile"], [18, 1, 1, "", "then_randomized_response_bitvec"], [18, 1, 1, "", "then_report_noisy_max_gumbel"], [18, 1, 1, "", "then_user_measurement"]], "opendp.measures": [[19, 1, 1, "", "approximate"], [19, 1, 1, "", "fixed_smoothed_max_divergence"], [19, 1, 1, "", "max_divergence"], [19, 1, 1, "", "measure_debug"], [19, 1, 1, "", "measure_distance_type"], [19, 1, 1, "", "measure_type"], [19, 1, 1, "", "new_privacy_profile"], [19, 1, 1, "", "renyi_divergence"], [19, 1, 1, "", "smoothed_max_divergence"], [19, 1, 1, "", "user_divergence"], [19, 1, 1, "", "zero_concentrated_divergence"]], "opendp.metrics": [[20, 1, 1, "", "absolute_distance"], [20, 1, 1, "", "change_one_distance"], [20, 1, 1, "", "change_one_id_distance"], [20, 1, 1, "", "discrete_distance"], [20, 1, 1, "", "frame_distance"], [20, 1, 1, "", "hamming_distance"], [20, 1, 1, "", "insert_delete_distance"], [20, 1, 1, "", "l01inf_distance"], [20, 1, 1, "", "l02inf_distance"], [20, 1, 1, "", "l1_distance"], [20, 1, 1, "", "l2_distance"], [20, 1, 1, "", "linf_distance"], [20, 1, 1, "", "metric_debug"], [20, 1, 1, "", "metric_distance_type"], [20, 1, 1, "", "metric_type"], [20, 1, 1, "", "symmetric_distance"], [20, 1, 1, "", "symmetric_id_distance"], [20, 1, 1, "", "user_distance"]], "opendp.mod": [[21, 2, 1, "", "ApproximateDivergence"], [21, 2, 1, "", "AtomDomain"], [21, 2, 1, "", "ChangeOneIdDistance"], [21, 2, 1, "", "Domain"], [21, 2, 1, "", "ExtrinsicDomain"], [21, 2, 1, "", "FrameDistance"], [21, 2, 1, "", "Function"], [21, 2, 1, "", "LazyFrameDomain"], [21, 2, 1, "", "Measure"], [21, 2, 1, "", "Measurement"], [21, 2, 1, "", "Metric"], [21, 2, 1, "", "Odometer"], [21, 2, 1, "", "OdometerQueryable"], [21, 5, 1, "", "OpenDPException"], [21, 2, 1, "", "OptionDomain"], [21, 2, 1, "", "PrivacyProfile"], [21, 2, 1, "", "Queryable"], [21, 2, 1, "", "SeriesDomain"], [21, 2, 1, "", "SymmetricIdDistance"], [21, 2, 1, "", "Transformation"], [21, 5, 1, "", "UnknownTypeException"], [21, 2, 1, "", "VectorDomain"], [21, 1, 1, "", "assert_features"], [21, 1, 1, "", "binary_search"], [21, 1, 1, "", "binary_search_chain"], [21, 1, 1, "", "binary_search_param"], [21, 1, 1, "", "deserialize"], [21, 1, 1, "", "disable_features"], [21, 1, 1, "", "enable_features"], [21, 1, 1, "", "exponential_bounds_search"], [21, 1, 1, "", "serialize"]], "opendp.mod.ApproximateDivergence": [[21, 3, 1, "", "inner_measure"]], "opendp.mod.AtomDomain": [[21, 3, 1, "", "bounds"], [21, 3, 1, "", "nan"]], "opendp.mod.ChangeOneIdDistance": [[21, 3, 1, "", "identifier"]], "opendp.mod.Domain": [[21, 3, 1, "", "carrier_type"], [21, 4, 1, "", "cast"], [21, 4, 1, "", "member"], [21, 3, 1, "", "type"]], "opendp.mod.ExtrinsicDomain": [[21, 3, 1, "", "descriptor"]], "opendp.mod.FrameDistance": [[21, 3, 1, "", "inner_metric"]], "opendp.mod.LazyFrameDomain": [[21, 3, 1, "", "columns"], [21, 4, 1, "", "get_margin"], [21, 4, 1, "", "get_series_domain"]], "opendp.mod.Measure": [[21, 3, 1, "", "distance_type"], [21, 3, 1, "", "type"]], "opendp.mod.Measurement": [[21, 4, 1, "", "check"], [21, 3, 1, "", "function"], [21, 3, 1, "", "input_carrier_type"], [21, 3, 1, "", "input_distance_type"], [21, 3, 1, "", "input_domain"], [21, 3, 1, "", "input_metric"], [21, 3, 1, "", "input_space"], [21, 4, 1, "", "invoke"], [21, 4, 1, "", "map"], [21, 3, 1, "", "output_distance_type"], [21, 3, 1, "", "output_measure"]], "opendp.mod.Metric": [[21, 4, 1, "", "cast"], [21, 3, 1, "", "distance_type"], [21, 3, 1, "", "type"]], "opendp.mod.Odometer": [[21, 3, 1, "", "input_carrier_type"], [21, 3, 1, "", "input_distance_type"], [21, 3, 1, "", "input_domain"], [21, 3, 1, "", "input_metric"], [21, 3, 1, "", "input_space"], [21, 4, 1, "", "invoke"], [21, 3, 1, "", "output_distance_type"], [21, 3, 1, "", "output_measure"]], "opendp.mod.OdometerQueryable": [[21, 4, 1, "", "invoke"], [21, 4, 1, "", "privacy_loss"]], "opendp.mod.OpenDPException": [[21, 3, 1, "", "raw_traceback"]], "opendp.mod.OptionDomain": [[21, 3, 1, "", "element_domain"]], "opendp.mod.PrivacyProfile": [[21, 4, 1, "", "delta"], [21, 4, 1, "", "epsilon"]], "opendp.mod.SeriesDomain": [[21, 3, 1, "", "element_domain"], [21, 3, 1, "", "name"], [21, 3, 1, "", "nullable"]], "opendp.mod.SymmetricIdDistance": [[21, 3, 1, "", "identifier"]], "opendp.mod.Transformation": [[21, 4, 1, "", "check"], [21, 3, 1, "", "function"], [21, 3, 1, "", "input_carrier_type"], [21, 3, 1, "", "input_distance_type"], [21, 3, 1, "", "input_domain"], [21, 3, 1, "", "input_metric"], [21, 3, 1, "", "input_space"], [21, 4, 1, "", "invoke"], [21, 4, 1, "", "map"], [21, 3, 1, "", "output_distance_type"], [21, 3, 1, "", "output_domain"], [21, 3, 1, "", "output_metric"], [21, 3, 1, "", "output_space"]], "opendp.mod.VectorDomain": [[21, 3, 1, "", "element_domain"], [21, 3, 1, "", "size"]], "opendp.transformations": [[23, 1, 1, "", "choose_branching_factor"], [23, 1, 1, "", "make_b_ary_tree"], [23, 1, 1, "", "make_bounded_float_checked_sum"], [23, 1, 1, "", "make_bounded_float_ordered_sum"], [23, 1, 1, "", "make_bounded_int_monotonic_sum"], [23, 1, 1, "", "make_bounded_int_ordered_sum"], [23, 1, 1, "", "make_bounded_int_split_sum"], [23, 1, 1, "", "make_cast"], [23, 1, 1, "", "make_cast_default"], [23, 1, 1, "", "make_cast_inherent"], [23, 1, 1, "", "make_cdf"], [23, 1, 1, "", "make_clamp"], [23, 1, 1, "", "make_consistent_b_ary_tree"], [23, 1, 1, "", "make_count"], [23, 1, 1, "", "make_count_by"], [23, 1, 1, "", "make_count_by_categories"], [23, 1, 1, "", "make_count_distinct"], [23, 1, 1, "", "make_create_dataframe"], [23, 1, 1, "", "make_df_cast_default"], [23, 1, 1, "", "make_df_is_equal"], [23, 1, 1, "", "make_drop_null"], [23, 1, 1, "", "make_find"], [23, 1, 1, "", "make_find_bin"], [23, 1, 1, "", "make_identity"], [23, 1, 1, "", "make_impute_constant"], [23, 1, 1, "", "make_impute_uniform_float"], [23, 1, 1, "", "make_index"], [23, 1, 1, "", "make_is_equal"], [23, 1, 1, "", "make_is_null"], [23, 1, 1, "", "make_lipschitz_float_mul"], [23, 1, 1, "", "make_mean"], [23, 1, 1, "", "make_metric_bounded"], [23, 1, 1, "", "make_metric_unbounded"], [23, 1, 1, "", "make_ordered_random"], [23, 1, 1, "", "make_quantile_score_candidates"], [23, 1, 1, "", "make_quantiles_from_counts"], [23, 1, 1, "", "make_resize"], [23, 1, 1, "", "make_select_column"], [23, 1, 1, "", "make_sized_bounded_float_checked_sum"], [23, 1, 1, "", "make_sized_bounded_float_ordered_sum"], [23, 1, 1, "", "make_sized_bounded_int_checked_sum"], [23, 1, 1, "", "make_sized_bounded_int_monotonic_sum"], [23, 1, 1, "", "make_sized_bounded_int_ordered_sum"], [23, 1, 1, "", "make_sized_bounded_int_split_sum"], [23, 1, 1, "", "make_split_dataframe"], [23, 1, 1, "", "make_split_lines"], [23, 1, 1, "", "make_split_records"], [23, 1, 1, "", "make_stable_expr"], [23, 1, 1, "", "make_stable_lazyframe"], [23, 1, 1, "", "make_subset_by"], [23, 1, 1, "", "make_sum"], [23, 1, 1, "", "make_sum_of_squared_deviations"], [23, 1, 1, "", "make_unordered"], [23, 1, 1, "", "make_user_transformation"], [23, 1, 1, "", "make_variance"], [23, 1, 1, "", "then_b_ary_tree"], [23, 1, 1, "", "then_cast"], [23, 1, 1, "", "then_cast_default"], [23, 1, 1, "", "then_cast_inherent"], [23, 1, 1, "", "then_clamp"], [23, 1, 1, "", "then_count"], [23, 1, 1, "", "then_count_by"], [23, 1, 1, "", "then_count_by_categories"], [23, 1, 1, "", "then_count_distinct"], [23, 1, 1, "", "then_df_cast_default"], [23, 1, 1, "", "then_df_is_equal"], [23, 1, 1, "", "then_drop_null"], [23, 1, 1, "", "then_find"], [23, 1, 1, "", "then_find_bin"], [23, 1, 1, "", "then_identity"], [23, 1, 1, "", "then_impute_constant"], [23, 1, 1, "", "then_impute_uniform_float"], [23, 1, 1, "", "then_index"], [23, 1, 1, "", "then_is_equal"], [23, 1, 1, "", "then_is_null"], [23, 1, 1, "", "then_lipschitz_float_mul"], [23, 1, 1, "", "then_mean"], [23, 1, 1, "", "then_metric_bounded"], [23, 1, 1, "", "then_metric_unbounded"], [23, 1, 1, "", "then_ordered_random"], [23, 1, 1, "", "then_quantile_score_candidates"], [23, 1, 1, "", "then_resize"], [23, 1, 1, "", "then_stable_expr"], [23, 1, 1, "", "then_stable_lazyframe"], [23, 1, 1, "", "then_sum"], [23, 1, 1, "", "then_sum_of_squared_deviations"], [23, 1, 1, "", "then_unordered"], [23, 1, 1, "", "then_variance"]], "opendp.typing": [[24, 2, 1, "", "Carrier"], [24, 2, 1, "", "RuntimeType"], [24, 2, 1, "", "SensitivityMetric"], [24, 1, 1, "", "get_atom"], [24, 1, 1, "", "get_atom_or_infer"], [24, 1, 1, "", "get_carrier_type"], [24, 1, 1, "", "get_distance_type"], [24, 1, 1, "", "get_first"], [24, 1, 1, "", "get_type"], [24, 1, 1, "", "get_value_type"], [24, 1, 1, "", "parse_or_infer"], [24, 1, 1, "", "pass_through"], [24, 1, 1, "", "set_default_float_type"], [24, 1, 1, "", "set_default_int_type"]], "opendp.typing.RuntimeType": [[24, 3, 1, "", "args"], [24, 4, 1, "", "infer"], [24, 3, 1, "", "origin"], [24, 4, 1, "", "parse"], [24, 4, 1, "", "parse_or_infer"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 1, 35, 36, 44, 73], "python": [1, 78], "document": [1, 78, 79], "content": [1, 2, 8, 9, 10, 11, 13, 15, 16, 17, 78], "index": [1, 69, 108], "opendp": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 62, 70, 78, 81, 82, 99, 106], "packag": [2, 8, 9, 10, 11, 13, 15, 16, 17], "subpackag": [2, 8, 15], "submodul": [2, 11, 13], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "accuraci": [3, 98, 101], "combin": [4, 30], "context": [5, 34, 44, 73, 95], "core": [6, 63], "domain": [7, 37, 65], "extra": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "exampl": [9, 45, 46, 49, 70, 81, 82, 83, 104, 106], "mbi": 10, "numpi": [11, 12], "canon": [12, 39, 40], "polar": [13, 14, 61, 62], "contingency_t": 14, "sklearn": [15, 16, 17], "decomposit": 16, "linear_model": 17, "measur": [18, 19, 31, 40, 46, 48, 63, 65, 82], "metric": [20, 65, 69], "mod": 21, "prelud": 22, "transform": [23, 48, 49, 63, 69, 82, 106], "type": [24, 51, 74], "adapt": [25, 29, 32, 91], "composit": [25, 29, 30, 32, 41], "amplif": 26, "chain": [27, 28, 30, 106], "compositor": 28, "nest": 28, "fulli": 29, "odomet": 29, "other": [30, 70, 97], "topic": 30, "cast": [31, 56, 69], "non": [32, 52], "privaci": [33, 36, 50, 65, 97, 99, 100, 102, 104, 105, 106, 110], "filter": [33, 56, 96], "user": 35, "guid": 35, "featur": [35, 97], "list": [35, 110], "limit": [36, 73], "concern": 36, "incomplet": 36, "proof": [36, 79, 81], "miss": 36, "function": [36, 65, 81], "stabil": [36, 65, 100], "softwar": 36, "qualiti": 36, "addit": [37, 40], "nois": [37, 39, 40, 43, 60], "mechan": [37, 39, 40, 41, 43, 48, 67, 106, 108, 109], "distribut": [37, 41, 43, 60, 67, 100, 102], "laplac": [37, 38, 40, 43, 106], "v": [37, 41, 43, 52, 62, 70, 101], "gaussian": [37, 40, 43, 60], "support": [37, 43, 65, 74], "float": [37, 43, 51, 68, 108], "integ": [37, 43, 51, 68], "scalar": 37, "vector": [37, 42], "bit": [37, 42, 43], "depth": [37, 43], "desideratum": [37, 43], "point": [37, 43, 64, 68, 108], "granular": [37, 43], "approxim": [38, 40], "project": [38, 40], "binomi": 39, "assumpt": 39, "confid": [39, 101], "interv": [39, 101], "p": 39, "valu": [39, 70, 90], "uniformli": 39, "most": 39, "power": 39, "test": [39, 78, 79], "laplacian": 40, "geometr": 40, "threshold": [40, 43], "noisi": [40, 41, 108], "max": [40, 41], "top": [40, 41], "k": [40, 41], "random": [40, 42], "respons": [40, 42], "report": [41, 79, 108], "exponenti": [41, 67, 72, 108], "gumbel": 41, "monoton": 41, "object": 41, "maxim": 41, "minim": 41, "boolean": [42, 51, 53], "categor": [42, 51], "posit": 43, "neg": 43, "plugin": [44, 45], "privat": [47, 67, 89, 96], "select": [47, 96], "group": [47, 60, 93, 94, 96], "column": [47, 54, 96], "thiel": 48, "sen": 48, "regress": [48, 88], "implement": 48, "1": [48, 97, 108], "pairwis": 48, "predict": 48, "2": [48, 97, 108], "dp": [48, 97, 100], "median": [48, 92], "3": [48, 97, 108], "estim": [48, 67, 91], "creat": [48, 77], "appli": [48, 110], "synthet": [48, 90], "data": [48, 51, 90, 95, 97], "identifi": [50, 94, 97], "truncat": [50, 94], "bound": [50, 60, 69], "unit": [50, 97], "multipl": 50, "string": [51, 58], "enum": 51, "tempor": [51, 59], "aggreg": [52, 66, 67, 68, 69, 100], "frame": 52, "length": [52, 93], "express": [52, 55], "uniqu": 52, "count": [52, 92], "null": [52, 56, 90], "i": [53, 70, 99, 101], "properti": 53, "Not": 53, "manipul": 56, "clip": 56, "cut": 56, "drop": 56, "nan": 56, "fill": 56, "replac": 56, "strict": 56, "To": [56, 58], "physic": 56, "oper": 57, "strptime": 58, "date": [58, 59], "datetim": 58, "time": [58, 59], "compon": 59, "comparison": 60, "sensit": [60, 100], "contribut": [60, 77, 79, 80, 94], "per": [60, 94], "structur": [63, 81, 82], "similar": 63, "program": 64, "framework": [64, 73, 100], "summari": 64, "kei": [64, 93], "element": 65, "map": [65, 100], "distanc": [65, 100], "mean": [66, 92], "known": [66, 68, 70], "dataset": [66, 68, 69, 70, 95, 100], "size": [66, 68, 70], "unknown": [66, 68, 70], "quantil": [67, 69, 92, 108], "via": [67, 69], "histogram": 67, "b": 67, "ari": 67, "tree": [67, 69], "simul": [67, 104, 105], "sum": [68, 92, 106], "special": 68, "constructor": [68, 82, 106], "imput": 69, "clamp": [69, 106], "order": 69, "resiz": [69, 70], "preprocess": 70, "load": 70, "when": 70, "provid": 70, "incorrect": 70, "approach": 70, "util": [71, 98], "paramet": [72, 97], "search": 72, "binari": 72, "serial": 73, "lazyframequeri": 73, "argument": 74, "alias": 74, "contributor": [75, 77], "licens": [75, 77], "agreement": [75, 77], "contact": 76, "process": [77, 78], "pull": [77, 79], "request": [77, 79], "branch": 77, "philosophi": 77, "vet": 77, "merg": 77, "develop": [78, 82], "environ": 78, "clone": 78, "repo": 78, "rust": [78, 82], "setup": 78, "r": 78, "doc": 78, "releas": 78, "variabl": 78, "tool": 78, "get": [79, 84], "involv": 79, "bug": 79, "code": 79, "resolv": 79, "an": 79, "issu": 79, "add": 79, "review": 79, "initi": [81, 82], "latex": 81, "templat": 81, "precondit": 81, "pseudocod": 81, "postcondit": 81, "loop": 82, "next": [82, 85, 99], "step": [82, 85], "more": 83, "start": 84, "quickstart": 86, "statist": [87, 92], "model": 87, "linear": 88, "differenti": [89, 99, 102, 104, 105, 106, 110], "pca": 89, "handl": 90, "conting": 91, "tabl": 91, "essenti": 92, "stabl": [93, 96], "explicit": 93, "invari": 93, "work": 95, "tabular": 95, "descript": 95, "mediat": [95, 97], "access": [95, 97], "prepar": 96, "microdata": 96, "With": 96, "By": 96, "agg": 96, "typic": 97, "workflow": 97, "set": 97, "loss": 97, "collect": 97, "public": 97, "inform": 97, "4": 97, "5": 97, "submit": 97, "queri": 97, "assess": 98, "welcom": 99, "what": [99, 101], "why": 99, "who": 99, "us": 99, "A": 100, "understand": 100, "between": 100, "adjac": 100, "diverg": 100, "definit": 100, "pitfal": 101, "edg": 101, "case": 101, "overview": 101, "d": 101, "synopsi": 101, "guarante": 101, "In": 101, "practic": 101, "differenc": 102, "attack": [102, 103, 104, 105, 108], "outcom": 102, "membership": 104, "reconstruct": 105, "mitig": [105, 108], "The": 106, "retrospect": 106, "partial": 106, "theori": 107, "score": 108, "each": 108, "candid": 108, "min": 108, "resourc": 110, "foundat": 110, "learn": 110, "about": 110, "paper": 110}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "Python API Documentation": [[1, "python-api-documentation"]], "Contents:": [[1, null], [78, "toctitle"]], "Indexes": [[1, "indexes"]], "opendp package": [[2, "opendp-package"]], "Subpackages": [[2, "subpackages"], [8, "subpackages"], [15, "subpackages"]], "Submodules": [[2, "submodules"], [11, "submodules"], [13, "submodules"]], "Module contents": [[2, "module-opendp"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.mbi"], [11, "module-opendp.extras.numpy"], [13, "module-opendp.extras.polars"], [15, "module-opendp.extras.sklearn"], [16, "module-opendp.extras.sklearn.decomposition"], [17, "module-opendp.extras.sklearn.linear_model"]], "opendp.accuracy module": [[3, "module-opendp.accuracy"]], "opendp.combinators module": [[4, "module-opendp.combinators"]], "opendp.context module": [[5, "module-opendp.context"]], "opendp.core module": [[6, "module-opendp.core"]], "opendp.domains module": [[7, "module-opendp.domains"]], "opendp.extras package": [[8, "opendp-extras-package"]], "opendp.extras.examples package": [[9, "opendp-extras-examples-package"]], "opendp.extras.mbi package": [[10, "opendp-extras-mbi-package"]], "opendp.extras.numpy package": [[11, "opendp-extras-numpy-package"]], "opendp.extras.numpy.canonical module": [[12, "module-opendp.extras.numpy.canonical"]], "opendp.extras.polars package": [[13, "opendp-extras-polars-package"]], "opendp.extras.polars.contingency_table module": [[14, "module-opendp.extras.polars.contingency_table"]], "opendp.extras.sklearn package": [[15, "opendp-extras-sklearn-package"]], "opendp.extras.sklearn.decomposition package": [[16, "opendp-extras-sklearn-decomposition-package"]], "opendp.extras.sklearn.linear_model package": [[17, "opendp-extras-sklearn-linear-model-package"]], "opendp.measurements module": [[18, "module-opendp.measurements"]], "opendp.measures module": [[19, "module-opendp.measures"]], "opendp.metrics module": [[20, "module-opendp.metrics"]], "opendp.mod module": [[21, "module-opendp.mod"]], "opendp.prelude module": [[22, "module-opendp.prelude"]], "opendp.transformations module": [[23, "module-opendp.transformations"]], "opendp.typing module": [[24, "module-opendp.typing"]], "Adaptive Composition": [[25, "adaptive-composition"]], "Amplification": [[26, "amplification"]], "Chaining": [[27, "chaining"], [28, "chaining"], [30, "chaining"], [106, "chaining"]], "Compositor Chaining and Nesting": [[28, "compositor-chaining-and-nesting"]], "Nesting": [[28, "nesting"]], "Fully Adaptive Composition and Odometers": [[29, "fully-adaptive-composition-and-odometers"]], "Combinators": [[30, "combinators"]], "Composition": [[30, "composition"]], "Other Topics": [[30, "other-topics"]], "Measure Casting": [[31, "measure-casting"]], "(Non-Adaptive) Composition": [[32, "non-adaptive-composition"]], "Privacy Filters": [[33, "privacy-filters"]], "Context": [[34, "context"]], "API User Guide": [[35, "api-user-guide"]], "Feature Listing": [[35, "feature-listing"]], "Limitations": [[36, "limitations"], [73, "limitations"]], "Privacy Concerns": [[36, "privacy-concerns"]], "Incomplete Privacy Proofs": [[36, "incomplete-privacy-proofs"]], "Missing Functionality": [[36, "missing-functionality"]], "API Stability": [[36, "api-stability"]], "Software Quality": [[36, "software-quality"]], "Additive Noise Mechanisms": [[37, "Additive-Noise-Mechanisms"], [40, "additive-noise-mechanisms"]], "Distribution: Laplace vs. Gaussian": [[37, "Distribution:-Laplace-vs.-Gaussian"], [43, "Distribution:-Laplace-vs.-Gaussian"]], "Support: Float vs. Integer": [[37, "Support:-Float-vs.-Integer"], [43, "Support:-Float-vs.-Integer"]], "Domain: Scalar vs. Vector": [[37, "Domain:-Scalar-vs.-Vector"]], "Bit depth": [[37, "Bit-depth"], [43, "Bit-depth"]], "Desideratum: Floating-Point Granularity": [[37, "Desideratum:-Floating-Point-Granularity"], [43, "Desideratum:-Floating-Point-Granularity"]], "Approximate Laplace Projection": [[38, "Approximate-Laplace-Projection"], [40, "approximate-laplace-projection"]], "Canonical Noise Mechanism": [[39, "Canonical-Noise-Mechanism"]], "Binomial Assumption": [[39, "Binomial-Assumption"]], "Confidence Intervals": [[39, "Confidence-Intervals"]], "P-Values": [[39, "P-Values"]], "Uniformly-Most-Powerful Tests": [[39, "Uniformly-Most-Powerful-Tests"]], "Measurements": [[40, "measurements"]], "Laplacian Noise": [[40, "laplacian-noise"], [40, "id1"]], "Gaussian Noise": [[40, "gaussian-noise"], [40, "id2"], [60, "gaussian-noise"]], "Geometric Noise": [[40, "geometric-noise"]], "Canonical Noise": [[40, "canonical-noise"]], "Thresholded Noise Mechanisms": [[40, "thresholded-noise-mechanisms"], [43, "Thresholded-Noise-Mechanisms"]], "Noisy Max and Noisy Top K": [[40, "noisy-max-and-noisy-top-k"]], "Randomized Response": [[40, "randomized-response"], [42, "randomized-response"]], "Report Noisy Max Mechanisms": [[41, "Report-Noisy-Max-Mechanisms"]], "Distribution: Exponential vs. Gumbel": [[41, "Distribution:-Exponential-vs.-Gumbel"]], "Monotonicity": [[41, "Monotonicity"]], "Objective: Maximize vs. Minimize": [[41, "Objective:-Maximize-vs.-Minimize"]], "Composition: Max vs. Top-k": [[41, "Composition:-Max-vs.-Top-k"]], "Boolean Randomized Response": [[42, "boolean-randomized-response"]], "Categorical Randomized Response": [[42, "categorical-randomized-response"]], "Bit Vector Randomized Response": [[42, "bit-vector-randomized-response"]], "Threshold: Positive vs. Negative": [[43, "Threshold:-Positive-vs.-Negative"]], "Context API Plugins": [[44, "context-api-plugins"]], "Plugins": [[45, "plugins"]], "Examples": [[45, "examples"]], "Measurement example": [[46, "measurement-example"]], "Privately Selecting Grouping Columns": [[47, "privately-selecting-grouping-columns"]], "Thiel-Sen Regression": [[48, "Thiel-Sen-Regression"]], "Implement Thiel-Sen Mechanism": [[48, "Implement-Thiel-Sen-Mechanism"]], "1. Transformation: Pairwise Prediction": [[48, "1.-Transformation:-Pairwise-Prediction"]], "2. Measurement: DP Medians": [[48, "2.-Measurement:-DP-Medians"]], "3. Measurement: Thiel-Sen Estimator": [[48, "3.-Measurement:-Thiel-Sen-Estimator"]], "Creating and Applying the Mechanism to Synthetic Data": [[48, "Creating-and-Applying-the-Mechanism-to-Synthetic-Data"]], "Transformation example": [[49, "transformation-example"]], "Identifier Truncation and Bounds": [[50, "bounds-user-guide"]], "Privacy Unit with Multiple Bounds": [[50, "privacy-unit-with-multiple-bounds"]], "Data Types": [[51, "Data-Types"]], "Boolean": [[51, "Boolean"], [53, "boolean"]], "Integer": [[51, "Integer"]], "Float": [[51, "Float"]], "String": [[51, "String"], [58, "String"]], "Categorical": [[51, "Categorical"]], "Enum": [[51, "Enum"]], "Temporal": [[51, "Temporal"], [59, "Temporal"]], "Aggregation": [[52, "Aggregation"]], "Frame Length vs Expression Length": [[52, "Frame-Length-vs-Expression-Length"]], "Unique Counts": [[52, "Unique-Counts"]], "Null and Non-Null Counts": [[52, "Null-and-Non-Null-Counts"]], "Is Property": [[53, "is-property"]], "Not": [[53, "not"]], "Columns": [[54, "Columns"]], "Expressions": [[55, "expressions"]], "Manipulation": [[56, "Manipulation"]], "Cast": [[56, "Cast"]], "Clip": [[56, "Clip"]], "Cut": [[56, "Cut"]], "Drop NaNs": [[56, "Drop-NaNs"]], "Drop Nulls": [[56, "Drop-Nulls"]], "Fill NaN": [[56, "Fill-NaN"]], "Fill Null": [[56, "Fill-Null"]], "Filter": [[56, "Filter"], [96, "filter"]], "Replace": [[56, "Replace"]], "Replace Strict": [[56, "Replace-Strict"]], "To Physical": [[56, "To-Physical"]], "Operators": [[57, "Operators"]], "Strptime, To Date, To Datetime, To Time": [[58, "Strptime,-To-Date,-To-Datetime,-To-Time"]], "Date/Time Components": [[59, "Date/Time-Components"]], "Distribution Comparison": [[60, "distribution-comparison"]], "Sensitivity": [[60, "sensitivity"]], "Bound Contributions Per Group": [[60, "bound-contributions-per-group"]], "Polars": [[61, "polars"]], "Polars vs. OpenDP": [[62, "polars-vs-opendp"]], "Core Structures": [[63, "core-structures"]], "Similarities": [[63, "similarities"]], "Transformation": [[63, "transformation"]], "Measurement": [[63, "measurement"]], "Programming Framework": [[64, "programming-framework"]], "Summary": [[64, "summary"]], "Key Points": [[64, "key-points"]], "Supporting Elements": [[65, "supporting-elements"]], "Function": [[65, "function"]], "Domain": [[65, "domain"]], "Metric": [[65, "metric"]], "Measure": [[65, "measure"]], "Stability/Privacy Map": [[65, "stability-privacy-map"]], "Distance": [[65, "distance"]], "Aggregation: Mean": [[66, "aggregation-mean"]], "Known Dataset Size": [[66, "known-dataset-size"]], "Unknown Dataset Size": [[66, "unknown-dataset-size"]], "Aggregation: Quantile": [[67, "Aggregation:-Quantile"]], "Quantile via Exponential Mechanism": [[67, "Quantile-via-Exponential-Mechanism"]], "Quantile via Histogram": [[67, "Quantile-via-Histogram"]], "Quantile via B-ary Tree": [[67, "Quantile-via-B-ary-Tree"]], "Simulations": [[67, "Simulations"], [104, "Simulations"], [105, "Simulations"]], "Privately Estimating the Distribution": [[67, "Privately-Estimating-the-Distribution"]], "Aggregation: Sum": [[68, "Aggregation:-Sum"]], "Known/Unknown Dataset Size": [[68, "Known/Unknown-Dataset-Size"]], "Floating-Point": [[68, "Floating-Point"]], "Specialized Floating-Point Constructors": [[68, "Specialized-Floating-Point-Constructors"]], "Specialized Integer Constructors": [[68, "Specialized-Integer-Constructors"]], "Transformations": [[69, "transformations"]], "Casting": [[69, "casting"]], "Imputation": [[69, "imputation"]], "Indexing": [[69, "indexing"]], "Clamping": [[69, "clamping"]], "Dataset Ordering": [[69, "dataset-ordering"]], "Bounded Metrics": [[69, "bounded-metrics"]], "Resizing": [[69, "resizing"]], "Aggregators": [[69, "aggregators"]], "Quantiles via Trees": [[69, "quantiles-via-trees"]], "Preprocessing: Resize": [[70, "Preprocessing:-Resize"]], "Load example dataset": [[70, "Load-example-dataset"]], "When dataset size is known": [[70, "When-dataset-size-is-known"]], "When dataset size is unknown": [[70, "When-dataset-size-is-unknown"]], "Providing incorrect dataset size values": [[70, "Providing-incorrect-dataset-size-values"]], "OpenDP resize vs. other approaches": [[70, "OpenDP-resize-vs.-other-approaches"]], "Utilities": [[71, "utilities"]], "Parameter Search": [[72, "parameter-search"]], "Binary Search": [[72, "binary-search"]], "Exponential Search": [[72, "exponential-search"]], "Serialization": [[73, "serialization"]], "LazyFrameQuery Serialization": [[73, "lazyframequery-serialization"]], "Context Serialization": [[73, "context-serialization"]], "Framework API Serialization": [[73, "framework-api-serialization"]], "Typing": [[74, "typing"]], "Type Argument": [[74, "type-argument"]], "Supported Types": [[74, "supported-types"]], "Type Aliases": [[74, "type-aliases"]], "Contributor License Agreement": [[75, "contributor-license-agreement"], [77, "contributor-license-agreement"]], "Contact": [[76, "contact"]], "Contribution Process": [[77, "contribution-process"]], "Creating a Pull Request": [[77, "creating-a-pull-request"]], "Branch Philosophy": [[77, "branch-philosophy"]], "Vetting Process": [[77, "vetting-process"]], "Merge": [[77, "merge"]], "Development Environment": [[78, "development-environment"]], "Clone the OpenDP Repo": [[78, "clone-the-opendp-repo"]], "Rust Setup": [[78, "rust-setup"]], "Python Setup": [[78, "python-setup"]], "Python Tests": [[78, "python-tests"]], "Python Documentation": [[78, "python-documentation"]], "R Setup": [[78, "r-setup"]], "R Tests": [[78, "r-tests"]], "R Documentation": [[78, "r-documentation"]], "Docs Setup": [[78, "docs-setup"]], "Release Process": [[78, "release-process"]], "Environment Variables": [[78, "environment-variables"]], "Developer Tooling": [[78, "developer-tooling"]], "Getting Involved": [[79, "getting-involved"]], "Bug Reports": [[79, "bug-reports"]], "Code and Proof Contributions": [[79, "code-and-proof-contributions"]], "Resolve an Issue": [[79, "resolve-an-issue"]], "Documentation": [[79, "documentation"]], "Add Tests": [[79, "add-tests"]], "Review Pull Requests": [[79, "review-pull-requests"]], "Contributing": [[80, "contributing"]], "OpenDP Proof Initiation": [[81, "opendp-proof-initiation"]], "Proof Structure": [[81, "proof-structure"]], "Function Example": [[81, "function-example"]], "LaTex Template": [[81, "latex-template"]], "Preconditions": [[81, "preconditions"]], "Pseudocode": [[81, "pseudocode"]], "Postcondition": [[81, "postcondition"]], "Proof": [[81, "proof"]], "OpenDP Rust Initiation": [[82, "opendp-rust-initiation"]], "Transformation Structure": [[82, "transformation-structure"]], "Example Transformation Constructor": [[82, "example-transformation-constructor"]], "Measurement Structure": [[82, "measurement-structure"]], "Developer Loop": [[82, "developer-loop"]], "Next Steps": [[82, "next-steps"], [85, "next-steps"]], "More Examples": [[83, "more-examples"]], "Getting Started": [[84, "getting-started"]], "Quickstart": [[86, "quickstart"]], "Statistical Modeling": [[87, "statistical-modeling"]], "Linear Regression": [[88, "linear-regression"]], "Differentially Private PCA": [[89, "differentially-private-pca"]], "Synthetic Data": [[90, "synthetic-data"]], "Handling Null Values": [[90, "handling-null-values"]], "Contingency Tables": [[91, "contingency-tables"]], "Adaptive Estimation": [[91, "adaptive-estimation"]], "Essential Statistics": [[92, "essential-statistics"]], "Count": [[92, "count"]], "Sum": [[92, "sum"]], "Mean": [[92, "mean"]], "Median": [[92, "median"]], "Quantile": [[92, "quantile"]], "Grouping": [[93, "Grouping"]], "Stable Keys": [[93, "Stable-Keys"]], "Explicit Keys": [[93, "Explicit-Keys"]], "Invariant Group Keys": [[93, "Invariant-Group-Keys"]], "Invariant Group Lengths": [[93, "Invariant-Group-Lengths"]], "Identifier Truncation": [[94, "identifier-truncation"]], "Truncating Per-Group Contributions": [[94, "truncating-per-group-contributions"]], "Truncating Contributed Groups": [[94, "truncating-contributed-groups"]], "Working with Tabular Data": [[95, "working-with-tabular-data"]], "Dataset Description": [[95, "dataset-description"]], "Mediate access with Context": [[95, "mediate-access-with-context"]], "Preparing Microdata": [[96, "preparing-microdata"]], "With Columns": [[96, "with-columns"]], "Select": [[96, "select"]], "Group By (Private)": [[96, "group-by-private"]], "Group By / Agg (Stable)": [[96, "group-by-agg-stable"]], "Typical Workflow": [[97, "typical-workflow"]], "1. Identify the Unit of Privacy": [[97, "identify-the-unit-of-privacy"]], "2. Set Privacy Loss Parameters": [[97, "set-privacy-loss-parameters"]], "3. Collect Public Information": [[97, "collect-public-information"]], "4. Mediate Access to Data": [[97, "mediate-access-to-data"]], "5. Submit DP Queries": [[97, "submit-dp-queries"]], "Other features": [[97, "other-features"]], "Assessing Utility": [[98, "assessing-utility"]], "Accuracy": [[98, "accuracy"]], "Welcome": [[99, "welcome"]], "What is differential privacy?": [[99, "what-is-differential-privacy"]], "Why OpenDP?": [[99, "why-opendp"]], "Who is using OpenDP?": [[99, "who-is-using-opendp"]], "What next?": [[99, "what-next"]], "A Framework to Understand DP": [[100, "A-Framework-to-Understand-DP"]], "Distance Between Datasets - Adjacency": [[100, "Distance-Between-Datasets---Adjacency"]], "Distance Between Distributions - Divergence": [[100, "Distance-Between-Distributions---Divergence"]], "Definition of Privacy": [[100, "Definition-of-Privacy"]], "Distance Between Aggregates - Sensitivity": [[100, "Distance-Between-Aggregates---Sensitivity"]], "Definition of Stability": [[100, "Definition-of-Stability"]], "Stability Maps and Privacy Maps": [[100, "Stability-Maps-and-Privacy-Maps"]], "Accuracy: Pitfalls and Edge Cases": [[101, "Accuracy:-Pitfalls-and-Edge-Cases"]], "Overview": [[101, "Overview"]], "Accuracy vs. Confidence Intervals": [[101, "Accuracy-vs.-Confidence-Intervals"]], "What is D?": [[101, "What-is-D?"]], "Synopsis": [[101, "Synopsis"]], "Accuracy Guarantees In Practice": [[101, "Accuracy-Guarantees-In-Practice"]], "Differencing Attack": [[102, "Differencing-Attack"]], "Differential Privacy": [[102, "Differential-Privacy"], [104, "Differential-Privacy"], [105, "Differential-Privacy"]], "Distribution of Outcomes": [[102, "Distribution-of-Outcomes"]], "Attacks": [[103, "attacks"]], "Membership": [[104, "Membership"]], "Membership Attacks": [[104, "Membership-Attacks"]], "Example": [[104, "Example"]], "Reconstruction": [[105, "Reconstruction"]], "Reconstruction Attack": [[105, "Reconstruction-Attack"]], "Mitigations": [[105, "Mitigations"]], "Differential Privacy with OpenDP": [[106, "differential-privacy-with-opendp"]], "The Laplace Mechanism": [[106, "the-laplace-mechanism"]], "Transformation Example: Sum": [[106, "transformation-example-sum"]], "Transformation Example: Clamp": [[106, "transformation-example-clamp"]], "Retrospective": [[106, "retrospective"]], "Partial Constructors": [[106, "partial-constructors"]], "Theory": [[107, "theory"]], "Exponential Mechanism Quantiles": [[108, "Exponential-Mechanism-Quantiles"]], "1. Score Each Candidate": [[108, "1.-Score-Each-Candidate"]], "2. Report Noisy Min": [[108, "2.-Report-Noisy-Min"]], "3. Index Candidates": [[108, "3.-Index-Candidates"]], "Floating-Point Attack Mitigation": [[108, "Floating-Point-Attack-Mitigation"]], "Mechanisms": [[109, "mechanisms"]], "Resources List": [[110, "resources-list"]], "Foundations": [[110, "foundations"]], "Applying Differential Privacy": [[110, "applying-differential-privacy"]], "Learning About Differential Privacy": [[110, "learning-about-differential-privacy"]], "Papers": [[110, "papers"]]}, "indexentries": {"module": [[2, "module-opendp"], [3, "module-opendp.accuracy"], [4, "module-opendp.combinators"], [5, "module-opendp.context"], [6, "module-opendp.core"], [7, "module-opendp.domains"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.mbi"], [11, "module-opendp.extras.numpy"], [12, "module-opendp.extras.numpy.canonical"], [13, "module-opendp.extras.polars"], [14, "module-opendp.extras.polars.contingency_table"], [15, "module-opendp.extras.sklearn"], [16, "module-opendp.extras.sklearn.decomposition"], [17, "module-opendp.extras.sklearn.linear_model"], [18, "module-opendp.measurements"], [19, "module-opendp.measures"], [20, "module-opendp.metrics"], [21, "module-opendp.mod"], [22, "module-opendp.prelude"], [23, "module-opendp.transformations"], [24, "module-opendp.typing"]], "opendp": [[2, "module-opendp"]], "accuracy_to_discrete_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_gaussian_scale"]], "accuracy_to_discrete_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_laplacian_scale"]], "accuracy_to_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_gaussian_scale"]], "accuracy_to_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_laplacian_scale"]], "discrete_gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_gaussian_scale_to_accuracy"]], "discrete_laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_laplacian_scale_to_accuracy"]], "gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.gaussian_scale_to_accuracy"]], "laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.laplacian_scale_to_accuracy"]], "opendp.accuracy": [[3, "module-opendp.accuracy"]], "summarize_polars_measurement() (in module opendp.accuracy)": [[3, "opendp.accuracy.summarize_polars_measurement"]], "make_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_adaptive_composition"]], "make_approximate() (in module opendp.combinators)": [[4, "opendp.combinators.make_approximate"]], "make_basic_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_basic_composition"]], "make_chain_mt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_mt"]], "make_chain_pm() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_pm"]], "make_chain_tt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_tt"]], "make_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_composition"]], "make_fix_delta() (in module opendp.combinators)": [[4, "opendp.combinators.make_fix_delta"]], "make_fixed_approxdp_to_approxdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_fixed_approxDP_to_approxDP"]], "make_fully_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_fully_adaptive_composition"]], "make_population_amplification() (in module opendp.combinators)": [[4, "opendp.combinators.make_population_amplification"]], "make_privacy_filter() (in module opendp.combinators)": [[4, "opendp.combinators.make_privacy_filter"]], "make_puredp_to_zcdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_pureDP_to_zCDP"]], "make_select_private_candidate() (in module opendp.combinators)": [[4, "opendp.combinators.make_select_private_candidate"]], "make_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_sequential_composition"]], "make_zcdp_to_approxdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_zCDP_to_approxDP"]], "opendp.combinators": [[4, "module-opendp.combinators"]], "then_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_adaptive_composition"]], "then_fully_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_fully_adaptive_composition"]], "then_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_sequential_composition"]], "context (class in opendp.context)": [[5, "opendp.context.Context"]], "partialchain (class in opendp.context)": [[5, "opendp.context.PartialChain"]], "query (class in opendp.context)": [[5, "opendp.context.Query"]], "accountant (opendp.context.context attribute)": [[5, "opendp.context.Context.accountant"]], "compositor() (opendp.context.context static method)": [[5, "opendp.context.Context.compositor"]], "compositor() (opendp.context.query method)": [[5, "opendp.context.Query.compositor"]], "current_privacy_loss() (opendp.context.context method)": [[5, "opendp.context.Context.current_privacy_loss"]], "deserialize_polars_plan() (opendp.context.context method)": [[5, "opendp.context.Context.deserialize_polars_plan"]], "domain_of() (in module opendp.context)": [[5, "opendp.context.domain_of"]], "fix() (opendp.context.partialchain method)": [[5, "opendp.context.PartialChain.fix"]], "loss_of() (in module opendp.context)": [[5, "opendp.context.loss_of"]], "metric_of() (in module opendp.context)": [[5, "opendp.context.metric_of"]], "new_with() (opendp.context.query method)": [[5, "opendp.context.Query.new_with"]], "opendp.context": [[5, "module-opendp.context"]], "param() (opendp.context.query method)": [[5, "opendp.context.Query.param"]], "partial (opendp.context.partialchain attribute)": [[5, "opendp.context.PartialChain.partial"]], "query() (opendp.context.context method)": [[5, "opendp.context.Context.query"]], "queryable (opendp.context.context attribute)": [[5, "opendp.context.Context.queryable"]], "register() (in module opendp.context)": [[5, "opendp.context.register"]], "release() (opendp.context.query method)": [[5, "opendp.context.Query.release"]], "remaining_privacy_loss() (opendp.context.context method)": [[5, "opendp.context.Context.remaining_privacy_loss"]], "resolve() (opendp.context.query method)": [[5, "opendp.context.Query.resolve"]], "space_of() (in module opendp.context)": [[5, "opendp.context.space_of"]], "unit_of() (in module opendp.context)": [[5, "opendp.context.unit_of"]], "wrap() (opendp.context.partialchain class method)": [[5, "opendp.context.PartialChain.wrap"]], "function_eval() (in module opendp.core)": [[6, "opendp.core.function_eval"]], "measurement_check() (in module opendp.core)": [[6, "opendp.core.measurement_check"]], "measurement_function() (in module opendp.core)": [[6, "opendp.core.measurement_function"]], "measurement_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_carrier_type"]], "measurement_input_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_distance_type"]], "measurement_input_domain() (in module opendp.core)": [[6, "opendp.core.measurement_input_domain"]], "measurement_input_metric() (in module opendp.core)": [[6, "opendp.core.measurement_input_metric"]], "measurement_invoke() (in module opendp.core)": [[6, "opendp.core.measurement_invoke"]], "measurement_map() (in module opendp.core)": [[6, "opendp.core.measurement_map"]], "measurement_output_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_output_distance_type"]], "measurement_output_measure() (in module opendp.core)": [[6, "opendp.core.measurement_output_measure"]], "new_function() (in module opendp.core)": [[6, "opendp.core.new_function"]], "new_queryable() (in module opendp.core)": [[6, "opendp.core.new_queryable"]], "odometer_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.odometer_input_carrier_type"]], "odometer_input_domain() (in module opendp.core)": [[6, "opendp.core.odometer_input_domain"]], "odometer_input_metric() (in module opendp.core)": [[6, "opendp.core.odometer_input_metric"]], "odometer_invoke() (in module opendp.core)": [[6, "opendp.core.odometer_invoke"]], "odometer_output_measure() (in module opendp.core)": [[6, "opendp.core.odometer_output_measure"]], "odometer_queryable_invoke() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_invoke"]], "odometer_queryable_invoke_type() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_invoke_type"]], "odometer_queryable_privacy_loss() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_privacy_loss"]], "odometer_queryable_privacy_loss_type() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_privacy_loss_type"]], "opendp.core": [[6, "module-opendp.core"]], "queryable_eval() (in module opendp.core)": [[6, "opendp.core.queryable_eval"]], "queryable_query_type() (in module opendp.core)": [[6, "opendp.core.queryable_query_type"]], "transformation_check() (in module opendp.core)": [[6, "opendp.core.transformation_check"]], "transformation_function() (in module opendp.core)": [[6, "opendp.core.transformation_function"]], "transformation_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_carrier_type"]], "transformation_input_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_distance_type"]], "transformation_input_domain() (in module opendp.core)": [[6, "opendp.core.transformation_input_domain"]], "transformation_input_metric() (in module opendp.core)": [[6, "opendp.core.transformation_input_metric"]], "transformation_invoke() (in module opendp.core)": [[6, "opendp.core.transformation_invoke"]], "transformation_map() (in module opendp.core)": [[6, "opendp.core.transformation_map"]], "transformation_output_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_output_distance_type"]], "transformation_output_domain() (in module opendp.core)": [[6, "opendp.core.transformation_output_domain"]], "transformation_output_metric() (in module opendp.core)": [[6, "opendp.core.transformation_output_metric"]], "array_domain() (in module opendp.domains)": [[7, "opendp.domains.array_domain"]], "atom_domain() (in module opendp.domains)": [[7, "opendp.domains.atom_domain"]], "bitvector_domain() (in module opendp.domains)": [[7, "opendp.domains.bitvector_domain"]], "categorical_domain() (in module opendp.domains)": [[7, "opendp.domains.categorical_domain"]], "datetime_domain() (in module opendp.domains)": [[7, "opendp.domains.datetime_domain"]], "domain_carrier_type() (in module opendp.domains)": [[7, "opendp.domains.domain_carrier_type"]], "domain_debug() (in module opendp.domains)": [[7, "opendp.domains.domain_debug"]], "domain_type() (in module opendp.domains)": [[7, "opendp.domains.domain_type"]], "enum_domain() (in module opendp.domains)": [[7, "opendp.domains.enum_domain"]], "lazyframe_domain() (in module opendp.domains)": [[7, "opendp.domains.lazyframe_domain"]], "map_domain() (in module opendp.domains)": [[7, "opendp.domains.map_domain"]], "opendp.domains": [[7, "module-opendp.domains"]], "option_domain() (in module opendp.domains)": [[7, "opendp.domains.option_domain"]], "series_domain() (in module opendp.domains)": [[7, "opendp.domains.series_domain"]], "user_domain() (in module opendp.domains)": [[7, "opendp.domains.user_domain"]], "vector_domain() (in module opendp.domains)": [[7, "opendp.domains.vector_domain"]], "wild_expr_domain() (in module opendp.domains)": [[7, "opendp.domains.wild_expr_domain"]], "with_margin() (in module opendp.domains)": [[7, "opendp.domains.with_margin"]], "opendp.extras": [[8, "module-opendp.extras"]], "get_california_pums_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_california_pums_path"]], "get_france_lfs_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_france_lfs_path"]], "opendp.extras.examples": [[9, "module-opendp.extras.examples"]], "aim (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.AIM"]], "algorithm (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Algorithm"]], "contingencytable (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.ContingencyTable"]], "count (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Count"]], "fixed (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Fixed"]], "mst (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.MST"]], "sequential (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Sequential"]], "algorithms (opendp.extras.mbi.sequential attribute)": [[10, "opendp.extras.mbi.Sequential.algorithms"]], "by (opendp.extras.mbi.count attribute)": [[10, "opendp.extras.mbi.Count.by"]], "cuts (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.cuts"]], "estimator() (opendp.extras.mbi.algorithm method)": [[10, "opendp.extras.mbi.Algorithm.estimator"]], "keys (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.keys"]], "make_contingency_table() (in module opendp.extras.mbi)": [[10, "opendp.extras.mbi.make_contingency_table"]], "make_marginals() (opendp.extras.mbi.aim method)": [[10, "opendp.extras.mbi.AIM.make_marginals"]], "make_marginals() (opendp.extras.mbi.algorithm method)": [[10, "opendp.extras.mbi.Algorithm.make_marginals"]], "make_marginals() (opendp.extras.mbi.fixed method)": [[10, "opendp.extras.mbi.Fixed.make_marginals"]], "make_marginals() (opendp.extras.mbi.mst method)": [[10, "opendp.extras.mbi.MST.make_marginals"]], "make_marginals() (opendp.extras.mbi.sequential method)": [[10, "opendp.extras.mbi.Sequential.make_marginals"]], "marginals (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.marginals"]], "max_size (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.max_size"]], "measure_split (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.measure_split"]], "measure_split (opendp.extras.mbi.mst attribute)": [[10, "opendp.extras.mbi.MST.measure_split"]], "mirror_descent() (in module opendp.extras.mbi)": [[10, "opendp.extras.mbi.mirror_descent"]], "model (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.model"]], "num_selections (opendp.extras.mbi.mst attribute)": [[10, "opendp.extras.mbi.MST.num_selections"]], "oneway (opendp.extras.mbi.algorithm attribute)": [[10, "opendp.extras.mbi.Algorithm.oneway"]], "oneway (opendp.extras.mbi.fixed attribute)": [[10, "opendp.extras.mbi.Fixed.oneway"]], "oneway_split (opendp.extras.mbi.algorithm attribute)": [[10, "opendp.extras.mbi.Algorithm.oneway_split"]], "opendp.extras.mbi": [[10, "module-opendp.extras.mbi"]], "project() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.project"]], "project_melted() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.project_melted"]], "queries (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.queries"]], "queries (opendp.extras.mbi.fixed attribute)": [[10, "opendp.extras.mbi.Fixed.queries"]], "rounds (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.rounds"]], "schema (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.schema"]], "std() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.std"]], "synthesize() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.synthesize"]], "thresholds (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.thresholds"]], "weight (opendp.extras.mbi.count attribute)": [[10, "opendp.extras.mbi.Count.weight"]], "weights (opendp.extras.mbi.sequential attribute)": [[10, "opendp.extras.mbi.Sequential.weights"]], "nparray2domain (class in opendp.extras.numpy)": [[11, "opendp.extras.numpy.NPArray2Domain"]], "nparrayddomain (class in opendp.extras.numpy)": [[11, "opendp.extras.numpy.NPArrayDDomain"]], "t (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.T"]], "t (opendp.extras.numpy.nparrayddomain attribute)": [[11, "opendp.extras.numpy.NPArrayDDomain.T"]], "array2_domain() (in module opendp.extras.numpy)": [[11, "opendp.extras.numpy.array2_domain"]], "arrayd_domain() (in module opendp.extras.numpy)": [[11, "opendp.extras.numpy.arrayd_domain"]], "cardinalities (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.cardinalities"]], "nan (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.nan"]], "norm (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.norm"]], "num_columns (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.num_columns"]], "opendp.extras.numpy": [[11, "module-opendp.extras.numpy"]], "origin (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.origin"]], "p (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.p"]], "shape (opendp.extras.numpy.nparrayddomain attribute)": [[11, "opendp.extras.numpy.NPArrayDDomain.shape"]], "size (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.size"]], "binomialcnd (class in opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.BinomialCND"]], "confidence_interval() (opendp.extras.numpy.canonical.binomialcnd method)": [[12, "opendp.extras.numpy.canonical.BinomialCND.confidence_interval"]], "one_sided_confidence_interval() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.one_sided_confidence_interval"]], "one_sided_pvalue() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.one_sided_pvalue"]], "one_sided_uniformly_most_powerful_tests() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.one_sided_uniformly_most_powerful_tests"]], "opendp.extras.numpy.canonical": [[12, "module-opendp.extras.numpy.canonical"]], "p_value() (opendp.extras.numpy.canonical.binomialcnd method)": [[12, "opendp.extras.numpy.canonical.BinomialCND.p_value"]], "two_sided_confidence_interval() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.two_sided_confidence_interval"]], "two_sided_pvalue() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.two_sided_pvalue"]], "bound (class in opendp.extras.polars)": [[13, "opendp.extras.polars.Bound"]], "dpexpr (class in opendp.extras.polars)": [[13, "opendp.extras.polars.DPExpr"]], "lazyframequery (class in opendp.extras.polars)": [[13, "opendp.extras.polars.LazyFrameQuery"]], "lazygroupbyquery (class in opendp.extras.polars)": [[13, "opendp.extras.polars.LazyGroupByQuery"]], "margin (class in opendp.extras.polars)": [[13, "opendp.extras.polars.Margin"]], "onceframe (class in opendp.extras.polars)": [[13, "opendp.extras.polars.OnceFrame"]], "sortby (class in opendp.extras.polars)": [[13, "opendp.extras.polars.SortBy"]], "agg() (opendp.extras.polars.lazygroupbyquery method)": [[13, "opendp.extras.polars.LazyGroupByQuery.agg"]], "by (opendp.extras.polars.bound attribute)": [[13, "opendp.extras.polars.Bound.by"]], "by (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.by"]], "by (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.by"]], "collect() (opendp.extras.polars.onceframe method)": [[13, "opendp.extras.polars.OnceFrame.collect"]], "contingency_table() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.contingency_table"]], "count() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.count"]], "descending (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.descending"]], "dp_len() (in module opendp.extras.polars)": [[13, "opendp.extras.polars.dp_len"]], "filter() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.filter"]], "gaussian() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.gaussian"]], "group_by() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.group_by"]], "invariant (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.invariant"]], "join() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.join"]], "laplace() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.laplace"]], "lazy() (opendp.extras.polars.onceframe method)": [[13, "opendp.extras.polars.OnceFrame.lazy"]], "len() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.len"]], "maintain_order (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.maintain_order"]], "max_groups (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_groups"]], "max_influenced_partitions (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_influenced_partitions"]], "max_length (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_length"]], "max_num_partitions (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_num_partitions"]], "max_partition_contributions (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_partition_contributions"]], "max_partition_length (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_partition_length"]], "mean() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.mean"]], "median() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.median"]], "multithreaded (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.multithreaded"]], "n_unique() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.n_unique"]], "noise() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.noise"]], "null_count() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.null_count"]], "nulls_last (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.nulls_last"]], "num_groups (opendp.extras.polars.bound attribute)": [[13, "opendp.extras.polars.Bound.num_groups"]], "opendp.extras.polars": [[13, "module-opendp.extras.polars"]], "per_group (opendp.extras.polars.bound attribute)": [[13, "opendp.extras.polars.Bound.per_group"]], "public_info (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.public_info"]], "quantile() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.quantile"]], "release() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.release"]], "resolve() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.resolve"]], "select() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.select"]], "select_seq() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.select_seq"]], "sort() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.sort"]], "sum() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.sum"]], "summarize() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.summarize"]], "truncate_num_groups() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.truncate_num_groups"]], "truncate_per_group() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.truncate_per_group"]], "with_columns() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.with_columns"]], "with_columns_seq() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.with_columns_seq"]], "with_keys() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.with_keys"]], "contingencytablequery (class in opendp.extras.polars.contingency_table)": [[14, "opendp.extras.polars.contingency_table.ContingencyTableQuery"]], "opendp.extras.polars.contingency_table": [[14, "module-opendp.extras.polars.contingency_table"]], "release() (opendp.extras.polars.contingency_table.contingencytablequery method)": [[14, "opendp.extras.polars.contingency_table.ContingencyTableQuery.release"]], "opendp.extras.sklearn": [[15, "module-opendp.extras.sklearn"]], "pca (class in opendp.extras.sklearn.decomposition)": [[16, "opendp.extras.sklearn.decomposition.PCA"]], "pcaepsilons (class in opendp.extras.sklearn.decomposition)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons"]], "eigvals (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvals"]], "eigvecs (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvecs"]], "fit() (opendp.extras.sklearn.decomposition.pca method)": [[16, "opendp.extras.sklearn.decomposition.PCA.fit"]], "make_private_pca() (in module opendp.extras.sklearn.decomposition)": [[16, "opendp.extras.sklearn.decomposition.make_private_pca"]], "mean (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons.mean"]], "measurement() (opendp.extras.sklearn.decomposition.pca method)": [[16, "opendp.extras.sklearn.decomposition.PCA.measurement"]], "n_features (opendp.extras.sklearn.decomposition.pca attribute)": [[16, "opendp.extras.sklearn.decomposition.PCA.n_features"]], "opendp.extras.sklearn.decomposition": [[16, "module-opendp.extras.sklearn.decomposition"]], "linearregression (class in opendp.extras.sklearn.linear_model)": [[17, "opendp.extras.sklearn.linear_model.LinearRegression"]], "fit() (opendp.extras.sklearn.linear_model.linearregression method)": [[17, "opendp.extras.sklearn.linear_model.LinearRegression.fit"]], "opendp.extras.sklearn.linear_model": [[17, "module-opendp.extras.sklearn.linear_model"]], "predict() (opendp.extras.sklearn.linear_model.linearregression method)": [[17, "opendp.extras.sklearn.linear_model.LinearRegression.predict"]], "debias_randomized_response_bitvec() (in module opendp.measurements)": [[18, "opendp.measurements.debias_randomized_response_bitvec"]], "make_alp_queryable() (in module opendp.measurements)": [[18, "opendp.measurements.make_alp_queryable"]], "make_canonical_noise() (in module opendp.measurements)": [[18, "opendp.measurements.make_canonical_noise"]], "make_gaussian() (in module opendp.measurements)": [[18, "opendp.measurements.make_gaussian"]], "make_gaussian_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.make_gaussian_threshold"]], "make_geometric() (in module opendp.measurements)": [[18, "opendp.measurements.make_geometric"]], "make_laplace() (in module opendp.measurements)": [[18, "opendp.measurements.make_laplace"]], "make_laplace_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.make_laplace_threshold"]], "make_noise() (in module opendp.measurements)": [[18, "opendp.measurements.make_noise"]], "make_noise_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.make_noise_threshold"]], "make_noisy_max() (in module opendp.measurements)": [[18, "opendp.measurements.make_noisy_max"]], "make_noisy_top_k() (in module opendp.measurements)": [[18, "opendp.measurements.make_noisy_top_k"]], "make_private_expr() (in module opendp.measurements)": [[18, "opendp.measurements.make_private_expr"]], "make_private_lazyframe() (in module opendp.measurements)": [[18, "opendp.measurements.make_private_lazyframe"]], "make_private_quantile() (in module opendp.measurements)": [[18, "opendp.measurements.make_private_quantile"]], "make_randomized_response() (in module opendp.measurements)": [[18, "opendp.measurements.make_randomized_response"]], "make_randomized_response_bitvec() (in module opendp.measurements)": [[18, "opendp.measurements.make_randomized_response_bitvec"]], "make_randomized_response_bool() (in module opendp.measurements)": [[18, "opendp.measurements.make_randomized_response_bool"]], "make_report_noisy_max_gumbel() (in module opendp.measurements)": [[18, "opendp.measurements.make_report_noisy_max_gumbel"]], "make_user_measurement() (in module opendp.measurements)": [[18, "opendp.measurements.make_user_measurement"]], "opendp.measurements": [[18, "module-opendp.measurements"]], "then_alp_queryable() (in module opendp.measurements)": [[18, "opendp.measurements.then_alp_queryable"]], "then_canonical_noise() (in module opendp.measurements)": [[18, "opendp.measurements.then_canonical_noise"]], "then_gaussian() (in module opendp.measurements)": [[18, "opendp.measurements.then_gaussian"]], "then_gaussian_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.then_gaussian_threshold"]], "then_geometric() (in module opendp.measurements)": [[18, "opendp.measurements.then_geometric"]], "then_laplace() (in module opendp.measurements)": [[18, "opendp.measurements.then_laplace"]], "then_laplace_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.then_laplace_threshold"]], "then_noise() (in module opendp.measurements)": [[18, "opendp.measurements.then_noise"]], "then_noise_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.then_noise_threshold"]], "then_noisy_max() (in module opendp.measurements)": [[18, "opendp.measurements.then_noisy_max"]], "then_noisy_top_k() (in module opendp.measurements)": [[18, "opendp.measurements.then_noisy_top_k"]], "then_private_expr() (in module opendp.measurements)": [[18, "opendp.measurements.then_private_expr"]], "then_private_lazyframe() (in module opendp.measurements)": [[18, "opendp.measurements.then_private_lazyframe"]], "then_private_quantile() (in module opendp.measurements)": [[18, "opendp.measurements.then_private_quantile"]], "then_randomized_response_bitvec() (in module opendp.measurements)": [[18, "opendp.measurements.then_randomized_response_bitvec"]], "then_report_noisy_max_gumbel() (in module opendp.measurements)": [[18, "opendp.measurements.then_report_noisy_max_gumbel"]], "then_user_measurement() (in module opendp.measurements)": [[18, "opendp.measurements.then_user_measurement"]], "approximate() (in module opendp.measures)": [[19, "opendp.measures.approximate"]], "fixed_smoothed_max_divergence() (in module opendp.measures)": [[19, "opendp.measures.fixed_smoothed_max_divergence"]], "max_divergence() (in module opendp.measures)": [[19, "opendp.measures.max_divergence"]], "measure_debug() (in module opendp.measures)": [[19, "opendp.measures.measure_debug"]], "measure_distance_type() (in module opendp.measures)": [[19, "opendp.measures.measure_distance_type"]], "measure_type() (in module opendp.measures)": [[19, "opendp.measures.measure_type"]], "new_privacy_profile() (in module opendp.measures)": [[19, "opendp.measures.new_privacy_profile"]], "opendp.measures": [[19, "module-opendp.measures"]], "renyi_divergence() (in module opendp.measures)": [[19, "opendp.measures.renyi_divergence"]], "smoothed_max_divergence() (in module opendp.measures)": [[19, "opendp.measures.smoothed_max_divergence"]], "user_divergence() (in module opendp.measures)": [[19, "opendp.measures.user_divergence"]], "zero_concentrated_divergence() (in module opendp.measures)": [[19, "opendp.measures.zero_concentrated_divergence"]], "absolute_distance() (in module opendp.metrics)": [[20, "opendp.metrics.absolute_distance"]], "change_one_distance() (in module opendp.metrics)": [[20, "opendp.metrics.change_one_distance"]], "change_one_id_distance() (in module opendp.metrics)": [[20, "opendp.metrics.change_one_id_distance"]], "discrete_distance() (in module opendp.metrics)": [[20, "opendp.metrics.discrete_distance"]], "frame_distance() (in module opendp.metrics)": [[20, "opendp.metrics.frame_distance"]], "hamming_distance() (in module opendp.metrics)": [[20, "opendp.metrics.hamming_distance"]], "insert_delete_distance() (in module opendp.metrics)": [[20, "opendp.metrics.insert_delete_distance"]], "l01inf_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l01inf_distance"]], "l02inf_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l02inf_distance"]], "l1_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l1_distance"]], "l2_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l2_distance"]], "linf_distance() (in module opendp.metrics)": [[20, "opendp.metrics.linf_distance"]], "metric_debug() (in module opendp.metrics)": [[20, "opendp.metrics.metric_debug"]], "metric_distance_type() (in module opendp.metrics)": [[20, "opendp.metrics.metric_distance_type"]], "metric_type() (in module opendp.metrics)": [[20, "opendp.metrics.metric_type"]], "opendp.metrics": [[20, "module-opendp.metrics"]], "symmetric_distance() (in module opendp.metrics)": [[20, "opendp.metrics.symmetric_distance"]], "symmetric_id_distance() (in module opendp.metrics)": [[20, "opendp.metrics.symmetric_id_distance"]], "user_distance() (in module opendp.metrics)": [[20, "opendp.metrics.user_distance"]], "approximatedivergence (class in opendp.mod)": [[21, "opendp.mod.ApproximateDivergence"]], "atomdomain (class in opendp.mod)": [[21, "opendp.mod.AtomDomain"]], "changeoneiddistance (class in opendp.mod)": [[21, "opendp.mod.ChangeOneIdDistance"]], "domain (class in opendp.mod)": [[21, "opendp.mod.Domain"]], "extrinsicdomain (class in opendp.mod)": [[21, "opendp.mod.ExtrinsicDomain"]], "framedistance (class in opendp.mod)": [[21, "opendp.mod.FrameDistance"]], "function (class in opendp.mod)": [[21, "opendp.mod.Function"]], "lazyframedomain (class in opendp.mod)": [[21, "opendp.mod.LazyFrameDomain"]], "measure (class in opendp.mod)": [[21, "opendp.mod.Measure"]], "measurement (class in opendp.mod)": [[21, "opendp.mod.Measurement"]], "metric (class in opendp.mod)": [[21, "opendp.mod.Metric"]], "odometer (class in opendp.mod)": [[21, "opendp.mod.Odometer"]], "odometerqueryable (class in opendp.mod)": [[21, "opendp.mod.OdometerQueryable"]], "opendpexception": [[21, "opendp.mod.OpenDPException"]], "optiondomain (class in opendp.mod)": [[21, "opendp.mod.OptionDomain"]], "privacyprofile (class in opendp.mod)": [[21, "opendp.mod.PrivacyProfile"]], "queryable (class in opendp.mod)": [[21, "opendp.mod.Queryable"]], "seriesdomain (class in opendp.mod)": [[21, "opendp.mod.SeriesDomain"]], "symmetriciddistance (class in opendp.mod)": [[21, "opendp.mod.SymmetricIdDistance"]], "transformation (class in opendp.mod)": [[21, "opendp.mod.Transformation"]], "unknowntypeexception": [[21, "opendp.mod.UnknownTypeException"]], "vectordomain (class in opendp.mod)": [[21, "opendp.mod.VectorDomain"]], "assert_features() (in module opendp.mod)": [[21, "opendp.mod.assert_features"]], "binary_search() (in module opendp.mod)": [[21, "opendp.mod.binary_search"]], "binary_search_chain() (in module opendp.mod)": [[21, "opendp.mod.binary_search_chain"]], "binary_search_param() (in module opendp.mod)": [[21, "opendp.mod.binary_search_param"]], "bounds (opendp.mod.atomdomain attribute)": [[21, "opendp.mod.AtomDomain.bounds"]], "carrier_type (opendp.mod.domain attribute)": [[21, "opendp.mod.Domain.carrier_type"]], "cast() (opendp.mod.domain method)": [[21, "opendp.mod.Domain.cast"]], "cast() (opendp.mod.metric method)": [[21, "opendp.mod.Metric.cast"]], "check() (opendp.mod.measurement method)": [[21, "opendp.mod.Measurement.check"]], "check() (opendp.mod.transformation method)": [[21, "opendp.mod.Transformation.check"]], "columns (opendp.mod.lazyframedomain attribute)": [[21, "opendp.mod.LazyFrameDomain.columns"]], "delta() (opendp.mod.privacyprofile method)": [[21, "opendp.mod.PrivacyProfile.delta"]], "descriptor (opendp.mod.extrinsicdomain attribute)": [[21, "opendp.mod.ExtrinsicDomain.descriptor"]], "deserialize() (in module opendp.mod)": [[21, "opendp.mod.deserialize"]], "disable_features() (in module opendp.mod)": [[21, "opendp.mod.disable_features"]], "distance_type (opendp.mod.measure attribute)": [[21, "opendp.mod.Measure.distance_type"]], "distance_type (opendp.mod.metric attribute)": [[21, "opendp.mod.Metric.distance_type"]], "element_domain (opendp.mod.optiondomain attribute)": [[21, "opendp.mod.OptionDomain.element_domain"]], "element_domain (opendp.mod.seriesdomain attribute)": [[21, "opendp.mod.SeriesDomain.element_domain"]], "element_domain (opendp.mod.vectordomain attribute)": [[21, "opendp.mod.VectorDomain.element_domain"]], "enable_features() (in module opendp.mod)": [[21, "opendp.mod.enable_features"]], "epsilon() (opendp.mod.privacyprofile method)": [[21, "opendp.mod.PrivacyProfile.epsilon"]], "exponential_bounds_search() (in module opendp.mod)": [[21, "opendp.mod.exponential_bounds_search"]], "function (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.function"]], "function (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.function"]], "get_margin() (opendp.mod.lazyframedomain method)": [[21, "opendp.mod.LazyFrameDomain.get_margin"]], "get_series_domain() (opendp.mod.lazyframedomain method)": [[21, "opendp.mod.LazyFrameDomain.get_series_domain"]], "identifier (opendp.mod.changeoneiddistance attribute)": [[21, "opendp.mod.ChangeOneIdDistance.identifier"]], "identifier (opendp.mod.symmetriciddistance attribute)": [[21, "opendp.mod.SymmetricIdDistance.identifier"]], "inner_measure (opendp.mod.approximatedivergence attribute)": [[21, "opendp.mod.ApproximateDivergence.inner_measure"]], "inner_metric (opendp.mod.framedistance attribute)": [[21, "opendp.mod.FrameDistance.inner_metric"]], "input_carrier_type (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_carrier_type"]], "input_carrier_type (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_carrier_type"]], "input_carrier_type (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_carrier_type"]], "input_distance_type (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_distance_type"]], "input_distance_type (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_distance_type"]], "input_distance_type (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_distance_type"]], "input_domain (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_domain"]], "input_domain (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_domain"]], "input_domain (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_domain"]], "input_metric (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_metric"]], "input_metric (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_metric"]], "input_metric (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_metric"]], "input_space (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_space"]], "input_space (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_space"]], "input_space (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_space"]], "invoke() (opendp.mod.measurement method)": [[21, "opendp.mod.Measurement.invoke"]], "invoke() (opendp.mod.odometer method)": [[21, "opendp.mod.Odometer.invoke"]], "invoke() (opendp.mod.odometerqueryable method)": [[21, "opendp.mod.OdometerQueryable.invoke"]], "invoke() (opendp.mod.transformation method)": [[21, "opendp.mod.Transformation.invoke"]], "map() (opendp.mod.measurement method)": [[21, "opendp.mod.Measurement.map"]], "map() (opendp.mod.transformation method)": [[21, "opendp.mod.Transformation.map"]], "member() (opendp.mod.domain method)": [[21, "opendp.mod.Domain.member"]], "name (opendp.mod.seriesdomain attribute)": [[21, "opendp.mod.SeriesDomain.name"]], "nan (opendp.mod.atomdomain attribute)": [[21, "opendp.mod.AtomDomain.nan"]], "nullable (opendp.mod.seriesdomain attribute)": [[21, "opendp.mod.SeriesDomain.nullable"]], "opendp.mod": [[21, "module-opendp.mod"]], "output_distance_type (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.output_distance_type"]], "output_distance_type (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.output_distance_type"]], "output_distance_type (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_distance_type"]], "output_domain (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_domain"]], "output_measure (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.output_measure"]], "output_measure (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.output_measure"]], "output_metric (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_metric"]], "output_space (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_space"]], "privacy_loss() (opendp.mod.odometerqueryable method)": [[21, "opendp.mod.OdometerQueryable.privacy_loss"]], "raw_traceback (opendp.mod.opendpexception attribute)": [[21, "opendp.mod.OpenDPException.raw_traceback"]], "serialize() (in module opendp.mod)": [[21, "opendp.mod.serialize"]], "size (opendp.mod.vectordomain attribute)": [[21, "opendp.mod.VectorDomain.size"]], "type (opendp.mod.domain attribute)": [[21, "opendp.mod.Domain.type"]], "type (opendp.mod.measure attribute)": [[21, "opendp.mod.Measure.type"]], "type (opendp.mod.metric attribute)": [[21, "opendp.mod.Metric.type"]], "opendp.prelude": [[22, "module-opendp.prelude"]], "choose_branching_factor() (in module opendp.transformations)": [[23, "opendp.transformations.choose_branching_factor"]], "make_b_ary_tree() (in module opendp.transformations)": [[23, "opendp.transformations.make_b_ary_tree"]], "make_bounded_float_checked_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_float_checked_sum"]], "make_bounded_float_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_float_ordered_sum"]], "make_bounded_int_monotonic_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_int_monotonic_sum"]], "make_bounded_int_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_int_ordered_sum"]], "make_bounded_int_split_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_int_split_sum"]], "make_cast() (in module opendp.transformations)": [[23, "opendp.transformations.make_cast"]], "make_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.make_cast_default"]], "make_cast_inherent() (in module opendp.transformations)": [[23, "opendp.transformations.make_cast_inherent"]], "make_cdf() (in module opendp.transformations)": [[23, "opendp.transformations.make_cdf"]], "make_clamp() (in module opendp.transformations)": [[23, "opendp.transformations.make_clamp"]], "make_consistent_b_ary_tree() (in module opendp.transformations)": [[23, "opendp.transformations.make_consistent_b_ary_tree"]], "make_count() (in module opendp.transformations)": [[23, "opendp.transformations.make_count"]], "make_count_by() (in module opendp.transformations)": [[23, "opendp.transformations.make_count_by"]], "make_count_by_categories() (in module opendp.transformations)": [[23, "opendp.transformations.make_count_by_categories"]], "make_count_distinct() (in module opendp.transformations)": [[23, "opendp.transformations.make_count_distinct"]], "make_create_dataframe() (in module opendp.transformations)": [[23, "opendp.transformations.make_create_dataframe"]], "make_df_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.make_df_cast_default"]], "make_df_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.make_df_is_equal"]], "make_drop_null() (in module opendp.transformations)": [[23, "opendp.transformations.make_drop_null"]], "make_find() (in module opendp.transformations)": [[23, "opendp.transformations.make_find"]], "make_find_bin() (in module opendp.transformations)": [[23, "opendp.transformations.make_find_bin"]], "make_identity() (in module opendp.transformations)": [[23, "opendp.transformations.make_identity"]], "make_impute_constant() (in module opendp.transformations)": [[23, "opendp.transformations.make_impute_constant"]], "make_impute_uniform_float() (in module opendp.transformations)": [[23, "opendp.transformations.make_impute_uniform_float"]], "make_index() (in module opendp.transformations)": [[23, "opendp.transformations.make_index"]], "make_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.make_is_equal"]], "make_is_null() (in module opendp.transformations)": [[23, "opendp.transformations.make_is_null"]], "make_lipschitz_float_mul() (in module opendp.transformations)": [[23, "opendp.transformations.make_lipschitz_float_mul"]], "make_mean() (in module opendp.transformations)": [[23, "opendp.transformations.make_mean"]], "make_metric_bounded() (in module opendp.transformations)": [[23, "opendp.transformations.make_metric_bounded"]], "make_metric_unbounded() (in module opendp.transformations)": [[23, "opendp.transformations.make_metric_unbounded"]], "make_ordered_random() (in module opendp.transformations)": [[23, "opendp.transformations.make_ordered_random"]], "make_quantile_score_candidates() (in module opendp.transformations)": [[23, "opendp.transformations.make_quantile_score_candidates"]], "make_quantiles_from_counts() (in module opendp.transformations)": [[23, "opendp.transformations.make_quantiles_from_counts"]], "make_resize() (in module opendp.transformations)": [[23, "opendp.transformations.make_resize"]], "make_select_column() (in module opendp.transformations)": [[23, "opendp.transformations.make_select_column"]], "make_sized_bounded_float_checked_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_float_checked_sum"]], "make_sized_bounded_float_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_float_ordered_sum"]], "make_sized_bounded_int_checked_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_checked_sum"]], "make_sized_bounded_int_monotonic_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_monotonic_sum"]], "make_sized_bounded_int_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_ordered_sum"]], "make_sized_bounded_int_split_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_split_sum"]], "make_split_dataframe() (in module opendp.transformations)": [[23, "opendp.transformations.make_split_dataframe"]], "make_split_lines() (in module opendp.transformations)": [[23, "opendp.transformations.make_split_lines"]], "make_split_records() (in module opendp.transformations)": [[23, "opendp.transformations.make_split_records"]], "make_stable_expr() (in module opendp.transformations)": [[23, "opendp.transformations.make_stable_expr"]], "make_stable_lazyframe() (in module opendp.transformations)": [[23, "opendp.transformations.make_stable_lazyframe"]], "make_subset_by() (in module opendp.transformations)": [[23, "opendp.transformations.make_subset_by"]], "make_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sum"]], "make_sum_of_squared_deviations() (in module opendp.transformations)": [[23, "opendp.transformations.make_sum_of_squared_deviations"]], "make_unordered() (in module opendp.transformations)": [[23, "opendp.transformations.make_unordered"]], "make_user_transformation() (in module opendp.transformations)": [[23, "opendp.transformations.make_user_transformation"]], "make_variance() (in module opendp.transformations)": [[23, "opendp.transformations.make_variance"]], "opendp.transformations": [[23, "module-opendp.transformations"]], "then_b_ary_tree() (in module opendp.transformations)": [[23, "opendp.transformations.then_b_ary_tree"]], "then_cast() (in module opendp.transformations)": [[23, "opendp.transformations.then_cast"]], "then_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.then_cast_default"]], "then_cast_inherent() (in module opendp.transformations)": [[23, "opendp.transformations.then_cast_inherent"]], "then_clamp() (in module opendp.transformations)": [[23, "opendp.transformations.then_clamp"]], "then_count() (in module opendp.transformations)": [[23, "opendp.transformations.then_count"]], "then_count_by() (in module opendp.transformations)": [[23, "opendp.transformations.then_count_by"]], "then_count_by_categories() (in module opendp.transformations)": [[23, "opendp.transformations.then_count_by_categories"]], "then_count_distinct() (in module opendp.transformations)": [[23, "opendp.transformations.then_count_distinct"]], "then_df_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.then_df_cast_default"]], "then_df_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.then_df_is_equal"]], "then_drop_null() (in module opendp.transformations)": [[23, "opendp.transformations.then_drop_null"]], "then_find() (in module opendp.transformations)": [[23, "opendp.transformations.then_find"]], "then_find_bin() (in module opendp.transformations)": [[23, "opendp.transformations.then_find_bin"]], "then_identity() (in module opendp.transformations)": [[23, "opendp.transformations.then_identity"]], "then_impute_constant() (in module opendp.transformations)": [[23, "opendp.transformations.then_impute_constant"]], "then_impute_uniform_float() (in module opendp.transformations)": [[23, "opendp.transformations.then_impute_uniform_float"]], "then_index() (in module opendp.transformations)": [[23, "opendp.transformations.then_index"]], "then_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.then_is_equal"]], "then_is_null() (in module opendp.transformations)": [[23, "opendp.transformations.then_is_null"]], "then_lipschitz_float_mul() (in module opendp.transformations)": [[23, "opendp.transformations.then_lipschitz_float_mul"]], "then_mean() (in module opendp.transformations)": [[23, "opendp.transformations.then_mean"]], "then_metric_bounded() (in module opendp.transformations)": [[23, "opendp.transformations.then_metric_bounded"]], "then_metric_unbounded() (in module opendp.transformations)": [[23, "opendp.transformations.then_metric_unbounded"]], "then_ordered_random() (in module opendp.transformations)": [[23, "opendp.transformations.then_ordered_random"]], "then_quantile_score_candidates() (in module opendp.transformations)": [[23, "opendp.transformations.then_quantile_score_candidates"]], "then_resize() (in module opendp.transformations)": [[23, "opendp.transformations.then_resize"]], "then_stable_expr() (in module opendp.transformations)": [[23, "opendp.transformations.then_stable_expr"]], "then_stable_lazyframe() (in module opendp.transformations)": [[23, "opendp.transformations.then_stable_lazyframe"]], "then_sum() (in module opendp.transformations)": [[23, "opendp.transformations.then_sum"]], "then_sum_of_squared_deviations() (in module opendp.transformations)": [[23, "opendp.transformations.then_sum_of_squared_deviations"]], "then_unordered() (in module opendp.transformations)": [[23, "opendp.transformations.then_unordered"]], "then_variance() (in module opendp.transformations)": [[23, "opendp.transformations.then_variance"]], "carrier (class in opendp.typing)": [[24, "opendp.typing.Carrier"]], "runtimetype (class in opendp.typing)": [[24, "opendp.typing.RuntimeType"]], "sensitivitymetric (class in opendp.typing)": [[24, "opendp.typing.SensitivityMetric"]], "args (opendp.typing.runtimetype attribute)": [[24, "opendp.typing.RuntimeType.args"]], "get_atom() (in module opendp.typing)": [[24, "opendp.typing.get_atom"]], "get_atom_or_infer() (in module opendp.typing)": [[24, "opendp.typing.get_atom_or_infer"]], "get_carrier_type() (in module opendp.typing)": [[24, "opendp.typing.get_carrier_type"]], "get_distance_type() (in module opendp.typing)": [[24, "opendp.typing.get_distance_type"]], "get_first() (in module opendp.typing)": [[24, "opendp.typing.get_first"]], "get_type() (in module opendp.typing)": [[24, "opendp.typing.get_type"]], "get_value_type() (in module opendp.typing)": [[24, "opendp.typing.get_value_type"]], "infer() (opendp.typing.runtimetype class method)": [[24, "opendp.typing.RuntimeType.infer"]], "opendp.typing": [[24, "module-opendp.typing"]], "origin (opendp.typing.runtimetype attribute)": [[24, "opendp.typing.RuntimeType.origin"]], "parse() (opendp.typing.runtimetype class method)": [[24, "opendp.typing.RuntimeType.parse"]], "parse_or_infer() (in module opendp.typing)": [[24, "opendp.typing.parse_or_infer"]], "parse_or_infer() (opendp.typing.runtimetype class method)": [[24, "opendp.typing.RuntimeType.parse_or_infer"]], "pass_through() (in module opendp.typing)": [[24, "opendp.typing.pass_through"]], "set_default_float_type() (in module opendp.typing)": [[24, "opendp.typing.set_default_float_type"]], "set_default_int_type() (in module opendp.typing)": [[24, "opendp.typing.set_default_int_type"]]}})
Search.setIndex({"docnames": ["api/index", "api/python/index", "api/python/opendp", "api/python/opendp.accuracy", "api/python/opendp.combinators", "api/python/opendp.context", "api/python/opendp.core", "api/python/opendp.domains", "api/python/opendp.extras", "api/python/opendp.extras.examples", "api/python/opendp.extras.numpy", "api/python/opendp.extras.polars", "api/python/opendp.extras.sklearn", "api/python/opendp.extras.sklearn.decomposition", "api/python/opendp.measurements", "api/python/opendp.measures", "api/python/opendp.metrics", "api/python/opendp.mod", "api/python/opendp.prelude", "api/python/opendp.transformations", "api/python/opendp.typing", "api/user-guide/combinators/compositors", "api/user-guide/combinators/index", "api/user-guide/context/index", "api/user-guide/index", "api/user-guide/limitations", "api/user-guide/measurements/additive-noise-mechanisms", "api/user-guide/measurements/index", "api/user-guide/measurements/randomized-response", "api/user-guide/plugins/context-api-plugins", "api/user-guide/plugins/index", "api/user-guide/plugins/measurement", "api/user-guide/plugins/selecting-grouping-columns", "api/user-guide/plugins/transformation", "api/user-guide/polars/data-types", "api/user-guide/polars/expressions/aggregation", "api/user-guide/polars/expressions/boolean", "api/user-guide/polars/expressions/columns", "api/user-guide/polars/expressions/index", "api/user-guide/polars/expressions/manipulation", "api/user-guide/polars/expressions/operators", "api/user-guide/polars/expressions/string", "api/user-guide/polars/expressions/temporal", "api/user-guide/polars/gaussian-noise", "api/user-guide/polars/index", "api/user-guide/polars/polars-vs-opendp", "api/user-guide/programming-framework/core-structures", "api/user-guide/programming-framework/index", "api/user-guide/programming-framework/supporting-elements", "api/user-guide/transformations/aggregation-mean", "api/user-guide/transformations/aggregation-quantile", "api/user-guide/transformations/aggregation-sum", "api/user-guide/transformations/index", "api/user-guide/utilities/index", "api/user-guide/utilities/parameter-search", "api/user-guide/utilities/serialization", "api/user-guide/utilities/typing", "contributing/cla", "contributing/contact", "contributing/contribution-process", "contributing/development-environment", "contributing/getting-involved", "contributing/index", "contributing/proof-initiation", "contributing/rust-initiation", "getting-started/assessing-utility/noise", "getting-started/examples/histograms", "getting-started/examples/index", "getting-started/examples/pums-data-analysis", "getting-started/examples/unknown-dataset-size", "getting-started/index", "getting-started/quickstart", "getting-started/statistical-modeling/index", "getting-started/statistical-modeling/pca", "getting-started/statistical-modeling/regression", "getting-started/tabular-data/essential-statistics", "getting-started/tabular-data/grouping", "getting-started/tabular-data/index", "getting-started/tabular-data/preparing-microdata", "getting-started/typical-workflow", "getting-started/utility/accuracy", "getting-started/utility/index", "index", "theory/a-framework-to-understand-dp", "theory/accuracy-pitfalls", "theory/attacks/differencing", "theory/attacks/index", "theory/attacks/membership", "theory/attacks/reconstruction", "theory/dp-with-opendp", "theory/index", "theory/resources"], "filenames": ["api/index.rst", "api/python/index.rst", "api/python/opendp.rst", "api/python/opendp.accuracy.rst", "api/python/opendp.combinators.rst", "api/python/opendp.context.rst", "api/python/opendp.core.rst", "api/python/opendp.domains.rst", "api/python/opendp.extras.rst", "api/python/opendp.extras.examples.rst", "api/python/opendp.extras.numpy.rst", "api/python/opendp.extras.polars.rst", "api/python/opendp.extras.sklearn.rst", "api/python/opendp.extras.sklearn.decomposition.rst", "api/python/opendp.measurements.rst", "api/python/opendp.measures.rst", "api/python/opendp.metrics.rst", "api/python/opendp.mod.rst", "api/python/opendp.prelude.rst", "api/python/opendp.transformations.rst", "api/python/opendp.typing.rst", "api/user-guide/combinators/compositors.rst", "api/user-guide/combinators/index.rst", "api/user-guide/context/index.rst", "api/user-guide/index.rst", "api/user-guide/limitations.rst", "api/user-guide/measurements/additive-noise-mechanisms.ipynb", "api/user-guide/measurements/index.rst", "api/user-guide/measurements/randomized-response.rst", "api/user-guide/plugins/context-api-plugins.rst", "api/user-guide/plugins/index.rst", "api/user-guide/plugins/measurement.rst", "api/user-guide/plugins/selecting-grouping-columns.rst", "api/user-guide/plugins/transformation.rst", "api/user-guide/polars/data-types.ipynb", "api/user-guide/polars/expressions/aggregation.ipynb", "api/user-guide/polars/expressions/boolean.ipynb", "api/user-guide/polars/expressions/columns.ipynb", "api/user-guide/polars/expressions/index.rst", "api/user-guide/polars/expressions/manipulation.ipynb", "api/user-guide/polars/expressions/operators.ipynb", "api/user-guide/polars/expressions/string.ipynb", "api/user-guide/polars/expressions/temporal.ipynb", "api/user-guide/polars/gaussian-noise.ipynb", "api/user-guide/polars/index.rst", "api/user-guide/polars/polars-vs-opendp.rst", "api/user-guide/programming-framework/core-structures.rst", "api/user-guide/programming-framework/index.rst", "api/user-guide/programming-framework/supporting-elements.rst", "api/user-guide/transformations/aggregation-mean.rst", "api/user-guide/transformations/aggregation-quantile.ipynb", "api/user-guide/transformations/aggregation-sum.ipynb", "api/user-guide/transformations/index.rst", "api/user-guide/utilities/index.rst", "api/user-guide/utilities/parameter-search.rst", "api/user-guide/utilities/serialization.rst", "api/user-guide/utilities/typing.rst", "contributing/cla.rst", "contributing/contact.rst", "contributing/contribution-process.rst", "contributing/development-environment.rst", "contributing/getting-involved.rst", "contributing/index.rst", "contributing/proof-initiation.rst", "contributing/rust-initiation.rst", "getting-started/assessing-utility/noise.ipynb", "getting-started/examples/histograms.ipynb", "getting-started/examples/index.rst", "getting-started/examples/pums-data-analysis.ipynb", "getting-started/examples/unknown-dataset-size.ipynb", "getting-started/index.rst", "getting-started/quickstart.rst", "getting-started/statistical-modeling/index.rst", "getting-started/statistical-modeling/pca.rst", "getting-started/statistical-modeling/regression.ipynb", "getting-started/tabular-data/essential-statistics.ipynb", "getting-started/tabular-data/grouping.ipynb", "getting-started/tabular-data/index.rst", "getting-started/tabular-data/preparing-microdata.ipynb", "getting-started/typical-workflow.rst", "getting-started/utility/accuracy.rst", "getting-started/utility/index.rst", "index.rst", "theory/a-framework-to-understand-dp.ipynb", "theory/accuracy-pitfalls.ipynb", "theory/attacks/differencing.ipynb", "theory/attacks/index.rst", "theory/attacks/membership.ipynb", "theory/attacks/reconstruction.ipynb", "theory/dp-with-opendp.rst", "theory/index.rst", "theory/resources.rst"], "titles": ["API", "Python API Documentation", "opendp package", "opendp.accuracy module", "opendp.combinators module", "opendp.context module", "opendp.core module", "opendp.domains module", "opendp.extras package", "opendp.extras.examples package", "opendp.extras.numpy package", "opendp.extras.polars package", "opendp.extras.sklearn package", "opendp.extras.sklearn.decomposition package", "opendp.measurements module", "opendp.measures module", "opendp.metrics module", "opendp.mod module", "opendp.prelude module", "opendp.transformations module", "opendp.typing module", "Compositors", "Combinators", "Context", "API User Guide", "Limitations", "Additive Noise Mechanisms", "Measurements", "Randomized Response", "Context API Plugins", "Plugins", "Measurement example", "Privately Selecting Grouping Columns", "Transformation example", "Data Types", "Aggregation", "Boolean", "Columns", "Expressions", "Manipulation", "Operators", "String", "Temporal", "Gaussian Noise", "Polars", "Polars vs. OpenDP", "Core Structures", "Programming Framework", "Supporting Elements", "Aggregation: Mean", "Aggregation: Quantile", "Aggregation: Sum", "Transformations", "Utilities", "Parameter Search", "Serialization", "Typing", "Contributor License Agreement", "Contact", "Contribution Process", "Development Environment", "Getting Involved", "Contributing", "OpenDP Proof Initiation", "OpenDP Rust Initiation", "What Noise Should I Choose?", "Privatizing Histograms", "More Examples", "Example Data Analysis", "Working with Unknown Dataset Sizes", "Getting Started", "Quickstart", "Statistical Modeling", "Differentially Private PCA", "Linear Regression", "Essential Statistics", "Grouping", "Working with Tabular Data", "Preparing Microdata", "Typical Workflow", "Accuracy", "Assessing Utility", "Welcome", "A Framework to Understand DP", "Accuracy: Pitfalls and Edge Cases", "Differencing", "Attacks", "Membership", "Reconstruction", "Differential Privacy with OpenDP", "Theory", "Resources List"], "terms": {"content": [0, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 70, 71, 72, 73, 77, 79, 80, 81, 82, 86, 89, 90, 91], "If": [0, 3, 4, 5, 7, 11, 14, 17, 19, 20, 22, 26, 27, 30, 32, 39, 44, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 75, 76, 77, 82, 83, 84, 87, 88, 89], "you": [0, 3, 4, 11, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 35, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89], "re": [0, 35, 46, 47, 50, 60, 64, 68, 75, 76, 82, 83, 88, 89], "new": [0, 4, 5, 7, 16, 17, 21, 22, 32, 39, 50, 55, 60, 61, 63, 64, 68, 71, 75, 78, 82, 83, 87, 88, 89], "opendp": [0, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 90, 91], "pleas": [0, 21, 25, 26, 28, 44, 49, 50, 51, 55, 57, 59, 61, 62, 64, 67, 73, 75, 89], "go": [0, 35, 63, 68, 76, 89], "back": [0, 34, 53, 59, 64, 76, 85], "get": [0, 3, 6, 7, 15, 16, 17, 18, 20, 21, 22, 34, 35, 39, 44, 47, 48, 50, 59, 62, 63, 64, 65, 66, 68, 69, 71, 74, 75, 76, 82, 83, 84, 85, 90], "start": [0, 5, 11, 14, 18, 23, 28, 35, 37, 44, 52, 54, 59, 60, 61, 62, 63, 64, 66, 68, 69, 71, 74, 75, 82, 89, 90], "interest": [0, 21, 26, 28, 47, 49, 50, 51, 57, 60, 62, 68, 69, 73, 75, 83, 85, 89], "theori": [0, 14, 19, 26, 70, 80, 82], "behind": [0, 4, 45, 47, 65, 67, 89], "differenti": [0, 4, 6, 9, 11, 14, 15, 17, 19, 21, 24, 25, 26, 27, 30, 34, 38, 43, 45, 46, 47, 48, 52, 54, 60, 65, 67, 69, 70, 72, 75, 76, 77, 79, 83, 84, 85, 86, 90], "privaci": [0, 4, 5, 6, 9, 11, 14, 15, 17, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 38, 39, 43, 45, 46, 47, 49, 50, 52, 54, 56, 59, 60, 63, 64, 65, 67, 69, 70, 74, 75, 76, 77, 78, 81, 85, 86, 90], "how": [0, 3, 4, 5, 11, 14, 17, 19, 21, 22, 25, 32, 35, 43, 45, 48, 51, 54, 59, 60, 63, 65, 67, 68, 69, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 87, 88, 89, 91], "implement": [0, 14, 15, 17, 25, 30, 41, 47, 51, 52, 61, 63, 64, 71, 75, 82, 87], "feel": [0, 20, 25, 61, 64], "free": [0, 53, 54, 60, 61, 64], "jump": 0, "ahead": [0, 68, 76], "document": [0, 3, 4, 5, 6, 7, 11, 14, 15, 16, 19, 20, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 54, 59, 63, 64, 67, 68, 70, 71, 73, 77, 78, 81, 82, 89], "entri": [0, 14, 19, 30, 59, 88, 89], "point": [0, 14, 17, 21, 22, 24, 25, 39, 52, 54, 60, 63, 66, 68, 69, 73, 75, 76, 79, 83, 87, 88, 89, 91], "user": [0, 3, 4, 5, 6, 7, 11, 14, 15, 16, 17, 19, 20, 26, 28, 30, 31, 32, 33, 35, 38, 47, 48, 55, 59, 60, 64, 65, 67, 68, 74, 77, 78, 79, 82, 83, 89], "guid": [0, 3, 4, 5, 6, 7, 11, 14, 15, 16, 19, 20, 26, 38, 56, 62, 64, 65, 67, 68, 74, 77, 78, 89], "python": [0, 4, 5, 8, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 48, 49, 52, 54, 55, 56, 61, 63, 64, 67, 70, 71, 73, 77, 79, 80, 82, 89], "refer": [0, 6, 14, 18, 22, 23, 24, 27, 34, 38, 46, 48, 52, 56, 63, 64, 66, 70, 75, 76, 77, 79, 80, 82, 83, 87], "r": [0, 3, 4, 6, 7, 8, 14, 15, 16, 19, 24, 26, 32, 39, 41, 42, 63, 64, 65, 67, 70, 71, 77, 79, 82, 83, 88], "rust": [0, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 19, 20, 24, 25, 26, 30, 34, 52, 56, 61, 62, 63, 70, 71, 77, 82], "packag": [1, 3, 4, 6, 7, 14, 15, 16, 17, 19, 26, 60, 71, 77, 89], "subpackag": 1, "extra": [1, 2, 38, 45, 47, 63, 66, 84], "submodul": [1, 12, 18], "accuraci": [1, 2, 11, 17, 18, 19, 27, 54, 65, 69, 70, 74, 75, 76, 79, 81, 88, 90], "modul": [1, 26, 34, 41, 53, 56, 61, 64, 71, 89], "combin": [1, 2, 11, 18, 24, 32, 46, 48, 52, 68, 73, 76], "context": [1, 2, 3, 4, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 24, 30, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 56, 57, 63, 67, 71, 75, 76, 78, 79, 83], "core": [1, 2, 3, 4, 7, 14, 15, 16, 17, 19, 26, 27, 48, 61, 64, 82], "domain": [1, 2, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32, 34, 36, 39, 43, 46, 47, 49, 50, 52, 55, 56, 64, 68, 69, 71, 75, 76, 77, 79, 83, 89], "measur": [1, 2, 3, 4, 5, 6, 11, 13, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 32, 47, 51, 52, 54, 55, 56, 60, 63, 65, 66, 67, 69, 71, 73, 74, 75, 77, 79, 83, 84, 89], "metric": [1, 2, 4, 5, 6, 13, 14, 15, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 43, 46, 47, 50, 51, 56, 63, 64, 68, 71, 74, 83, 89], "mod": [1, 2, 5, 18, 20, 21, 22, 26, 48, 51, 54, 63, 64, 67], "prelud": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 54, 56, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 84, 85, 87, 88, 89], "transform": [1, 2, 4, 5, 6, 7, 11, 17, 18, 21, 22, 24, 25, 27, 29, 30, 32, 35, 38, 39, 47, 48, 49, 50, 51, 53, 54, 56, 60, 63, 66, 67, 68, 69, 74, 83, 85], "type": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 26, 27, 31, 32, 35, 36, 39, 41, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 63, 64, 65, 67, 68, 69, 74, 75, 83, 85, 89], "exampl": [2, 3, 4, 5, 7, 8, 11, 14, 15, 17, 18, 19, 20, 21, 22, 27, 29, 32, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 54, 56, 59, 60, 61, 65, 66, 70, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 88, 90, 91], "numpi": [2, 4, 8, 14, 26, 28, 50, 56, 65, 69, 73, 74, 83, 84, 85, 87, 88], "polar": [2, 3, 5, 7, 8, 14, 17, 19, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 60, 65, 75, 76, 77, 78], "sklearn": [2, 8, 73], "accuracy_to_discrete_gaussian_scal": [2, 3], "accuracy_to_discrete_laplacian_scal": [2, 3], "accuracy_to_gaussian_scal": [2, 3, 27, 80], "accuracy_to_laplacian_scal": [2, 3, 17, 27, 80], "discrete_gaussian_scale_to_accuraci": [2, 3], "discrete_laplacian_scale_to_accuraci": [2, 3, 79], "gaussian_scale_to_accuraci": [2, 3, 27, 80], "laplacian_scale_to_accuraci": [2, 3, 27, 80, 84], "summarize_polars_measur": [2, 3], "make_approxim": [2, 4, 21, 22], "make_basic_composit": [2, 4, 18, 21, 22, 49, 68, 74], "make_chain_mt": [2, 4, 22], "make_chain_pm": [2, 4, 22], "make_chain_tt": [2, 4, 22], "make_fix_delta": [2, 4, 17, 21, 22, 68, 88], "make_fixed_approxdp_to_approxdp": [2, 4, 22], "make_population_amplif": [2, 4, 22, 68], "make_puredp_to_zcdp": [2, 4, 22], "make_select_private_candid": [2, 4], "make_sequential_composit": [2, 4, 5, 17, 21, 22, 79], "make_zcdp_to_approxdp": [2, 4, 17, 21, 22, 68, 88], "then_sequential_composit": [2, 4], "account": [2, 5, 6, 22, 26, 29, 39, 45, 51, 52, 61, 69, 75, 76, 79, 83, 89], "compositor": [2, 4, 5, 11, 22, 23, 29, 34, 35, 37, 39, 40, 41, 42, 43, 48, 55, 65, 73, 75, 76, 78, 79], "deserialize_polars_plan": [2, 5, 55], "queri": [2, 3, 4, 5, 6, 11, 17, 21, 23, 26, 27, 29, 34, 35, 37, 39, 40, 41, 42, 43, 45, 48, 50, 51, 52, 54, 55, 58, 60, 65, 67, 69, 75, 76, 77, 78, 87, 88], "queryabl": [2, 4, 5, 6, 11, 14, 17, 21, 79], "partialchain": [2, 5], "fix": [2, 4, 5, 11, 15, 17, 22, 26, 51, 52, 54, 59, 63, 68, 69, 76, 77, 83, 86, 89], "partial": [2, 4, 5, 14, 19, 60], "wrap": [2, 5, 17, 22, 23, 64], "new_with": [2, 5], "param": [2, 5, 26, 79, 87, 88], "releas": [2, 3, 4, 5, 6, 11, 13, 14, 17, 21, 22, 23, 25, 27, 28, 29, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 55, 59, 63, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 91], "resolv": [2, 5, 11, 51, 55, 78], "domain_of": [2, 5], "loss_of": [2, 5, 11, 17, 23, 29, 34, 35, 37, 39, 40, 41, 42, 43, 55, 65, 75, 76, 77, 78, 79], "metric_of": [2, 5], "regist": [2, 5, 11, 29], "space_of": [2, 5, 17], "unit_of": [2, 5, 11, 23, 29, 34, 35, 37, 39, 40, 41, 42, 43, 55, 65, 75, 76, 77, 78, 79], "function_ev": [2, 6], "measurement_check": [2, 6], "measurement_funct": [2, 6], "measurement_input_carrier_typ": [2, 6], "measurement_input_distance_typ": [2, 6], "measurement_input_domain": [2, 6], "measurement_input_metr": [2, 6], "measurement_invok": [2, 6], "measurement_map": [2, 6], "measurement_output_distance_typ": [2, 6], "measurement_output_measur": [2, 6], "new_funct": [2, 6, 30], "new_query": [2, 6, 17], "queryable_ev": [2, 6], "queryable_query_typ": [2, 6], "transformation_check": [2, 6], "transformation_funct": [2, 6], "transformation_input_carrier_typ": [2, 6], "transformation_input_distance_typ": [2, 6], "transformation_input_domain": [2, 6], "transformation_input_metr": [2, 6], "transformation_invok": [2, 6], "transformation_map": [2, 6], "transformation_output_distance_typ": [2, 6], "transformation_output_domain": [2, 6], "transformation_output_metr": [2, 6], "array_domain": [2, 7], "atom_domain": [2, 3, 4, 5, 7, 14, 17, 19, 21, 22, 26, 29, 31, 32, 33, 48, 49, 50, 51, 52, 54, 55, 56, 64, 68, 69, 71, 74, 79, 85, 87, 88, 89], "bitvector_domain": [2, 7, 14], "categorical_domain": [2, 7], "datetime_domain": [2, 7], "domain_carrier_typ": [2, 7], "domain_debug": [2, 7], "domain_typ": [2, 7], "enum_domain": [2, 7], "lazyframe_domain": [2, 3, 7, 14, 17], "map_domain": [2, 7], "member": [2, 4, 5, 6, 7, 11, 17, 18, 19, 32, 46, 48, 49, 56, 64, 66, 87, 88, 89], "option_domain": [2, 7, 17, 19], "series_domain": [2, 3, 7, 14, 17], "user_domain": [2, 5, 7, 30, 32, 55], "vector_domain": [2, 5, 7, 14, 17, 19, 21, 22, 26, 31, 32, 33, 48, 49, 50, 51, 52, 54, 55, 64, 68, 69, 74, 79, 85, 87, 88, 89], "wild_expr_domain": [2, 7], "with_margin": [2, 3, 7, 14], "debias_randomized_response_bitvec": [2, 14], "make_alp_query": [2, 14], "make_gaussian": [2, 14, 26, 27, 52, 54, 80], "make_geometr": [2, 14, 27], "make_laplac": [2, 14, 17, 22, 26, 27, 52, 68, 80, 89], "make_laplace_threshold": [2, 14, 27, 52, 80], "make_private_expr": [2, 14], "make_private_lazyfram": [2, 3, 11, 14], "make_private_quantil": [2, 14], "make_randomized_respons": [2, 14, 27, 28], "make_randomized_response_bitvec": [2, 14], "make_randomized_response_bool": [2, 14, 27, 28], "make_report_noisy_max_gumbel": [2, 14, 74], "make_user_measur": [2, 14, 29, 30, 31], "then_alp_query": [2, 14], "then_gaussian": [2, 14, 17, 21, 22, 54, 68, 88], "then_geometr": [2, 14], "then_laplac": [2, 14, 17, 18, 21, 22, 33, 49, 50, 66, 68, 69, 71, 79, 84, 85, 87, 89], "then_laplace_threshold": [2, 14, 66], "then_private_expr": [2, 14], "then_private_lazyfram": [2, 14], "then_private_quantil": [2, 14], "then_randomized_response_bitvec": [2, 14], "then_report_noisy_max_gumbel": [2, 14, 32], "then_user_measur": [2, 4, 14], "approxim": [2, 4, 5, 14, 15, 19, 21, 22, 27, 43, 48, 50, 65, 83, 84, 88], "fixed_smoothed_max_diverg": [2, 15], "max_diverg": [2, 3, 4, 14, 15, 21, 29, 31, 79, 89], "measure_debug": [2, 15], "measure_distance_typ": [2, 15], "measure_typ": [2, 15], "new_privacy_profil": [2, 15, 17, 30], "renyi_diverg": [2, 15], "smoothed_max_diverg": [2, 15], "user_diverg": [2, 15, 30], "zero_concentrated_diverg": [2, 15, 21], "absolute_dist": [2, 4, 14, 16, 17, 22, 26, 29, 31, 54, 63, 71, 89], "change_one_dist": [2, 16], "discrete_dist": [2, 14, 16], "hamming_dist": [2, 16], "insert_delete_dist": [2, 16, 51], "l1_distanc": [2, 14, 16, 26, 87], "l2_distanc": [2, 14, 16, 26], "linf_dist": [2, 14, 16, 32, 74], "metric_debug": [2, 16], "metric_distance_typ": [2, 16], "metric_typ": [2, 16], "partition_dist": [2, 16], "symmetric_dist": [2, 3, 5, 13, 14, 16, 17, 21, 22, 31, 32, 33, 48, 49, 50, 51, 52, 54, 64, 68, 69, 74, 79, 85, 87, 88, 89], "user_dist": [2, 16, 30], "atomdomain": [2, 5, 7, 14, 17, 19, 21, 22, 26, 27, 28, 48, 52, 56, 64, 71, 74, 89], "bound": [2, 4, 5, 7, 10, 11, 13, 14, 17, 19, 21, 22, 27, 34, 39, 43, 46, 47, 48, 49, 50, 51, 54, 56, 63, 64, 68, 69, 73, 75, 77, 79, 83, 84, 85, 87, 88, 89], "nan": [2, 4, 7, 10, 14, 15, 17, 19, 22, 26, 32, 34, 36, 48, 50, 52, 54, 68, 69, 71, 74, 79, 87, 89], "carrier_typ": [2, 17], "extrinsicdomain": [2, 5, 17], "descriptor": [2, 5, 7, 11, 15, 16, 17, 20, 34, 35, 36, 39, 43, 48, 56, 69, 75, 76, 78], "function": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 31, 32, 33, 36, 42, 46, 47, 49, 50, 52, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 72, 75, 77, 78, 79, 80, 83, 84, 87, 88, 89], "lazyframedomain": [2, 7, 14, 17, 19], "column": [2, 3, 7, 9, 10, 11, 14, 17, 19, 30, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 50, 51, 68, 69, 75, 76, 77, 84, 85, 87, 88], "get_margin": [2, 17], "get_series_domain": [2, 17], "distance_typ": [2, 17], "check": [2, 6, 7, 17, 19, 20, 22, 29, 39, 48, 49, 51, 52, 54, 59, 60, 61, 64, 68, 88, 89], "input_carrier_typ": [2, 17], "input_distance_typ": [2, 17], "input_domain": [2, 4, 5, 13, 14, 17, 19, 21, 22, 26, 29, 31, 32, 33, 46, 48, 49, 64, 68, 69, 74, 79, 80, 87, 89], "input_metr": [2, 4, 5, 13, 14, 17, 19, 21, 26, 29, 31, 32, 33, 46, 48, 64, 68, 69, 74, 79, 80, 89], "input_spac": [2, 14, 17, 21, 22, 26, 49, 50, 51, 54, 69, 74, 88], "invok": [2, 4, 6, 15, 17, 21, 22, 26, 28, 46, 48, 64, 68, 71, 89], "map": [2, 4, 6, 14, 15, 17, 19, 21, 22, 26, 28, 31, 32, 33, 46, 47, 49, 51, 52, 54, 63, 64, 66, 68, 69, 79, 84, 87, 88, 89], "output_distance_typ": [2, 17], "output_measur": [2, 4, 5, 14, 17, 21, 29, 31, 46, 48, 64, 74, 79, 89], "opendpexcept": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 21, 22, 26, 34, 41], "raw_traceback": [2, 17], "optiondomain": [2, 5, 7, 17, 19, 52], "element_domain": [2, 7, 17], "privacyprofil": [2, 15, 17], "delta": [2, 4, 5, 15, 17, 19, 21, 22, 26, 28, 34, 39, 40, 41, 42, 43, 46, 48, 66, 68, 76, 78, 83, 87, 88, 89], "epsilon": [2, 5, 11, 13, 14, 15, 17, 22, 23, 26, 27, 28, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 46, 48, 49, 50, 55, 65, 66, 68, 69, 73, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89], "seriesdomain": [2, 7, 17], "name": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 24, 37, 45, 52, 56, 59, 60, 63, 64, 68, 69, 83, 84, 88], "nullabl": [2, 17], "output_domain": [2, 17, 19, 21, 22, 32, 33, 46, 48, 64, 74, 83], "output_metr": [2, 17, 19, 21, 22, 32, 33, 46, 48, 52, 64, 74], "output_spac": [2, 17, 68], "unknowntypeexcept": [2, 3, 4, 6, 7, 14, 15, 16, 17, 19, 20, 26], "vectordomain": [2, 5, 7, 14, 17, 19, 21, 27, 48, 52, 56, 64, 74], "size": [2, 4, 7, 9, 10, 11, 13, 14, 17, 19, 22, 28, 32, 39, 48, 50, 52, 54, 64, 66, 67, 68, 70, 73, 74, 75, 76, 78, 79, 83, 84, 85, 87, 88], "assert_featur": [2, 17, 32], "binary_search": [2, 17, 54, 66, 68, 88], "binary_search_chain": [2, 17, 50, 54, 66, 68, 69, 79], "binary_search_param": [2, 17, 21, 54, 68, 84, 87], "deseri": [2, 17, 55], "disable_featur": [2, 17], "enable_featur": [2, 3, 4, 14, 15, 17, 18, 21, 22, 24, 26, 28, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 54, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 84, 85, 87, 88, 89], "exponential_bounds_search": [2, 17, 54], "serial": [2, 5, 17, 53], "choose_branching_factor": [2, 19, 50], "make_b_ary_tre": [2, 19, 52], "make_bounded_float_checked_sum": [2, 19, 51, 52], "make_bounded_float_ordered_sum": [2, 19, 52], "make_bounded_int_monotonic_sum": [2, 19, 52], "make_bounded_int_ordered_sum": [2, 19, 51, 52], "make_bounded_int_split_sum": [2, 19, 52], "make_cast": [2, 19, 22, 52], "make_cast_default": [2, 19, 50, 52, 64], "make_cast_inher": [2, 19, 52], "make_cdf": [2, 19], "make_clamp": [2, 19, 22, 48, 52, 79, 89], "make_consistent_b_ary_tre": [2, 19, 50, 52], "make_count": [2, 19, 52, 68, 79], "make_count_bi": [2, 19, 27, 52], "make_count_by_categori": [2, 17, 19, 52], "make_count_distinct": [2, 19, 52], "make_create_datafram": [2, 19], "make_df_cast_default": [2, 19], "make_df_is_equ": [2, 19], "make_drop_nul": [2, 19, 52], "make_find": [2, 19, 52], "make_find_bin": [2, 19, 52], "make_ident": [2, 19], "make_impute_const": [2, 19, 22, 52, 79], "make_impute_uniform_float": [2, 19, 52], "make_index": [2, 19, 52], "make_is_equ": [2, 19, 52], "make_is_nul": [2, 19, 52], "make_lipschitz_float_mul": [2, 19], "make_mean": [2, 17, 19, 49, 52, 54, 87], "make_metric_bound": [2, 19, 52], "make_metric_unbound": [2, 19, 52], "make_ordered_random": [2, 19, 52], "make_quantile_score_candid": [2, 19, 74], "make_quantiles_from_count": [2, 19, 50, 52], "make_res": [2, 19, 22, 52], "make_select_column": [2, 19, 66, 68, 74, 84, 85], "make_sized_bounded_float_checked_sum": [2, 19, 51, 52], "make_sized_bounded_float_ordered_sum": [2, 19, 52], "make_sized_bounded_int_checked_sum": [2, 19, 51, 52], "make_sized_bounded_int_monotonic_sum": [2, 19, 52], "make_sized_bounded_int_ordered_sum": [2, 19, 52], "make_sized_bounded_int_split_sum": [2, 19, 52], "make_split_datafram": [2, 19, 66, 68, 84, 85], "make_split_lin": [2, 17, 19], "make_split_record": [2, 19], "make_stable_expr": [2, 19], "make_stable_lazyfram": [2, 19], "make_subset_bi": [2, 19], "make_sum": [2, 17, 19, 22, 48, 49, 51, 52, 54, 68, 89], "make_sum_of_squared_devi": [2, 19], "make_unord": [2, 19, 52], "make_user_transform": [2, 19, 30, 32, 33, 74], "make_vari": [2, 19, 52, 68], "then_b_ary_tre": [2, 19, 50], "then_cast": [2, 19, 68, 84, 85], "then_cast_default": [2, 17, 19, 21, 33, 68], "then_cast_inher": [2, 19], "then_clamp": [2, 17, 19, 21, 33, 49, 68, 69, 79, 84, 85, 89], "then_count": [2, 17, 19, 21, 49, 68, 69, 88], "then_count_bi": [2, 19, 66], "then_count_by_categori": [2, 19, 50, 66], "then_count_distinct": [2, 19], "then_df_cast_default": [2, 19], "then_df_is_equ": [2, 19], "then_drop_nul": [2, 19], "then_find": [2, 19, 52], "then_find_bin": [2, 19, 50], "then_ident": [2, 19], "then_impute_const": [2, 17, 19, 49, 52, 68, 69, 74, 84, 85], "then_impute_uniform_float": [2, 19], "then_index": [2, 19, 50], "then_is_equ": [2, 19], "then_is_nul": [2, 19], "then_lipschitz_float_mul": [2, 19], "then_mean": [2, 17, 19, 22, 49, 68, 69, 79, 84, 85], "then_metric_bound": [2, 19], "then_metric_unbound": [2, 19], "then_ordered_random": [2, 19], "then_quantile_score_candid": [2, 19], "then_res": [2, 17, 19, 49, 68, 69, 79, 84, 85], "then_stable_expr": [2, 19], "then_stable_lazyfram": [2, 19], "then_sum": [2, 17, 18, 19, 21, 31, 33, 49, 51, 68, 69, 89], "then_sum_of_squared_devi": [2, 19], "then_unord": [2, 19], "then_vari": [2, 19, 68], "carrier": [2, 5, 6, 7, 14, 17, 19, 20, 26], "runtimetyp": [2, 20, 26], "arg": [2, 5, 6, 17, 20, 33, 64, 71, 79], "infer": [2, 5, 17, 19, 20, 28, 39, 41, 63, 68, 85, 87], "origin": [2, 9, 10, 17, 19, 20, 48, 54, 69, 76, 82], "pars": [2, 3, 4, 6, 7, 14, 15, 16, 19, 20, 26, 34, 38, 39, 40, 41, 42, 45, 68, 76, 78, 85], "parse_or_inf": [2, 20], "sensitivitymetr": [2, 20], "get_atom": [2, 20], "get_atom_or_inf": [2, 20], "get_carrier_typ": [2, 20], "get_distance_typ": [2, 20], "get_first": [2, 20], "get_typ": [2, 20], "get_value_typ": [2, 20], "pass_through": [2, 20], "set_default_float_typ": [2, 20, 56], "set_default_int_typ": [2, 20, 56], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 43, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91], "provid": [3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 30, 47, 48, 50, 52, 54, 63, 64, 65, 67, 72, 73, 74, 75, 76, 79, 80, 83, 84, 87, 88, 89, 91], "convert": [3, 14, 19, 21, 22, 26, 27, 48, 52, 68, 80, 84, 85], "between": [3, 4, 5, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 34, 39, 43, 46, 47, 48, 51, 52, 55, 56, 63, 64, 65, 66, 74, 75, 76, 78, 79, 80, 81, 82, 88, 89], "scale": [3, 11, 14, 17, 21, 22, 26, 32, 35, 39, 43, 45, 47, 50, 51, 54, 65, 66, 68, 69, 71, 74, 75, 76, 79, 80, 83, 84, 85, 87, 88, 89], "paramet": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 39, 48, 49, 53, 56, 63, 65, 66, 68, 69, 74, 75, 76, 83, 88], "For": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 38, 39, 41, 43, 48, 51, 52, 55, 56, 59, 60, 63, 64, 65, 68, 69, 70, 72, 75, 76, 77, 78, 82, 83, 84, 87, 90, 91], "more": [3, 4, 5, 6, 7, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 32, 35, 38, 39, 43, 46, 47, 48, 50, 51, 52, 54, 55, 56, 60, 61, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89], "see": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 38, 39, 46, 47, 48, 52, 56, 60, 64, 65, 67, 68, 69, 70, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90], "conveni": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 55, 56, 64, 69, 73], "all": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 26, 27, 28, 32, 34, 35, 36, 39, 40, 46, 47, 48, 50, 51, 52, 54, 56, 60, 61, 64, 66, 68, 69, 71, 75, 76, 77, 78, 79, 83, 87, 88, 89], "thi": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 90], "also": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 32, 34, 35, 38, 39, 41, 45, 46, 47, 48, 51, 52, 54, 55, 56, 59, 60, 61, 63, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89], "avail": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 23, 24, 27, 46, 52, 60, 64, 65, 66, 69, 71, 79], "from": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 91], "we": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89], "suggest": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 60, 61, 84], "import": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 54, 55, 56, 60, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 87, 88, 89], "under": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 26, 32, 38, 43, 69, 75, 79, 89], "convent": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 29, 59, 64, 69], "dp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 87, 88, 89, 90, 91], "alpha": [3, 5, 11, 14, 15, 17, 19, 34, 43, 50, 75, 76, 79, 80, 83, 84, 87], "t": [3, 4, 5, 7, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 39, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 83, 84, 85, 87, 88, 89], "none": [3, 4, 5, 6, 7, 10, 11, 13, 14, 17, 19, 20, 26, 39, 69, 71, 73, 87, 88], "sourc": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 50, 60, 64, 71, 74, 75, 79], "desir": [3, 47, 75], "toler": 3, "discret": [3, 14, 22, 26, 27, 28, 68], "gaussian": [3, 11, 14, 17, 44, 68, 79, 80, 84, 88], "nois": [3, 11, 14, 17, 19, 23, 35, 39, 44, 47, 50, 52, 54, 60, 66, 68, 69, 71, 74, 75, 76, 77, 80, 82, 83, 84, 87, 88, 89, 91], "statist": [3, 9, 11, 32, 35, 39, 43, 45, 52, 65, 68, 69, 70, 76, 77, 79, 80, 82, 83, 87, 88, 91], "signific": [3, 11, 60, 61, 75, 80, 87, 91], "level": [3, 11, 17, 21, 23, 27, 28, 39, 47, 48, 52, 64, 66, 71, 73, 75, 76, 79, 80, 82, 83, 84], "http": [3, 4, 6, 7, 14, 15, 16, 19, 22, 26, 32, 60, 68, 71, 87, 88], "doc": [3, 4, 6, 7, 14, 15, 16, 17, 19, 26, 32, 56, 61, 63, 67], "0": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 54, 55, 56, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89], "13": [3, 4, 6, 7, 14, 15, 16, 19, 22, 50, 64, 66, 75, 76, 83, 88], "fn": [3, 4, 6, 7, 14, 15, 16, 19, 26, 63, 64, 71], "html": [3, 4, 6, 7, 14, 15, 16, 19, 26, 32], "proof": [3, 4, 14, 15, 19, 21, 26, 28, 48, 49, 50, 51, 59, 60, 62, 64, 73, 89], "definit": [3, 4, 14, 15, 16, 19, 43, 46, 47, 48, 63, 64, 65, 71, 77, 82], "org": [3, 4, 14, 19, 26, 32, 57, 58, 82], "en": [3, 4, 14, 19], "v0": [3, 4, 14, 19], "src": [3, 4, 14, 19, 60, 63, 64], "pdf": [3, 4, 14, 19, 26, 63, 83, 87], "A": [3, 4, 5, 6, 7, 9, 11, 14, 15, 16, 17, 19, 20, 21, 28, 29, 32, 34, 35, 37, 46, 47, 48, 50, 51, 52, 56, 59, 60, 63, 64, 68, 73, 75, 79, 82, 86, 87, 88, 89, 90, 91], "far": [3, 17, 26, 51, 65], "valu": [3, 4, 6, 7, 10, 11, 13, 14, 15, 17, 19, 20, 26, 27, 29, 31, 32, 34, 35, 36, 39, 46, 47, 48, 51, 52, 54, 60, 63, 64, 65, 66, 68, 71, 74, 75, 76, 79, 80, 83, 84, 87, 88], "mai": [3, 4, 5, 7, 11, 17, 19, 20, 21, 25, 26, 28, 31, 33, 34, 35, 36, 37, 39, 45, 46, 48, 49, 50, 51, 52, 53, 56, 59, 61, 63, 64, 65, 66, 68, 69, 73, 75, 76, 77, 79, 80, 83, 85, 87, 89], "diverg": [3, 15, 17, 31, 47, 48, 60, 64], "input": [3, 4, 5, 6, 7, 11, 13, 14, 15, 17, 19, 20, 21, 22, 26, 27, 28, 29, 34, 36, 39, 40, 41, 46, 47, 48, 49, 51, 52, 54, 56, 63, 64, 66, 68, 69, 74, 75, 78, 79, 80, 83, 87, 88, 89], "mechan": [3, 4, 14, 15, 17, 19, 22, 25, 28, 30, 31, 32, 43, 50, 52, 65, 68, 71, 75, 79, 80, 84, 87, 91], "1": [3, 4, 5, 10, 11, 13, 14, 15, 17, 19, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 63, 64, 65, 66, 68, 69, 71, 73, 75, 76, 77, 78, 80, 83, 84, 85, 87, 88, 89], "100": [3, 11, 14, 17, 22, 23, 26, 39, 45, 50, 51, 68, 69, 74, 79, 80, 83, 84, 85, 87, 88], "confid": [3, 11, 17, 75, 76, 80, 83, 87], "must": [3, 4, 5, 6, 7, 11, 14, 15, 16, 19, 20, 21, 25, 26, 28, 34, 39, 45, 52, 54, 63, 64, 68, 76, 78, 83, 89], "within": [3, 15, 17, 19, 21, 25, 47, 52, 60, 63, 76, 82, 83, 84, 87, 88], "argument": [3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 20, 21, 24, 26, 27, 28, 29, 39, 40, 41, 45, 51, 52, 54, 60, 63, 64, 67, 68, 89], "data": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 69, 70, 71, 73, 75, 76, 78, 82, 83, 84, 86, 87, 88, 89, 90, 91], "rais": [3, 4, 6, 7, 11, 13, 14, 15, 16, 17, 19, 20, 23, 26, 34, 39, 45], "typeerror": [3, 4, 6, 7, 14, 15, 16, 17, 19, 26, 68], "an": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 59, 60, 63, 64, 67, 68, 69, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90], "": [3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 19, 22, 25, 26, 27, 28, 29, 32, 35, 43, 46, 47, 48, 51, 54, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91], "differ": [3, 4, 5, 6, 7, 11, 14, 15, 16, 17, 19, 21, 26, 28, 32, 34, 35, 39, 43, 45, 46, 47, 48, 51, 52, 54, 59, 60, 63, 64, 65, 69, 74, 75, 76, 79, 80, 83, 84, 87, 89, 90], "expect": [3, 4, 5, 6, 7, 11, 14, 15, 16, 19, 22, 25, 26, 28, 31, 34, 48, 49, 51, 63, 68, 69, 76, 84, 85, 87, 88, 89], "fail": [3, 4, 6, 7, 11, 14, 15, 16, 17, 19, 20, 22, 26, 39, 52, 54, 68, 85, 87], "error": [3, 4, 6, 7, 14, 15, 16, 17, 19, 20, 26, 34, 39, 40, 41, 45, 48, 49, 50, 51, 54, 60, 63, 64, 69, 71, 75, 76, 78, 83, 84], "librari": [3, 4, 6, 7, 11, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29, 31, 32, 33, 35, 37, 39, 43, 47, 48, 51, 52, 54, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 85, 89, 90, 91], "laplacian": [3, 65, 75, 80, 83, 85], "return": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 26, 28, 29, 31, 32, 33, 34, 35, 39, 45, 48, 50, 54, 63, 64, 65, 66, 68, 69, 73, 74, 76, 78, 83, 84, 87, 88, 89], "meet": [3, 35, 68, 80], "requir": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 28, 31, 33, 34, 39, 41, 47, 51, 52, 57, 59, 60, 63, 65, 68, 74, 75, 77, 79], "given": [3, 4, 5, 6, 11, 15, 17, 19, 20, 21, 35, 39, 43, 54, 59, 66, 68, 69, 74, 75, 76, 77, 80, 83, 85, 87, 89], "estim": [3, 11, 14, 19, 21, 27, 28, 35, 43, 49, 52, 66, 68, 69, 73, 75, 76, 80, 84, 85, 87, 88, 91], "p": [3, 10, 14, 19, 28, 74, 84], "y": [3, 13, 14, 15, 16, 26, 41, 42, 65, 69, 74, 76, 87], "ge": [3, 15, 16, 48, 63, 83], "where": [3, 4, 11, 13, 14, 15, 19, 21, 22, 25, 26, 29, 37, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 63, 64, 65, 68, 69, 74, 75, 76, 77, 79, 83, 84, 85, 87, 88], "x": [3, 4, 10, 13, 14, 15, 16, 17, 19, 26, 28, 32, 37, 48, 65, 66, 69, 74, 76, 83, 88, 89], "z": [3, 16, 87], "sim": [3, 15, 69], "mathcal": 3, "l": [3, 10, 32, 37, 39, 49, 51, 52, 83, 89], "_": [3, 13, 15, 28, 29, 32, 45, 50, 55, 74, 79, 84, 88], "That": [3, 15, 21, 24, 26, 27, 49, 60, 82, 83], "i": [3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91], "laplac": [3, 4, 11, 14, 17, 22, 23, 27, 35, 39, 43, 45, 47, 55, 56, 68, 71, 75, 76, 79, 80, 83, 84, 87, 91], "random": [3, 4, 14, 19, 32, 46, 47, 48, 50, 51, 73, 74, 79, 82, 83, 87, 88], "variabl": [3, 55, 69, 74, 77, 83, 88], "distribut": [3, 5, 11, 14, 15, 17, 19, 45, 46, 47, 48, 54, 64, 65, 69, 74, 75, 77, 79, 80, 85, 87, 89], "float": [3, 4, 5, 7, 10, 11, 13, 14, 17, 19, 20, 21, 22, 24, 25, 31, 32, 36, 39, 40, 41, 47, 48, 49, 50, 52, 54, 56, 60, 63, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 83, 84, 85, 87, 88, 89, 91], "can": [3, 4, 5, 6, 7, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89], "take": [3, 6, 14, 17, 19, 21, 22, 25, 29, 34, 35, 37, 43, 47, 48, 49, 51, 52, 54, 57, 59, 60, 61, 64, 65, 66, 68, 69, 75, 76, 87, 88], "floor": 3, "without": [3, 13, 25, 55, 59, 60, 63, 68, 69, 76, 83, 85, 89], "affect": [3, 14, 75, 83, 88], "coverag": [3, 91], "probabl": [3, 4, 14, 15, 28, 39, 46, 47, 48, 50, 64, 65, 76, 83, 84], "summar": [3, 11, 35, 39, 43, 45, 47, 75, 76], "oncefram": [3, 8, 11, 14, 60], "threshold": [3, 4, 11, 14, 66, 76, 79], "configur": [3, 11, 26, 51, 52, 60, 63, 64, 77], "censor": [3, 11, 32, 66], "small": [3, 11, 19, 26, 28, 32, 35, 43, 48, 50, 51, 54, 64, 65, 66, 69, 76, 79, 83, 87], "sensit": [3, 5, 11, 14, 17, 19, 20, 26, 27, 28, 35, 39, 46, 47, 48, 49, 50, 51, 52, 54, 55, 63, 65, 68, 69, 74, 75, 76, 77, 79, 89, 91], "partit": [3, 11, 14, 16, 74, 75, 77, 78, 79], "includ": [3, 9, 11, 17, 19, 24, 25, 27, 35, 36, 45, 52, 55, 56, 60, 61, 63, 65, 66, 67, 71, 75, 76, 77, 79, 82, 83, 85], "contain": [3, 5, 7, 8, 9, 11, 14, 17, 20, 22, 26, 28, 29, 34, 39, 40, 41, 46, 47, 48, 60, 63, 64, 66, 68, 69, 74, 75, 76, 78, 79, 80, 83, 84, 87, 88, 89], "cutoff": [3, 11], "respect": [3, 11, 15, 17, 19, 26, 35, 39, 46, 52, 56, 64, 66, 83, 89], "count": [3, 11, 14, 17, 19, 21, 26, 27, 39, 43, 47, 48, 49, 50, 52, 56, 65, 66, 67, 69, 76, 77, 79, 83, 84, 85, 88], "being": [3, 11, 17, 24, 32, 39, 54, 56, 60, 67, 72, 76, 84, 85], "featur": [3, 4, 6, 7, 13, 14, 15, 16, 17, 19, 25, 58, 59, 60, 64, 69, 71, 77], "contrib": [3, 4, 6, 7, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 28, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 54, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 84, 85, 87, 88, 89], "comput": [3, 4, 5, 6, 11, 13, 14, 16, 17, 19, 20, 22, 26, 28, 31, 33, 38, 39, 41, 45, 46, 47, 48, 49, 51, 52, 53, 56, 63, 65, 66, 68, 69, 75, 76, 79, 82, 83, 87, 88, 89, 91], "which": [3, 4, 5, 6, 7, 11, 14, 17, 19, 21, 27, 28, 34, 39, 42, 47, 48, 50, 51, 52, 54, 56, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 79, 82, 83, 84, 87, 88, 89], "want": [3, 11, 17, 21, 22, 28, 32, 39, 52, 54, 56, 59, 60, 61, 63, 64, 65, 66, 68, 69, 75, 76, 77, 82, 84, 87, 88], "read": [3, 39, 41, 47, 48, 57, 60, 63, 64, 75, 76], "option": [3, 4, 5, 7, 8, 10, 11, 13, 14, 17, 19, 52, 57, 60, 63, 68, 71, 75, 85], "us": [3, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 88, 89, 90], "first": [3, 4, 5, 6, 9, 11, 14, 17, 19, 20, 21, 22, 26, 28, 29, 32, 35, 45, 48, 49, 51, 52, 54, 55, 59, 60, 61, 63, 64, 65, 68, 69, 71, 74, 75, 79, 83, 84, 85, 87, 88, 89], "creat": [3, 5, 7, 13, 14, 17, 19, 22, 31, 32, 33, 45, 46, 47, 48, 55, 60, 61, 63, 64, 65, 67, 68, 75, 76, 79, 82, 85, 87, 88], "api": [3, 5, 11, 14, 21, 22, 23, 30, 31, 33, 38, 39, 45, 46, 48, 52, 54, 56, 62, 68, 70, 71, 73, 74, 75, 76, 79, 80, 82, 89, 90, 91], "pl": [3, 11, 14, 34, 35, 37, 39, 40, 41, 42, 43, 45, 55, 65, 75, 76, 78], "lf": [3, 14, 65], "lazyfram": [3, 5, 7, 11, 14, 17, 19, 34, 35, 39, 45, 55], "schema": [3, 14, 34, 39], "int32": [3, 11, 14, 34], "b": [3, 14, 17, 19, 20, 26, 28, 34, 37, 48, 52, 63, 64, 65, 74, 83, 88, 89], "string": [3, 5, 7, 15, 16, 19, 20, 21, 37, 38, 39, 40, 42, 44, 45, 52, 53, 56, 64, 66, 68, 76, 78, 84, 85], "lf_domain": [3, 14], "i32": [3, 5, 14, 17, 20, 21, 22, 26, 48, 51, 52, 56, 63, 68], "str": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 19, 20, 21, 26, 33, 34, 41, 42, 45, 50, 52, 56, 64, 66, 68, 84, 85], "margin": [3, 5, 7, 8, 11, 14, 17, 35, 37, 39, 40, 43, 65, 75, 76, 78], "max_partition_length": [3, 11, 14, 37, 39, 40, 65, 75, 76, 78], "1000": [3, 11, 17, 28, 34, 50, 51, 65, 66, 68, 69, 84, 87], "mea": [3, 17, 22, 31, 46, 50, 73, 74], "m": [3, 4, 5, 7, 11, 14, 15, 17, 18, 19, 21, 22, 26, 28, 29, 31, 32, 33, 42, 49, 50, 54, 56, 60, 64, 65, 66, 68, 69, 71, 74, 79, 83, 84, 85, 87, 88, 89], "select": [3, 4, 9, 11, 14, 30, 35, 37, 39, 40, 42, 43, 45, 50, 55, 57, 68, 75, 77, 84, 85, 87], "len": [3, 11, 19, 28, 32, 34, 35, 39, 40, 41, 42, 43, 45, 50, 55, 65, 66, 69, 74, 75, 76, 78, 83, 85, 87, 88], "col": [3, 11, 14, 35, 37, 39, 40, 41, 42, 45, 65, 75, 76, 78], "sum": [3, 4, 11, 14, 17, 19, 21, 22, 23, 26, 28, 29, 32, 35, 37, 39, 49, 50, 52, 55, 65, 67, 69, 76, 77, 78, 83, 88], "global_scal": [3, 11, 14], "extract": [3, 11, 55, 74], "util": [3, 5, 14, 17, 19, 20, 22, 24, 26, 31, 32, 43, 47, 48, 50, 54, 61, 65, 66, 68, 69, 70, 75, 76, 77, 79, 80, 84, 88], "inform": [3, 5, 9, 11, 20, 21, 22, 25, 26, 34, 38, 39, 46, 48, 50, 51, 52, 65, 66, 68, 69, 74, 75, 76, 77, 78, 83, 84, 85, 87, 88], "about": [3, 5, 6, 11, 36, 39, 45, 46, 47, 52, 56, 57, 63, 64, 65, 68, 74, 75, 76, 78, 79, 83, 84, 85, 87, 88, 89, 90], "each": [3, 4, 5, 7, 10, 11, 13, 14, 17, 19, 21, 26, 27, 28, 32, 33, 37, 39, 43, 46, 47, 48, 50, 51, 52, 54, 56, 60, 63, 64, 66, 68, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 87, 88, 89], "aggreg": [3, 5, 11, 19, 26, 27, 32, 34, 36, 38, 39, 40, 44, 45, 46, 48, 66, 68, 69, 75, 76, 78, 84, 89, 91], "result": [3, 5, 9, 11, 14, 15, 17, 19, 22, 26, 28, 31, 32, 33, 34, 35, 36, 39, 41, 43, 46, 47, 48, 49, 50, 51, 52, 60, 63, 64, 66, 68, 69, 74, 75, 76, 79, 85, 87, 89], "frame": [3, 11, 17, 24, 39, 43, 45, 75, 76], "shape": [3, 11, 14, 25, 34, 35, 37, 39, 40, 41, 42, 43, 45, 52, 65, 73, 75, 76, 78, 87, 88], "2": [3, 4, 5, 10, 11, 13, 14, 15, 17, 21, 22, 26, 28, 29, 31, 33, 34, 35, 37, 39, 41, 43, 48, 49, 51, 52, 54, 55, 63, 64, 65, 66, 68, 69, 73, 75, 76, 77, 78, 80, 83, 84, 85, 87, 88, 89], "4": [3, 14, 17, 19, 21, 26, 28, 31, 32, 33, 34, 35, 39, 40, 45, 51, 65, 66, 73, 75, 76, 77, 78, 83, 84, 85, 87, 88], "f64": [3, 4, 5, 7, 11, 14, 19, 20, 22, 26, 45, 48, 51, 52, 56, 68, 71, 74, 79, 89], "length": [3, 11, 14, 39, 43, 45, 47, 49, 51, 52, 65, 68, 69, 75, 77, 84, 87, 88], "integ": [3, 11, 14, 17, 19, 20, 21, 22, 29, 35, 39, 43, 45, 47, 48, 49, 52, 54, 56, 63, 68, 75, 76], "pass": [3, 5, 6, 11, 17, 20, 21, 24, 26, 39, 48, 49, 52, 54, 60, 68, 69, 71, 74, 75, 76, 78, 84, 87, 89], "05": [3, 11, 17, 43, 68, 69, 75, 76, 79, 84, 87], "5": [3, 11, 14, 15, 17, 19, 21, 22, 23, 26, 29, 35, 37, 39, 42, 43, 47, 48, 49, 50, 51, 54, 64, 65, 66, 68, 69, 75, 76, 77, 83, 85, 87, 88, 89], "3": [3, 4, 5, 14, 17, 21, 26, 28, 29, 31, 32, 33, 34, 35, 39, 40, 42, 43, 48, 51, 52, 55, 60, 64, 65, 66, 68, 69, 75, 76, 77, 78, 83, 85, 87, 88, 89], "375618": 3, "method": [4, 5, 9, 10, 11, 12, 13, 14, 19, 30, 34, 37, 45, 48, 55, 63, 65, 74, 76, 77, 83, 84], "access": [4, 6, 9, 10, 11, 12, 13, 14, 19, 21, 25, 26, 28, 49, 50, 51, 60, 61, 63, 64, 68, 73, 76, 77, 82, 85, 87, 88, 89, 91], "c": [4, 14, 17, 18, 21, 22, 28, 32, 34, 49, 52, 54, 60, 64, 68, 69, 71, 74, 79, 88], "construct": [4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 27, 28, 31, 32, 33, 39, 45, 47, 48, 50, 51, 64, 71, 75, 77, 78, 82, 83, 89], "output": [4, 5, 6, 11, 13, 14, 17, 19, 21, 22, 24, 26, 27, 28, 29, 31, 35, 36, 39, 46, 47, 48, 49, 52, 54, 56, 60, 63, 64, 65, 68, 74, 75, 76, 79, 82, 83, 89], "\u03b4": [4, 5, 21, 22, 65, 68, 76], "cast": [4, 19, 27, 41, 50, 56, 64, 75, 76, 78, 84, 85], "composit": [4, 17, 47, 49, 64, 65, 79, 87], "measurement0": 4, "measurement1": 4, "when": [4, 5, 11, 13, 14, 15, 17, 19, 20, 21, 25, 26, 27, 29, 32, 34, 35, 39, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 59, 60, 63, 64, 66, 68, 73, 75, 76, 79, 80, 83, 88, 89], "equival": [4, 14, 17, 19, 22, 26, 28, 35, 48, 64, 69, 75, 83, 88, 89], "properti": [4, 11, 24, 25, 31, 33, 46, 47, 48, 51, 60, 63, 75, 76, 77, 78, 83], "sequenti": [4, 5, 17, 19, 22, 51, 52, 79], "appli": [4, 5, 11, 14, 17, 19, 23, 26, 28, 36, 39, 42, 51, 61, 65, 68, 71, 75, 76, 78, 79, 80, 82, 83, 87, 88, 89], "same": [4, 5, 7, 17, 19, 21, 22, 25, 26, 28, 32, 34, 35, 39, 43, 48, 49, 50, 51, 52, 54, 55, 60, 63, 64, 66, 68, 69, 75, 76, 78, 82, 83, 84, 89], "dataset": [4, 5, 11, 14, 15, 17, 19, 21, 22, 26, 27, 28, 32, 35, 37, 39, 46, 47, 48, 50, 54, 66, 67, 68, 70, 73, 74, 75, 76, 78, 82, 84, 87, 88, 89], "basic": [4, 50, 83, 89], "linear": [4, 19, 75, 87], "usag": [4, 17, 34, 39, 54, 63, 68, 71, 82, 88], "noninteract": 4, "specifi": [4, 5, 11, 14, 19, 20, 23, 24, 25, 26, 27, 34, 35, 39, 43, 45, 47, 48, 57, 60, 63, 64, 68, 69, 71, 74, 75, 76, 78, 79, 83, 89], "up": [4, 14, 17, 21, 24, 29, 34, 54, 59, 60, 63, 64, 68, 69, 74, 75, 76, 77, 79, 83, 84, 85, 87, 89], "front": [4, 21, 64, 69], "interact": [4, 17, 21, 22, 25, 47, 60, 63, 85], "via": [4, 5, 17, 24, 26, 28, 31, 32, 33, 34, 37, 39, 41, 48, 51, 56, 61, 64, 69, 75, 83, 87, 88, 89, 91], "vector": [4, 5, 13, 14, 17, 19, 27, 32, 43, 47, 48, 49, 51, 52, 65, 66, 68, 74, 79, 83, 85, 87, 89], "compos": [4, 22, 64, 68, 74], "transformation0": 4, "outer": [4, 22], "inner": [4, 5, 7, 11, 15, 22], "postprocess1": 4, "repres": [4, 5, 10, 19, 22, 26, 28, 34, 48, 52, 64, 69, 74, 75, 77, 78, 83, 84, 89], "non": [4, 11, 14, 15, 16, 17, 19, 21, 22, 36, 39, 48, 52, 73, 79, 89, 91], "postprocess": [4, 15, 19, 21, 22, 26, 49, 50, 52, 66, 68, 69, 74], "postprocessor": [4, 6, 19, 30, 50], "transformation1": 4, "smoothedmaxdiverg": [4, 22, 27, 48], "curv": [4, 15, 17, 22, 68, 85], "maxdiverg": [4, 5, 14, 17, 21, 22, 26, 27, 28, 48, 74, 79, 83, 89], "population_s": [4, 22], "amplifi": [4, 22, 68], "amplif": [4, 63], "subsampl": 4, "doe": [4, 11, 14, 19, 34, 35, 36, 39, 41, 48, 49, 52, 55, 61, 69, 75, 77, 79, 80, 83, 84, 87], "perform": [4, 51, 56, 61, 65, 74, 82, 84, 87, 88], "ani": [4, 5, 7, 11, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 28, 31, 32, 33, 39, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 89], "sampl": [4, 9, 11, 13, 14, 17, 19, 22, 26, 28, 46, 50, 51, 52, 54, 68, 69, 74, 75, 76, 77, 83, 84, 87, 88, 89, 91], "It": [4, 5, 11, 14, 17, 22, 23, 30, 32, 47, 48, 52, 56, 60, 61, 63, 64, 66, 74, 76, 77, 79, 83, 84, 87, 89], "have": [4, 11, 14, 17, 18, 19, 21, 22, 24, 25, 26, 28, 32, 34, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 63, 64, 67, 68, 69, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89], "hand": [4, 32, 54, 69, 79, 82, 91], "simpl": [4, 11, 22, 28, 51, 52, 63, 68, 86, 87, 89], "larger": [4, 14, 19, 21, 22, 51, 52, 54, 68, 75, 76, 79, 83, 84, 87, 89], "popul": [4, 11, 22, 28, 69, 75, 76, 82, 84, 87], "dia": [4, 19], "do": [4, 11, 19, 28, 32, 34, 39, 41, 48, 55, 56, 59, 60, 61, 64, 65, 68, 69, 75, 76, 78, 83, 85, 88], "mi": [4, 14, 19, 64, 83], "mo": [4, 14, 17, 19, 56, 64, 66, 83], "match": [4, 17, 19, 21, 22, 27, 39, 52, 60, 64, 68, 89], "honest": [4, 6, 7, 11, 14, 15, 16, 19, 22, 24, 31, 32, 33, 60, 68, 71, 73, 74], "curiou": [4, 6, 7, 11, 14, 15, 16, 19, 22, 24, 31, 32, 33, 60, 68, 71, 73, 74], "why": [4, 6, 7, 14, 15, 16, 17, 19, 61, 63, 76, 89], "guarante": [4, 11, 14, 15, 20, 26, 28, 39, 43, 45, 47, 48, 49, 52, 55, 63, 65, 69, 75, 76, 83, 89], "onli": [4, 5, 6, 7, 11, 14, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 34, 36, 37, 39, 41, 43, 45, 48, 50, 52, 60, 63, 64, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 83, 84, 85, 87, 89], "valid": [4, 7, 11, 14, 19, 20, 25, 26, 34, 39, 45, 48, 49, 52, 59, 60, 63, 64, 68, 69, 83, 89], "record": [4, 5, 11, 13, 19, 32, 33, 34, 35, 39, 43, 48, 49, 51, 52, 54, 64, 66, 68, 69, 75, 76, 77, 83, 87, 89], "int": [4, 5, 7, 10, 11, 13, 14, 17, 19, 20, 21, 26, 28, 29, 31, 33, 39, 48, 50, 54, 55, 56, 64, 68, 74, 75, 76, 78, 87, 88], "zeroconcentrateddiverg": [4, 5, 14, 22, 26, 27], "citat": [4, 14, 19, 26], "bs16": 4, "concentr": [4, 5, 11, 15, 27, 43, 65, 75, 83, 85], "simplif": 4, "extens": [4, 38, 47, 60, 63], "lower": [4, 11, 17, 19, 23, 30, 34, 39, 43, 65, 69, 71, 73, 74, 83, 84, 89], "arxiv": [4, 14, 19, 26], "1605": 4, "02065": 4, "subsect": [4, 14, 26, 63], "stop_prob": 4, "privat": [4, 6, 9, 11, 13, 14, 17, 19, 21, 26, 30, 31, 34, 39, 41, 43, 45, 46, 47, 48, 52, 54, 63, 65, 67, 69, 70, 72, 75, 76, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91], "candid": [4, 11, 14, 19, 32, 45, 74, 75], "whose": [4, 11, 17, 20, 24, 25, 60], "score": [4, 11, 14, 19, 32, 74, 75], "abov": [4, 14, 17, 18, 19, 26, 55, 63, 64, 68, 75, 76, 78, 79, 84, 88, 89], "satisfi": [4, 5, 6, 15, 16, 17, 21, 25, 32, 34, 35, 39, 43, 45, 54, 59, 64, 65, 75, 77, 79, 88, 89], "\u03b5": [4, 5, 13, 22, 26, 32, 65, 68, 75, 77, 79], "2\u03b5": 4, "invoc": [4, 17], "time": [4, 6, 7, 14, 19, 21, 22, 25, 26, 27, 33, 34, 37, 39, 43, 52, 54, 55, 59, 60, 61, 68, 69, 72, 73, 74, 75, 76, 77, 83, 85, 87], "below": [4, 11, 21, 22, 25, 32, 42, 48, 52, 57, 60, 63, 68, 69, 75, 76, 83, 84, 85], "algorithm": [4, 6, 14, 19, 25, 26, 27, 28, 46, 47, 50, 51, 52, 54, 59, 63, 74, 75, 76, 82, 89, 91], "termin": [4, 50], "noth": 4, "should": [4, 11, 14, 15, 17, 19, 23, 26, 29, 34, 46, 47, 48, 49, 52, 56, 57, 60, 61, 63, 67, 69, 76, 77, 79, 82, 83, 84, 85, 89], "make": [4, 5, 11, 14, 17, 19, 20, 21, 22, 25, 26, 31, 32, 33, 35, 39, 43, 45, 47, 48, 50, 52, 54, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 82, 83, 84, 85, 87, 88, 89], "form": [4, 5, 14, 19, 28, 31, 33, 48, 50, 56, 61, 64, 75, 78, 79, 83, 89], "write": [4, 17, 21, 26, 28, 29, 32, 47, 49, 50, 51, 52, 55, 60, 61, 63, 64, 71, 73, 76, 88, 89], "custom": [4, 28, 33], "scorer": 4, "TO": [4, 6, 14, 19, 31, 52, 88], "extrinsicobject": [4, 6, 14, 20], "ensur": [4, 9, 11, 13, 14, 19, 25, 29, 39, 40, 45, 48, 52, 57, 65, 74, 75, 76, 77, 78, 79, 83, 84, 89], "left": [4, 15, 19, 39, 40, 50, 76, 83], "arbitrari": [4, 22, 38, 46, 47, 51], "held": 4, "liu": 4, "talwar": 4, "stoc": 4, "2019": 4, "support": [4, 5, 8, 11, 14, 19, 21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 50, 52, 60, 64, 65, 77, 78, 79, 82, 83, 89], "element": [4, 7, 11, 14, 16, 17, 19, 21, 23, 25, 26, 28, 32, 35, 36, 47, 50, 51, 52, 56, 60, 64, 65, 66, 68, 74, 83, 84, 85, 87, 89], "di": [4, 64, 83], "select_private_candid": 4, "tupl": [4, 5, 11, 13, 15, 17, 19, 20, 22, 26, 48, 68, 69, 75, 87, 89], "stop": 4, "earli": [4, 25, 63], "iter": [4, 20, 25, 32, 59, 64, 69], "immedi": [4, 19], "greater": [4, 5, 11, 19, 43, 48, 49, 50, 51, 52, 54, 61, 66, 68, 69, 76, 83, 87, 88], "than": [4, 5, 11, 14, 15, 17, 19, 21, 23, 26, 28, 30, 39, 46, 48, 51, 52, 54, 59, 63, 65, 66, 67, 68, 69, 75, 76, 77, 79, 80, 83, 84, 85, 87, 88, 89], "23": [4, 20, 28, 34, 66, 80, 88], "space": [4, 5, 14, 17, 19, 21, 26, 29, 34, 51, 52, 54, 64, 68, 71, 72, 87], "fals": [4, 5, 7, 11, 13, 14, 16, 17, 19, 20, 22, 26, 32, 34, 35, 39, 41, 48, 49, 50, 52, 54, 68, 71, 74, 79, 83, 85, 87, 89], "demonstr": [4, 22, 32, 37, 39, 64, 65, 69, 71, 75, 76, 80, 81, 86, 87, 88, 91], "purpos": [4, 11, 48, 63, 68, 83], "np": [4, 14, 26, 28, 50, 65, 69, 73, 74, 83, 84, 85, 87, 88], "m_mock": 4, "lambda": [4, 15, 17, 29, 32, 50, 54, 55, 65, 66, 68, 69, 74, 79, 84, 87, 88], "loc": [4, 83], "d_in": [4, 5, 6, 14, 17, 19, 21, 22, 26, 28, 31, 32, 33, 46, 48, 49, 50, 51, 52, 54, 64, 66, 68, 69, 79, 83, 87, 89], "m_private_select": 4, "20": [4, 11, 32, 39, 50, 51, 66, 68, 69, 75, 78, 83, 87, 88], "assert": [4, 14, 17, 22, 28, 34, 41, 47, 48, 51, 55, 68, 88], "isinst": [4, 32], "d_mid": [4, 5, 21, 79], "base": [4, 11, 13, 17, 19, 20, 21, 39, 43, 47, 48, 50, 52, 56, 65, 75, 79, 82, 83, 84, 88], "answer": [4, 14, 17, 21, 28, 35, 39, 43, 50, 51, 65, 69, 77, 87, 88], "previou": [4, 21, 28, 29, 51, 54, 68, 75, 76, 78, 83, 85, 89], "concurr": [4, 21], "allow": [4, 5, 10, 11, 17, 21, 22, 23, 24, 26, 32, 34, 37, 39, 41, 45, 47, 52, 60, 65, 76, 78, 83, 84], "spawn": [4, 5, 21], "multipl": [4, 11, 17, 21, 22, 33, 37, 49, 59, 63, 68, 74, 76, 77, 79, 82, 83, 88], "interleav": 4, "your": [4, 11, 15, 16, 17, 19, 22, 23, 24, 25, 27, 29, 31, 32, 33, 39, 43, 48, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 83, 91], "amongst": [4, 79], "them": [4, 11, 25, 29, 33, 34, 45, 46, 59, 68, 74, 76, 83, 84, 88], "indic": [4, 6, 14, 19, 26, 34, 39, 52, 54, 56, 63, 64, 68, 87], "distanc": [4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 32, 43, 46, 47, 51, 52, 54, 56, 63, 64, 65, 68, 71, 74, 79, 89], "maximum": [4, 7, 19, 48, 51, 75, 83, 84, 89], "adjac": [4, 5, 14, 15, 17, 19, 48, 51, 63, 64, 89], "expenditur": [4, 5, 13, 49, 68, 87, 88, 89], "constructor": [4, 5, 14, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 48, 49, 50, 52, 54, 56, 60, 61, 63, 66, 68, 69, 73, 85], "delai": [4, 14, 19, 89], "applic": [4, 5, 14, 19, 25, 47, 61, 62, 65, 66, 75, 76, 77, 78, 82, 89], "class": [5, 11, 13, 17, 18, 20, 46, 48, 55, 61, 68], "d_out": [5, 6, 14, 17, 19, 21, 22, 46, 48, 50, 52, 54, 66, 68, 69, 79, 83, 87], "space_overrid": 5, "coordin": 5, "instanc": [5, 6, 7, 11, 13, 15, 16, 17, 19, 26, 46, 48, 50, 55, 56, 74, 78, 83, 89], "recommend": [5, 14, 29, 34, 37, 60, 75, 76, 79, 82], "instead": [5, 11, 17, 19, 20, 26, 35, 39, 43, 45, 46, 47, 50, 52, 55, 60, 65, 66, 68, 73, 75, 76, 83, 87, 89], "one": [5, 11, 14, 15, 17, 19, 20, 21, 32, 35, 37, 43, 47, 48, 49, 51, 52, 54, 57, 60, 63, 64, 65, 66, 68, 69, 75, 76, 77, 79, 83, 85, 87, 88, 89], "execut": [5, 6, 11, 17, 21, 22, 27, 28, 45, 63, 64, 87], "track": [5, 34, 77, 82], "upper": [5, 11, 14, 17, 19, 21, 34, 39, 46, 47, 48, 54, 75, 77, 83, 84, 89], "sequenc": [5, 11, 13, 17, 20, 37], "loss": [5, 14, 19, 26, 28, 35, 43, 45, 47, 69, 75, 76, 77, 83, 88, 89], "sent": 5, "overal": [5, 21, 43, 85], "filter": [5, 11, 35, 36, 40, 74, 75, 76, 77, 88], "static": [5, 20, 47, 64], "privacy_unit": [5, 11, 23, 29, 34, 35, 37, 39, 40, 41, 42, 43, 55, 65, 75, 76, 77, 78, 79], "privacy_loss": [5, 11, 23, 29, 34, 35, 37, 39, 40, 41, 42, 43, 55, 65, 75, 76, 77, 78, 79], "split_evenly_ov": [5, 11, 23, 29, 34, 35, 37, 39, 40, 41, 42, 43, 55, 65, 75, 76, 77, 78, 79], "split_by_weight": 5, "weight": [5, 14, 21, 50], "assumpt": [5, 43, 69, 89], "structur": [5, 27, 43, 48, 50, 60, 61], "public": [5, 9, 11, 20, 39, 51, 52, 66, 68, 69, 75, 76, 77, 87, 88, 89], "mutual": 5, "exclus": [5, 19, 75], "plan": [5, 11, 14, 45, 55, 61, 67], "In": [5, 7, 11, 14, 15, 18, 19, 21, 22, 26, 27, 28, 29, 33, 34, 35, 36, 38, 39, 41, 43, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 87, 89], "addit": [5, 7, 11, 14, 17, 18, 19, 32, 34, 35, 39, 41, 45, 46, 47, 48, 49, 51, 52, 56, 60, 61, 69, 75, 77, 78, 79, 80, 83, 89], "group": [5, 7, 8, 11, 14, 17, 27, 30, 34, 35, 36, 39, 40, 42, 50, 59, 70, 75, 77], "analyz": [5, 19, 60, 77, 82], "unit": [5, 13, 15, 17, 26, 28, 34, 43, 46, 48, 61, 77, 78, 82, 89], "number": [5, 7, 10, 11, 13, 14, 15, 17, 18, 19, 25, 32, 35, 39, 40, 41, 43, 47, 48, 50, 51, 52, 54, 59, 63, 66, 68, 69, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91], "part": [5, 11, 34, 36, 52, 59, 63, 64, 74, 76, 82, 83], "evenli": [5, 75, 79, 87], "list": [5, 11, 17, 19, 20, 26, 27, 32, 33, 39, 45, 48, 50, 51, 52, 56, 58, 59, 60, 64, 66, 67, 68, 69, 74, 75, 76, 82, 88, 89, 90], "intermedi": [5, 22, 27, 48, 51, 52, 74, 83], "serialized_plan": [5, 55], "lazyframequeri": [5, 8, 11, 45], "full": [5, 9, 11, 18, 39, 60, 76, 77, 83], "byte": [5, 14], "like": [5, 9, 11, 14, 17, 20, 21, 25, 26, 28, 34, 35, 39, 40, 45, 48, 52, 54, 55, 56, 59, 60, 61, 63, 64, 65, 68, 73, 75, 77, 78, 79, 83, 84, 87, 88, 89], "polars_plan": [5, 11, 55], "kwarg": 5, "ha": [5, 14, 17, 19, 20, 21, 22, 25, 26, 28, 31, 34, 35, 39, 43, 45, 48, 52, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 76, 79, 82, 83, 84, 85, 87, 88, 89], "been": [5, 11, 21, 25, 26, 35, 39, 63, 64, 65, 68, 76, 85], "next": [5, 32, 48, 50, 51, 59, 60, 66, 69, 71, 74, 75, 79, 84, 85, 88], "otherwis": [5, 20, 28, 54, 63, 65, 78], "directli": [5, 11, 45, 47, 48, 52, 71, 75, 77, 83, 84], "f": [5, 11, 14, 15, 19, 26, 28, 32, 37, 39, 48, 69, 74, 75, 80, 83, 87, 88, 89], "chain": [5, 7, 14, 17, 19, 20, 27, 32, 46, 47, 48, 52, 53, 54, 55, 64, 67, 68, 71, 74, 83], "miss": [5, 19, 61, 63, 76], "numer": [5, 7, 11, 17, 19, 26, 34, 39, 48, 51, 52, 54, 65, 68, 69, 75], "solv": [5, 17, 28, 48, 54, 68, 74, 83, 88], "call": [5, 20, 21, 22, 26, 27, 29, 45, 46, 48, 49, 51, 55, 63, 64, 69, 71, 74, 75, 79, 82, 83, 84, 89], "closest": [5, 17], "stabil": [5, 7, 17, 19, 22, 24, 27, 31, 33, 46, 47, 51, 52, 55, 60, 63, 64, 66, 89], "constraint": [5, 7, 11, 17, 89], "discov": [5, 17, 54], "assign": [5, 19, 34, 59], "attribut": [5, 17, 32, 87], "callabl": [5, 17], "classmethod": [5, 20], "_wrap_releas": 5, "initi": [5, 25, 43, 48, 60, 62, 75, 82, 85], "howev": [5, 19, 21, 26, 35, 39, 46, 48, 50, 51, 52, 65, 74, 75, 76, 83, 85, 88], "stand": [5, 49, 60, 64], "alon": 5, "help": [5, 17, 26, 47, 48, 50, 51, 56, 59, 61, 64, 67, 71, 76, 81, 83, 89], "build": [5, 6, 14, 17, 20, 25, 29, 37, 40, 48, 51, 52, 60, 62, 63, 64, 69, 76, 78, 83, 87], "submit": [5, 21, 28, 60, 88], "intern": [5, 6, 14, 19, 20, 21, 26, 34, 51, 61, 64, 73, 75], "default": [5, 7, 13, 14, 19, 20, 26, 27, 39, 48, 51, 52, 56, 59, 60, 64, 65, 68, 71, 74, 75, 76, 77, 84], "split": [5, 19, 51, 52, 68, 74, 85, 87, 88], "zcdp": [5, 11, 21, 22, 43], "convers": [5, 39, 40, 41, 58, 76, 78], "approx": [5, 21, 84], "wrap_releas": 5, "prior": [5, 21, 48, 52, 69, 75, 79, 83], "either": [5, 11, 14, 17, 19, 21, 28, 39, 48, 52, 54, 60, 61, 63, 64, 69, 80, 87], "allow_transform": 5, "bool": [5, 6, 7, 10, 11, 13, 14, 16, 17, 19, 20, 26, 27, 28, 35, 48, 52, 56, 87, 88], "true": [5, 6, 7, 11, 13, 14, 16, 17, 19, 20, 26, 28, 32, 35, 37, 39, 40, 41, 42, 43, 48, 50, 55, 60, 63, 65, 66, 69, 74, 75, 76, 78, 80, 84, 85, 87, 88], "respons": [5, 14, 57, 75, 76, 79, 87], "accept": [5, 21, 26, 27, 29, 39, 48, 54, 56, 57, 64, 65, 72, 81, 89], "limit": [5, 14, 21, 24, 34, 51, 52, 65, 68, 76, 79, 80, 87, 88], "set": [5, 7, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 26, 27, 28, 32, 34, 36, 39, 40, 41, 43, 46, 47, 48, 50, 52, 54, 56, 59, 60, 61, 63, 64, 65, 66, 68, 74, 75, 76, 78, 83, 84, 85, 87, 89, 91], "express": [5, 11, 14, 17, 19, 20, 26, 28, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 52, 75, 76, 78, 82, 83, 89], "As": [5, 25, 28, 47, 48, 49, 50, 52, 64, 65, 68, 83, 85, 87, 88, 89], "well": [5, 15, 17, 21, 25, 26, 28, 34, 47, 48, 54, 60, 63, 64, 68, 69, 74, 75, 82, 83, 84, 87, 89], "underli": [5, 17, 34, 39, 41, 46, 52, 69, 74, 84, 89], "syntax": [5, 22, 24, 60, 63, 75], "vec": [5, 14, 19, 20, 26, 52, 56, 64, 68, 84, 85], "dictionari": [5, 39], "rang": [5, 11, 19, 28, 32, 39, 45, 50, 51, 54, 65, 66, 69, 74, 75, 76, 79, 82, 84, 85, 87, 88], "primit": [5, 14, 60, 89], "dict": [5, 28, 85], "mapdomain": [5, 7, 14, 19, 27, 52, 64], "key_domain": [5, 7], "value_domain": [5, 7], "complex": [5, 65, 91], "traceback": [5, 20, 21, 22, 55], "most": [5, 11, 14, 17, 18, 20, 21, 22, 26, 31, 32, 33, 34, 35, 43, 45, 48, 51, 52, 54, 55, 56, 60, 64, 65, 67, 68, 76, 77, 79, 83, 88, 89], "recent": [5, 20, 21, 22, 55], "last": [5, 19, 20, 21, 22, 55, 63, 64, 83, 88], "ffi": [5, 60, 61, 64], "altern": [5, 39], "note": [5, 11, 15, 22, 49, 50, 55, 59, 60, 69, 75, 84, 88, 89], "violat": [5, 7, 24, 25, 39, 60, 76, 79], "rho": [5, 11, 15, 21, 26, 27, 43, 65, 68, 83], "consist": [5, 14, 19, 26, 47, 48, 49, 50, 63, 64, 66, 68, 74, 75, 82, 83, 84, 88, 89], "1e": [5, 15, 17, 21, 22, 28, 34, 39, 40, 41, 42, 43, 48, 66, 68, 76, 78, 88], "9": [5, 14, 15, 21, 26, 35, 37, 39, 51, 60, 65, 66, 68, 69, 75, 76, 77, 79, 83, 84, 85, 87, 88], "09": 5, "pure": [5, 7, 8, 11, 14, 15, 19, 21, 22, 35, 43, 47, 48, 65, 79], "zero": [5, 10, 11, 15, 19, 26, 27, 35, 43, 51, 54, 63, 65, 73, 75, 83, 87, 88], "\u03c1": [5, 21, 22], "two": [5, 6, 7, 11, 14, 15, 16, 19, 21, 22, 26, 29, 34, 35, 43, 46, 47, 48, 51, 54, 63, 64, 65, 66, 71, 74, 76, 79, 83, 88, 89], "omit": [5, 29, 50], "make_": [5, 60, 64, 89], "deriv": [5, 9, 21, 28, 54, 60, 61, 80], "shorthand": [5, 11, 19, 22, 64], "symmetricdist": [5, 14, 16, 17, 19, 21, 27, 48, 51, 52, 56, 64, 74, 79, 83], "verbos": [5, 21, 67], "control": [5, 47, 51, 52, 74, 75, 77], "contribut": [5, 11, 23, 29, 30, 32, 34, 35, 37, 39, 40, 41, 42, 48, 51, 55, 57, 65, 68, 72, 75, 76, 77, 78, 79, 82, 83, 89], "chang": [5, 11, 13, 17, 22, 25, 32, 35, 37, 39, 41, 43, 45, 48, 49, 51, 52, 54, 56, 59, 60, 64, 74, 75, 78, 83, 84], "absolut": [5, 19, 26, 27, 48, 51, 60, 63, 65, 83, 89], "l1": [5, 26, 52, 65, 80], "l2": [5, 17, 26, 27, 52, 65, 80], "order": [5, 7, 11, 15, 19, 22, 34, 48, 51, 63, 66, 68, 76, 78, 83, 85, 87, 89], "u": [5, 7, 9, 21, 25, 26, 28, 35, 49, 50, 51, 52, 57, 59, 61, 64, 67, 68, 69, 73, 75, 76, 82, 83, 88, 89, 91], "l1distanc": [5, 14, 16, 19, 20, 27, 52, 56, 64, 66, 83], "greatest": [5, 11, 15, 43, 48, 52, 54, 68, 77, 83, 88, 89], "microdata": [5, 9, 68, 70, 73, 77, 82, 87, 88], "influenc": [5, 33, 43, 48, 50, 51, 52, 66, 68, 76, 77, 83, 89], "scalar": [5, 19, 27, 39, 52, 83, 89], "insertdeletedist": [5, 14, 16, 19, 51, 52, 64], "hammingdist": [5, 16, 19, 52, 64], "changeonedist": [5, 16, 19, 52, 64, 83], "field": [6, 13, 30, 46, 59, 76], "ti": [6, 52], "eval": 6, "suppli": [6, 20, 25, 39, 88], "distance_in": 6, "distance_out": 6, "relat": [6, 17, 22, 46, 47, 48, 52, 54, 58, 61, 64, 78, 83, 89], "retriev": [6, 7, 15, 16, 17, 19, 34, 39, 42, 63, 73, 75, 87], "term": [6, 14, 17, 19, 22, 26, 27, 28, 34, 39, 48, 51, 52, 56, 64, 68, 69, 77, 79, 83, 89], "defin": [6, 14, 15, 17, 19, 21, 26, 28, 31, 32, 33, 46, 47, 48, 52, 63, 64, 65, 66, 69, 71, 79, 83, 89], "callback": [6, 14, 15, 19], "post": [6, 14, 28, 74, 83], "processor": 6, "criteria": [6, 32, 39], "These": [6, 8, 20, 22, 25, 27, 34, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 63, 64, 67, 75, 83, 87, 89], "invari": [6, 39, 75, 77, 78, 79], "necessari": [6, 17, 22, 27, 39, 43, 51, 54, 63, 68, 77, 80], "show": [6, 26, 34, 51, 61, 63, 65, 66, 69, 74, 75, 76, 80, 83, 85, 87, 88], "correct": [6, 14, 19, 24, 25, 28, 48, 49, 60, 63, 84, 88], "other": [6, 11, 17, 22, 31, 32, 35, 43, 46, 47, 48, 49, 50, 52, 54, 56, 59, 60, 61, 63, 64, 73, 75, 76, 77, 78, 80, 82, 83, 87, 90], "global": [6, 46, 48, 71, 75, 77], "state": [6, 21, 52, 82], "system": [6, 20, 25, 74, 83], "clock": 6, "reveal": [6, 9, 34, 52, 69, 79, 83], "elaps": 6, "escal": 6, "side": [6, 14, 17, 19, 25, 27, 34, 59], "channel": [6, 25, 27], "vulner": [6, 24, 25, 60], "direct": [6, 17, 50, 54, 60, 62, 82], "secondli": 6, "independ": [6, 19, 34, 39, 65, 74, 82], "except": [6, 14, 17, 19, 21, 23, 26, 34, 39, 41, 54, 55, 67, 68, 83], "both": [6, 11, 17, 19, 21, 34, 35, 39, 43, 46, 48, 51, 54, 60, 63, 64, 65, 69, 71, 75, 82, 83, 84, 87], "cancel": 6, "potenti": [6, 7, 11, 14, 19, 25, 34, 39, 47, 52, 66, 75, 79], "avoid": [6, 21, 39, 40, 41, 51, 68, 73, 76, 78], "transit": 6, "q": [6, 56, 87], "self": [6, 11, 17, 46, 63], "extern": [6, 63], "width": [7, 51, 65, 66], "arraydomain": 7, "seri": [7, 11, 17, 34, 39, 43, 52, 74, 88], "arrai": [7, 10, 14, 19, 28, 34, 56, 74, 87, 88], "unbound": [7, 19, 51, 52, 83, 89], "whether": [7, 10, 14, 15, 17, 27, 35, 54, 57, 59, 82], "atom": [7, 10, 17, 19, 20, 26, 49, 52, 56, 64], "max_weight": [7, 14], "bitvectordomain": [7, 14], "posit": [7, 19, 43, 51, 52, 54, 63, 74, 83, 87], "bit": [7, 14, 20, 48, 51, 52, 56, 63, 88, 91], "categori": [7, 14, 17, 19, 27, 28, 34, 50, 52, 66, 85], "categoricaldomain": 7, "time_unit": [7, 41], "time_zon": 7, "datetimedomain": 7, "zone": [7, 34], "found": [7, 11, 19, 26, 39, 60, 68, 77, 78, 82, 85, 89], "pola": 7, "timezon": 7, "One": [7, 14, 19, 39, 50, 63, 75, 76, 82, 83], "n": [7, 22, 28, 32, 35, 41, 50, 51, 52, 54, 63, 66, 68, 69, 79, 82, 84, 85, 87, 88], "correspond": [7, 8, 11, 13, 15, 17, 48, 64, 76, 77, 79], "nano": 7, "micro": 7, "millisecond": [7, 34, 42], "debug": [7, 15, 16, 17, 60, 63], "stringifi": [7, 15, 16], "enumdomain": 7, "kei": [7, 11, 14, 19, 27, 35, 39, 64, 65, 66, 68, 77, 78, 79, 84, 85], "hashmap": [7, 14, 19, 66], "val": [7, 17, 84], "membership": [7, 17, 86, 90], "d": [7, 14, 15, 16, 19, 26, 27, 28, 42, 43, 48, 52, 56, 59, 60, 64, 83, 87, 88], "identifi": [7, 11, 17, 47, 52, 61, 63, 87, 88], "userdomain": 7, "equal": [7, 14, 15, 16, 19, 22, 28, 48, 69, 88], "uniqu": [7, 11, 19, 26, 32, 61, 66, 75, 76, 88], "sound": [7, 63], "its": [7, 11, 19, 20, 21, 25, 34, 39, 41, 43, 47, 48, 50, 55, 56, 65, 74, 82, 83, 85, 89], "descript": [7, 14, 15, 16, 20, 22, 24, 59, 60, 76], "test": [7, 14, 59, 64, 68, 84, 87], "wildexprdomain": [7, 14, 19], "frame_domain": 7, "get_california_pums_path": [8, 9, 66, 68, 69, 84, 85], "get_france_lfs_path": [8, 9, 35, 37, 39, 40, 41, 42, 43, 65, 75, 76, 78], "array2_domain": [8, 10, 13, 74], "dpexpr": [8, 11, 38, 45], "lazygroupbyqueri": [8, 11], "dp_len": [8, 11], "decomposit": [8, 12, 73], "tool": [8, 9, 48, 61, 63, 81, 82, 89, 91], "yet": [8, 25, 42, 43, 63, 64, 75, 79], "bind": [8, 47, 60, 64, 82], "some": [8, 19, 25, 26, 28, 30, 39, 42, 45, 46, 47, 48, 52, 54, 56, 59, 60, 63, 64, 66, 67, 68, 69, 75, 82, 83, 84, 86, 89], "depend": [8, 15, 24, 25, 34, 39, 41, 45, 46, 48, 52, 56, 57, 60, 63, 65, 68, 69, 71, 75, 77, 78, 79], "namespac": [8, 11, 38, 45], "path": [9, 18, 55, 60, 63], "csv": [9, 52, 85, 87, 88], "pum": [9, 68, 87, 88], "file": [9, 19, 52, 60, 61, 63, 64, 87], "censu": [9, 14, 68, 76, 87, 88], "header": [9, 63], "row": [9, 10, 11, 13, 14, 22, 32, 34, 35, 36, 39, 40, 51, 52, 64, 68, 69, 74, 75, 76, 77, 78, 79, 83, 84, 87, 88, 89], "ag": [9, 11, 39, 40, 66, 68, 69, 76, 77, 84, 85, 88], "sex": [9, 35, 40, 66, 68, 69, 76, 77, 84, 85, 88], "educ": [9, 66, 68, 69, 82, 84, 85, 88, 91], "race": [9, 66, 68, 69, 84, 85], "incom": [9, 17, 45, 66, 68, 69, 82, 84, 85], "marri": [9, 66, 68, 69, 84, 85, 88], "eu": [9, 65], "labor": [9, 39, 65], "forc": [9, 39, 43, 75, 76, 77], "survei": [9, 28, 43, 75, 76, 77, 87, 88], "code": [9, 20, 21, 22, 25, 27, 29, 30, 31, 33, 34, 43, 46, 52, 56, 59, 60, 63, 64, 65, 66, 68, 71, 74, 75, 77, 83, 84, 85, 89], "develop": [9, 25, 59, 61, 62, 63, 77], "work": [9, 17, 25, 34, 37, 39, 43, 44, 47, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 67, 70, 73, 74, 75, 76, 78, 83, 84, 87, 89], "could": [9, 32, 33, 35, 46, 52, 56, 63, 64, 65, 68, 69, 73, 75, 76, 78, 79, 83, 84], "scientif": 9, "believ": [9, 84, 85], "would": [9, 34, 39, 48, 50, 52, 61, 68, 69, 75, 76, 77, 78, 83, 84, 85, 89], "good": [9, 77, 85], "inadvertantli": 9, "person": [9, 79, 83, 85], "To": [9, 11, 19, 21, 35, 45, 48, 51, 54, 60, 63, 64, 75, 78, 79, 80, 83, 87], "reduc": [9, 11, 18, 19, 35, 43, 51, 60, 65, 69, 75, 76], "download": 9, "tutori": [9, 13, 65, 74, 77], "ve": [9, 21, 22, 25, 56, 61, 64, 65, 68, 69, 71, 75, 83, 88, 89], "preprocess": [9, 22, 34, 35, 39, 46, 49, 52, 66, 69, 75, 76, 80, 84, 85], "singl": [9, 17, 21, 38, 39, 41, 51, 56, 59, 63, 65, 77, 79, 82, 83, 89], "countri": 9, "franc": [9, 75, 76, 77], "drop": [9, 19, 25, 35, 36, 51, 52, 75, 83], "unus": 9, "subset": [9, 19, 36, 38, 63, 69, 83, 88], "concaten": 9, "ll": [9, 14, 21, 22, 25, 28, 32, 35, 39, 40, 41, 45, 46, 47, 51, 52, 54, 59, 60, 64, 65, 68, 71, 73, 75, 76, 78, 79, 87, 88, 89], "present": [9, 27, 43, 74, 75, 76], "run": [9, 14, 17, 21, 23, 25, 28, 32, 39, 45, 54, 60, 64, 65, 68, 69, 71, 74, 83, 84, 87], "matter": [9, 50], "instal": [10, 11, 12, 13, 60, 71, 77], "pip": [10, 11, 12, 13, 60, 71, 77], "norm": [10, 13, 50, 65], "num_column": [10, 13, 73, 74], "dimension": [10, 43, 65, 87, 88], "liter": [10, 11, 17, 39, 56], "design": [10, 11, 47, 61, 75, 82, 91], "center": [10, 26, 83, 89], "region": [10, 54, 83], "assum": [10, 17, 19, 25, 34, 45, 46, 63, 64, 69, 75, 79, 83, 85, 87, 88], "runtimetypedescriptor": [10, 20, 26], "add": [11, 14, 19, 26, 34, 38, 43, 47, 51, 52, 60, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 78, 82, 83, 88], "datafram": [11, 14, 19, 26, 32, 34, 39, 44, 50, 51, 52, 65, 68, 69, 76, 77, 83, 84, 85, 87, 88], "expr": [11, 14, 19], "specif": [11, 20, 26, 34, 46, 47, 54, 60, 61, 63, 65, 75, 76, 77, 80, 83, 89], "here": [11, 17, 27, 46, 47, 55, 60, 61, 63, 68, 69, 75, 76, 79, 85, 88, 89], "mani": [11, 25, 28, 32, 35, 39, 40, 41, 43, 52, 54, 56, 59, 60, 61, 64, 65, 69, 75, 76, 77, 78, 83, 84, 87], "typic": [11, 28, 31, 33, 34, 45, 47, 48, 52, 54, 56, 63, 66, 70, 83, 89], "object": [11, 47, 53, 55, 65], "null": [11, 17, 19, 34, 36, 48, 52, 64, 66, 68, 75, 84, 87, 89], "shortcut": [11, 18], "exact": [11, 26, 69, 75, 83, 84, 85, 88, 89], "fill": [11, 19, 20, 21, 29, 51, 63, 68, 69, 75, 84], "known": [11, 14, 15, 19, 21, 25, 28, 47, 52, 66, 68, 75, 83, 85, 88], "visit": 11, "collect": [11, 14, 21, 28, 34, 35, 37, 39, 40, 41, 42, 43, 45, 52, 54, 55, 64, 65, 69, 75, 76, 77, 78, 83, 87], "u32": [11, 17, 20, 45, 56, 63], "ad": [11, 14, 35, 43, 50, 51, 52, 56, 59, 60, 61, 64, 65, 75, 78, 83, 84, 88], "three": [11, 17, 18, 21, 32, 34, 63, 64, 75, 76, 79, 88], "standard_devi": [11, 14, 26], "sqrt": [11, 14, 26, 43, 65, 87, 88], "mean": [11, 13, 15, 17, 19, 22, 26, 27, 34, 35, 39, 43, 47, 48, 50, 51, 52, 60, 64, 67, 69, 73, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89], "amount": [11, 43, 69, 76, 79, 83, 87, 88], "determin": [11, 14, 17, 21, 26, 28, 48, 51, 54, 64, 79, 87, 88, 89], "clip": [11, 17, 34, 54, 75, 76, 80, 83, 84, 87, 89], "denomin": [11, 69], "fill_nul": [11, 34, 37, 39, 45, 75, 76, 78], "config": 11, "float_precis": 11, "just": [11, 21, 23, 28, 32, 39, 43, 46, 50, 51, 54, 55, 59, 60, 68, 69, 71, 73, 75, 76, 77, 78, 83, 88], "prevent": [11, 23, 39, 75, 88], "doctest": 11, "separ": [11, 19, 27, 42, 49, 51, 52, 60, 66, 68, 75, 76, 84, 85], "ratio": [11, 69, 83], "median": [11, 14, 19, 35, 45, 74, 77], "calibr": [11, 14, 19, 43, 52, 68, 76, 79, 89, 91], "entropi": [11, 88], "quantil": [11, 14, 19, 35, 77, 79, 91], "much": [11, 34, 35, 39, 43, 48, 49, 68, 69, 75, 76, 83, 84, 87, 89], "10": [11, 14, 17, 21, 22, 23, 26, 31, 32, 34, 39, 41, 45, 47, 48, 49, 51, 52, 54, 55, 64, 65, 66, 69, 74, 75, 76, 77, 83, 87, 88, 89], "30": [11, 34, 43, 69, 76, 87], "40": [11, 39, 40, 42, 68, 69, 75, 78, 87, 88], "50": [11, 14, 32, 50, 68, 69, 76, 79, 84, 87], "60": [11, 39, 66, 69, 75, 78, 87, 88], "70": [11, 50, 69, 87], "80": [11, 39, 69, 75, 78, 87], "90": [11, 69, 87, 88], "i64": [11, 14, 20, 26, 56], "likelihood": [11, 54, 69], "closer": [11, 43, 64, 69], "n_uniqu": [11, 35, 75], "address": 11, "chosen": [11, 50, 52, 83, 91], "standard_dev": 11, "null_count": [11, 35, 75], "unknown": [11, 19, 27, 52, 66, 67, 70, 75, 79, 84], "consid": [11, 15, 20, 25, 28, 34, 39, 40, 48, 49, 51, 54, 63, 66, 68, 72, 76, 78, 82, 84, 85, 87, 88], "boolean": [11, 14, 17, 19, 28, 38, 44, 48, 54, 78, 87, 88], "nulliti": [11, 19, 34, 52], "choos": [11, 14, 19, 22, 27, 32, 43, 48, 50, 52, 57, 59, 63, 68, 74, 75, 79], "25": [11, 50, 65, 74, 75, 83], "quartil": [11, 75], "actual": [11, 26, 28, 39, 48, 54, 63, 65, 75, 84, 88], "impli": [11, 16, 17, 76, 78, 83], "sever": [11, 21, 22, 43, 49, 59, 63, 67, 75], "oper": [11, 25, 26, 38, 39, 44, 46, 47, 49, 51, 52, 71, 84], "due": [11, 19, 25, 48, 51, 54, 69, 75, 76, 84], "mimic": [11, 56, 63], "few": [11, 21, 53, 60, 68, 69, 74, 76, 77, 88], "predic": [11, 17, 36, 39, 40, 42, 48, 54, 63, 87, 88], "discard": [11, 76, 78], "relev": [11, 17, 25, 47, 89], "group_bi": [11, 14, 34, 35, 39, 40, 41, 42, 43, 65, 76, 78], "maintain_ord": 11, "named_bi": 11, "current": [11, 23, 25, 27, 28, 37, 41, 55, 66, 68, 71, 77, 78, 80, 83, 85], "join": [11, 58, 60, 65, 68, 76, 82, 85], "left_on": 11, "right_on": 11, "suffix": 11, "_right": 11, "join_nul": 11, "coalesc": 11, "allow_parallel": 11, "force_parallel": 11, "logic": [11, 63, 89], "named_expr": 11, "statement": [11, 18, 47, 80, 83, 84], "don": [11, 22, 25, 29, 32, 39, 45, 47, 48, 50, 51, 60, 63, 64, 65, 68, 69, 76, 83, 88, 89], "select_seq": 11, "sort": [11, 14, 28, 39, 40, 41, 42, 76, 78, 83], "more_bi": 11, "descend": 11, "nulls_last": 11, "multithread": 11, "denot": [11, 15, 26, 28, 48, 49, 56, 63, 68, 79, 83], "subtract": [11, 63], "95": [11, 14, 17, 26, 75, 76, 80, 87], "convict": 11, "dtype": [11, 14, 34, 39, 42], "ignor": [11, 13, 14, 22, 50, 51, 63, 64, 68, 69, 83, 85], "union": [11, 17, 20, 26, 77, 83], "attr": 11, "6": [11, 17, 21, 22, 28, 35, 39, 42, 43, 48, 65, 66, 68, 69, 75, 76, 85, 87, 88], "429605": 11, "interpret": [11, 60, 64, 69, 80, 83], "def": [11, 14, 17, 21, 28, 29, 31, 32, 33, 39, 50, 63, 65, 66, 68, 69, 73, 74, 83, 84, 87, 88], "interpret_accuraci": 11, "with_column": [11, 35, 39, 40, 41, 42, 65, 75, 76, 78], "with_columns_seq": 11, "with_kei": [11, 35, 39, 76], "explicit": [11, 17, 39, 64, 67, 77], "lgb_plan": 11, "lazygroupbi": 11, "agg": [11, 14, 34, 35, 39, 40, 41, 42, 43, 65, 76, 78], "named_agg": 11, "alias": 11, "public_info": [11, 14, 65, 75, 76, 78], "max_num_partit": [11, 76], "max_partition_contribut": [11, 43], "max_influenced_partit": 11, "describ": [11, 13, 14, 17, 19, 26, 28, 38, 46, 47, 48, 51, 56, 60, 65, 75, 76, 77, 78, 83, 84, 89], "what": [11, 29, 32, 45, 47, 48, 52, 56, 59, 61, 64, 68, 79, 83, 85, 88, 89, 90], "publicli": [11, 69, 79], "might": [11, 21, 48, 55, 63, 75, 84, 88], "find": [11, 15, 17, 19, 21, 28, 39, 48, 52, 53, 54, 61, 63, 66, 68, 74, 80, 81, 83, 84, 88, 89], "tabl": [11, 19, 26, 75, 76], "Be": [11, 48, 60, 68, 76, 79], "awar": [11, 25, 43, 59, 76, 82], "aspect": [11, 47, 63, 76], "mark": [11, 63, 64, 71, 76], "subject": [11, 17, 21, 25, 76, 83], "protect": [11, 21, 27, 35, 39, 47, 51, 69, 75, 76, 77, 79, 87, 91], "so": [11, 15, 19, 21, 22, 28, 30, 32, 35, 37, 39, 40, 41, 43, 48, 49, 50, 52, 54, 55, 56, 59, 60, 61, 64, 65, 68, 69, 75, 76, 78, 83, 84, 88, 89], "conserv": 11, "individu": [11, 14, 22, 27, 28, 32, 35, 37, 39, 41, 43, 48, 52, 54, 57, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 82, 83, 85, 87, 88, 89], "distinct": [11, 18, 19, 21, 83, 87], "significantli": [11, 43, 65, 75, 76, 79], "know": [11, 17, 21, 23, 25, 26, 28, 32, 45, 47, 61, 66, 67, 68, 69, 75, 76, 79, 82, 83, 84, 85, 87, 89], "veri": [11, 27, 29, 39, 43, 47, 50, 52, 64, 66, 67, 69, 75, 76, 83, 84, 87, 88, 89], "loos": 11, "total": [11, 14, 23, 28, 35, 48, 49, 50, 68, 75, 76, 77, 85, 87], "issu": [11, 25, 59, 77, 85], "paper": [11, 14, 19, 26, 47, 61], "widespread": [11, 19], "underestim": [11, 19, 51, 52, 69], "onc": [11, 17, 21, 22, 48, 56, 59, 60, 61, 71, 77, 87], "those": [11, 31, 33, 39, 59, 64, 75, 78, 87, 89], "evalu": [11, 14, 21, 46, 47, 48, 54, 64, 68, 84, 87, 88, 89], "against": [11, 19, 25, 27, 39, 51, 59, 66, 88], "repeatedli": [11, 69], "exhaust": [11, 21], "lazi": [11, 75, 76], "circumv": 11, "consum": [11, 69], "entir": [11, 19, 21, 22, 69, 79, 89], "alloc": [11, 73, 75, 76], "budget": [11, 17, 21, 23, 45, 54, 65, 66, 68, 69, 73, 75, 76, 79, 85, 87, 91], "remain": [11, 19, 25, 47, 51, 71, 76, 78], "advertis": [11, 89], "becaus": [11, 19, 21, 22, 23, 25, 26, 27, 28, 30, 31, 34, 39, 41, 43, 46, 47, 48, 49, 51, 52, 54, 60, 63, 64, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 83, 87], "ever": [11, 28, 31, 43, 75, 76, 78, 85], "analyst": [11, 21, 69, 84, 88], "observ": [11, 69, 75, 76, 83, 85], "extend": [11, 45, 63, 68, 85], "shuffl": [11, 74, 76, 87], "enabl": [11, 14, 17, 22, 24, 60, 63, 67, 71, 77], "pca": [12, 13, 70, 72, 79], "pcaepsilon": [12, 13], "make_private_pca": [12, 13], "scikit": [12, 13, 60, 73], "learn": [12, 13, 24, 56, 60, 65, 73], "organ": [12, 17, 60, 82], "follow": [12, 15, 17, 19, 22, 24, 25, 26, 27, 28, 29, 34, 35, 38, 39, 43, 48, 50, 51, 52, 56, 59, 60, 64, 65, 67, 71, 74, 75, 76, 79, 80, 83, 84, 85, 87, 89], "our": [13, 14, 18, 25, 26, 28, 32, 33, 59, 60, 63, 65, 68, 69, 74, 75, 77, 79, 83, 84, 85, 87, 88], "diffenti": 13, "row_norm": [13, 73], "n_sampl": [13, 73], "n_featur": [13, 73], "n_compon": [13, 73], "n_chang": 13, "whiten": 13, "wrapper": [13, 71], "try": [13, 20, 24, 26, 32, 34, 41, 43, 51, 54, 60, 68, 82], "importerror": 13, "detail": [13, 17, 21, 25, 26, 47, 48, 49, 52, 54, 60, 63, 75, 82, 84, 85, 90], "mirror": 13, "components_": [13, 73], "multipli": [13, 14, 19, 51, 52, 89], "squar": [13, 19, 26, 43, 74, 88], "root": [13, 21, 26, 60], "divid": [13, 49, 50, 52, 75, 76], "singular": 13, "uncorrel": 13, "compon": [13, 25, 47, 55, 59, 63, 73, 89], "wise": 13, "varianc": [13, 19, 49, 68, 69, 76, 79], "fit": [13, 73, 74], "model": [13, 22, 25, 27, 28, 31, 33, 46, 47, 49, 51, 65, 68, 70, 73], "train": 13, "eigval": 13, "eigvec": 13, "namedtupl": 13, "per": [13, 14, 28, 32, 43, 69, 77, 88], "alia": [13, 27, 35, 37, 56, 65, 75], "unit_epsilon": 13, "num_compon": 13, "right": [13, 15, 19, 32, 39, 40, 57, 59, 65, 76, 83], "clamp": [13, 14, 17, 19, 23, 29, 48, 55, 56, 68, 69, 79, 83, 84], "eigenvector": [13, 73], "vt": 13, "bitvec": 14, "frequenc": [14, 27], "k": [14, 17, 19, 26, 28, 48, 52, 54, 65, 66, 83, 87, 88, 89], "yfrac": 14, "frac": [14, 15, 28, 69, 83], "bitvector": 14, "flip": [14, 28, 87], "encod": [14, 34, 39, 55, 76], "total_limit": 14, "value_limit": 14, "size_factor": 14, "project": [14, 25, 57, 59, 60, 82, 87, 91], "spars": [14, 32], "o": [14, 50, 51, 52, 56, 60, 69], "process": [14, 21, 23, 24, 25, 26, 28, 34, 39, 48, 49, 50, 51, 61, 62, 64, 65, 67, 68, 69, 71, 73, 74, 79, 82, 83, 85, 89], "beta": [14, 74], "There": [14, 25, 26, 47, 48, 49, 52, 53, 54, 56, 60, 61, 64, 65, 69, 82, 83, 87], "memori": [14, 34, 52, 82], "trade": [14, 21, 61, 69], "off": [14, 21, 28, 39, 52, 61, 65, 69, 76, 77], "suffici": [14, 26, 48, 60, 66, 75], "larg": [14, 17, 26, 27, 39, 43, 50, 51, 54, 59, 63, 66, 68, 75, 76, 79, 83, 87, 88], "hash": [14, 63, 87, 88], "collis": 14, "alp21": 14, "low": [14, 64, 65, 69, 71, 82, 87], "optim": [14, 17, 32, 60, 74, 91], "fast": [14, 26, 74], "ab": [14, 19, 28, 65, 83], "2106": 14, "10068": 14, "ci": [14, 60, 61], "\u03b2": 14, "step": [14, 51, 54, 60, 74, 79], "qi": [14, 27], "inputmetr": [14, 26], "granular": [14, 32], "print": [14, 17, 21, 22, 23, 26, 28, 32, 49, 51, 55, 66, 68, 69, 73, 83, 84, 85, 87, 88, 89], "Or": [14, 48, 68], "readabl": 14, "restrict": [14, 17, 19, 39, 48, 51, 52, 63, 64, 89], "constant": [14, 17, 19, 27, 29, 31, 49, 51, 56, 63, 68, 69, 79, 84, 85, 88], "grs12": [14, 19, 26], "univers": [14, 19, 26, 71, 74, 91], "maxim": [14, 19, 26, 32, 83], "stanford": [14, 19, 26], "edu": [14, 19, 26, 87], "tim": [14, 19, 26], "priv": [14, 19, 26], "geometr": [14, 26, 91], "done": [14, 15, 26, 28, 89], "cks20": [14, 26], "2004": [14, 26, 75], "00010": [14, 26], "over": [14, 15, 19, 21, 26, 28, 37, 39, 43, 48, 51, 52, 64, 69, 75, 76, 77, 83, 84, 87], "1074": [14, 26], "propos": 14, "computation": 14, "effici": [14, 51, 52, 74], "looser": [14, 22, 31, 33, 68], "smallest": [14, 17, 47, 48, 54, 56, 64, 74, 76, 83], "tk": [14, 19, 27, 60], "tv": [14, 19, 27, 66], "exclud": [14, 34, 37, 54, 75, 77], "less": [14, 15, 19, 35, 36, 39, 43, 50, 54, 65, 66, 69, 71, 75, 76, 77, 79, 83, 85], "minimum": [14, 51, 60], "govern": [14, 22, 79, 82], "exprplan": 14, "neighbor": [14, 17, 19, 26, 27, 46, 47, 48, 51, 52, 66, 79, 89], "tune": [14, 81], "abl": [14, 21, 24, 39, 46, 60, 67, 75, 84], "tradeoff": [14, 49, 81], "insid": [14, 21, 61, 63, 64], "still": [14, 17, 21, 25, 26, 28, 29, 35, 48, 49, 50, 51, 54, 59, 63, 68, 69, 73, 76, 83, 84, 85, 87, 88, 89], "empti": [14, 20, 45, 75, 76], "imagin": [14, 32, 63, 84], "elementari": 14, "school": [14, 82], "pet": 14, "grade": 14, "pet_count": 14, "need": [14, 17, 18, 19, 22, 27, 39, 46, 47, 48, 50, 51, 52, 54, 55, 60, 61, 63, 64, 65, 68, 73, 74, 75, 78, 83, 85, 87, 88, 89], "lf_domain_with_margin": 14, "With": [14, 43, 65, 77], "place": [14, 20, 60, 61, 64, 88], "plugin": [14, 24, 32, 55, 60, 69, 74], "now": [14, 21, 22, 33, 43, 45, 50, 51, 60, 63, 64, 66, 68, 69, 74, 75, 76, 79, 83, 84, 85, 87, 89], "piec": [14, 22, 61, 64], "dp_sum_pets_by_grad": 14, "introduc": [14, 19, 47, 50, 54, 69, 75, 76, 80, 83, 89], "df": [14, 65, 68, 69, 76, 77, 84, 85], "from_record": [14, 69], "No": [14, 20, 77, 83], "kindergarten": 14, "grader": 14, "second": [14, 21, 35, 42, 48, 60, 63, 64, 68, 74, 83, 87], "chicken": 14, "orient": 14, "tighter": [14, 48, 69, 79, 85], "prob": [14, 28], "categor": [14, 19, 28, 39, 45, 52], "discretedist": [14, 16, 27, 28], "randomized_respons": [14, 28], "outcom": [14, 63, 66, 69, 75, 76, 82, 85], "num_categori": 14, "random_str": 14, "99": [14, 17, 39, 40, 75, 76, 77], "constant_tim": 14, "rappor": 14, "aggregat": 14, "preserv": [14, 21, 39, 47, 51, 65, 74, 75, 78, 91], "ordin": 14, "1407": 14, "6981": 14, "randomized_response_bitvec": 14, "bernoulli": 14, "sampler": [14, 26], "extrem": [14, 54, 76], "slow": 14, "m_rr": 14, "8006676684558611": 14, "formula": [14, 28, 69, 83], "ln": [14, 15, 28], "prepar": [14, 39, 42, 43, 70, 75, 76, 77], "packbit": 14, "array_equ": [14, 88], "8": [14, 15, 17, 21, 22, 26, 39, 48, 51, 54, 56, 66, 69, 74, 75, 76, 83, 84, 85, 87, 88, 89], "12": [14, 19, 20, 34, 39, 41, 66, 74, 75, 76, 83, 87, 88], "uint8": [14, 34], "roundtrip": 14, "mech": 14, "frombuff": 14, "tobyt": 14, "compar": [14, 47, 48, 66, 74, 83, 87, 88], "unpackbit": 14, "slower": 14, "random_bool": 14, "index": [14, 19, 68, 69, 74], "highest": [14, 17], "tia": [14, 19, 49, 50, 52, 56, 64], "usiz": [14, 19, 20, 50, 52, 74], "linfdist": [14, 16, 19, 74], "gumbel_max": 14, "higher": [14, 17, 48, 60, 65, 69, 74], "max": [14, 15, 17, 31, 32, 47, 48, 49, 51, 52, 63, 69, 74, 75, 79, 83, 89], "min": [14, 26, 51, 69, 74, 79, 83], "select_index": 14, "privacy_map": [14, 29, 31, 46, 64, 89], "everi": [14, 15, 19, 30, 48, 82, 83, 88], "pair": [14, 15, 19, 47, 48, 63, 68, 74, 83, 89], "associ": [14, 17, 19, 48, 51, 83, 84], "close": [14, 15, 17, 19, 46, 47, 48, 51, 63, 66, 69], "effect": [14, 19, 25, 34, 43, 51, 75, 82, 87, 88], "anydomain": 14, "anyobject": 14, "anymetr": 14, "anymeasur": 14, "const_funct": 14, "_arg": [14, 31], "42": [14, 68, 69, 87], "_d_in": 14, "user_measur": 14, "pm": 15, "quantifi": [15, 46, 68, 79], "smaller": [15, 19, 39, 43, 48, 63, 65, 68, 69, 75, 76], "product": [15, 59, 75, 87, 88], "cdot": [15, 26, 28, 49, 83, 89], "commonli": [15, 36, 43, 45, 48, 64, 76], "notion": [15, 47], "possibl": [15, 17, 25, 28, 46, 47, 48, 54, 59, 63, 64, 69, 76, 83, 85, 89], "whenev": 15, "choic": [15, 21, 26, 28, 51, 56, 59, 75, 79, 83, 87, 89], "exist": [15, 17, 19, 52, 61, 63, 66, 74, 76, 82, 87], "event": 15, "e": [15, 26, 28, 47, 60, 63, 65, 83, 84, 85, 89], "pr": [15, 59, 60, 63, 65, 83], "d_": [15, 28, 49, 51, 83, 89], "mathrm": [15, 28, 83], "_e": 15, "condit": [15, 35, 69, 89], "until": [15, 25, 50, 66, 69], "neg": [15, 16, 19, 28, 35, 51, 52, 54, 63, 79, 83], "smooth": [15, 26, 48], "d_infti": 15, "max_": [15, 83], "subseteq": [15, 83], "textrm": 15, "supp": [15, 83], "big": 15, "dfrac": 15, "leq": [15, 83], "profil": [15, 17, 22, 30, 68, 76], "monoton": [15, 16, 17, 19, 32, 51, 52, 54], "decreas": [15, 69, 76, 88], "reject": [15, 34, 37, 39], "ep": [15, 68, 88], "els": [15, 19, 20, 39, 85], "enough": [15, 47, 76], "satur": [15, 19, 51], "499": 15, "invert": [15, 74], "suitabl": [15, 21, 54, 76, 89], "insuffici": [15, 21], "infinit": [15, 16, 36, 63, 83, 84], "inf": [15, 39, 78], "r\u00e9nyi": 15, "rdp": 15, "infti": 15, "d_alpha": 15, "mathbb": [15, 83], "userdiverg": 15, "essenti": [15, 22, 35, 43, 63, 70, 77], "beyond": [15, 22], "meaning": [15, 29, 39, 40, 76, 78], "fuction": 16, "absolutedist": [16, 17, 19, 26, 27, 48, 52, 56, 64, 71, 83, 89], "l2distanc": [16, 17, 27, 52, 56, 83], "partitiondist": 16, "userdist": 16, "pseudo": [16, 59, 87, 88], "symmetri": 16, "le": [16, 83, 89], "triangl": [16, 83], "inequ": [16, 63], "program": [17, 24, 25, 46, 60, 63, 64, 65, 71, 83, 89, 91], "framework": [17, 23, 24, 25, 48, 63, 64, 67, 71, 79, 82, 89, 90], "top": [17, 24, 26, 87], "thei": [17, 20, 21, 22, 24, 25, 29, 33, 36, 43, 46, 47, 48, 50, 52, 60, 63, 64, 69, 74, 83, 85, 89], "alwai": [17, 29, 34, 39, 43, 47, 48, 54, 56, 61, 63, 65, 76, 84, 89], "lp_anydomain": 17, "section": [17, 19, 22, 26, 27, 48, 51, 52, 59, 60, 63, 64, 67, 68, 70, 74, 75, 76, 77, 78, 80, 81, 83, 84, 86, 89, 90], "lp_anyfunct": 17, "lp_anymeasur": 17, "interfac": [17, 20, 21, 25, 51, 60, 61, 63, 64, 82, 87, 88], "__call__": 17, "101": 17, "concis": [17, 89], "tran": [17, 33, 46], "similar": [17, 19, 39, 43, 48, 52, 60, 61, 63, 64, 65, 67, 69, 73, 74, 83, 87, 89], "integr": [17, 19, 26, 51, 59, 61, 63, 75, 76, 82, 83], "lp_anymetr": 17, "variant": [17, 41, 63], "messag": [17, 26, 49, 63, 64, 69], "gener": [17, 20, 25, 28, 43, 47, 52, 54, 58, 60, 63, 64, 65, 67, 69, 73, 75, 79, 80, 83, 84, 87, 88], "updat": [17, 21, 39, 45, 60, 63, 64, 85], "errorvari": 17, "stack": [17, 24, 59, 74, 88], "trace": [17, 24, 87], "give": [17, 24, 27, 47, 48, 49, 52, 54, 61, 64, 75, 83, 87, 88, 89], "vice": 17, "versa": 17, "query_typ": 17, "lp_anytransform": 17, "toa": [17, 19, 33, 50, 52, 64, 66, 68, 84, 85], "n2": 17, "n3": 17, "were": [17, 19, 22, 26, 46, 48, 51, 52, 54, 66, 75, 76, 77, 79, 83, 85, 88], "stabl": [17, 19, 27, 32, 35, 38, 46, 48, 50, 52, 61, 63, 64, 66, 69, 77, 83], "apart": [17, 39], "ouput": 17, "return_sign": 17, "decis": [17, 54], "boundari": [17, 54], "conduct": [17, 39, 54, 68, 69, 76, 87, 88], "exponenti": [17, 50, 91], "search": [17, 48, 53, 60, 68], "unari": 17, "awai": [17, 54, 69], "inferr": 17, "invalid": [17, 19, 54, 76, 78], "valueerror": [17, 20], "cannot": [17, 19, 20, 31, 33, 39, 40, 41, 43, 69, 76, 77, 78, 82, 83, 84], "remov": [17, 32, 34, 39, 41, 47, 48, 49, 51, 52, 59, 75, 76, 78, 79, 83, 89], "histogram": [17, 19, 27, 34, 56, 67, 70, 79, 83], "emit": [17, 22, 26, 38, 46, 47, 63, 68, 85, 89], "dp_mean": [17, 68, 69, 79, 84, 85], "5235561269546629": 17, "make_chain": 17, "tightli": [17, 48], "said": [17, 82], "complet": [17, 19, 21, 25, 26, 28, 49, 50, 51, 52, 57, 59, 61, 64, 71, 73, 88, 89], "parameter": [17, 56], "nearest": [17, 19, 26, 51, 63, 75, 88], "major": [17, 25, 82, 84], "pre": 17, "produc": [17, 22, 26, 47, 52, 63, 84, 89, 91], "doubl": [17, 26, 48, 56], "discrete_laplac": 17, "widest": 17, "admiss": 17, "10_000": [17, 26, 51, 73, 85], "ideal": [17, 19, 25, 48, 50, 63, 79], "make_fixed_laplac": 17, "polici": [17, 82], "research": [17, 25, 61, 77, 82], "accur": [17, 54, 65, 69, 88], "symmetr": [17, 19, 27, 47, 48, 51, 52, 74, 83, 89], "500": [17, 23, 50], "000": [17, 68, 77], "out": [17, 19, 20, 21, 25, 51, 54, 55, 60, 63, 64, 66, 68, 73, 74, 76, 83, 85, 87, 89], "necessary_scal": 17, "data_s": [17, 69, 84], "500_000": 17, "admit": [17, 28], "1000000": 17, "1498": 17, "dp_json": 17, "disallow": [17, 45], "binari": [17, 34, 39, 40, 48, 55, 60, 64, 68], "band": [17, 54], "Will": 17, "attempt": [17, 54, 60, 63, 64, 88], "recov": 17, "throw": [17, 39, 41, 48, 54, 64], "ok": [17, 63, 71], "li": 17, "dp_obj": [17, 55], "notebook": [18, 22, 26, 27, 47, 49, 50, 51, 52, 61, 63, 64, 65, 67, 68, 69, 73, 75, 80, 83, 84, 85, 87, 88, 89, 91], "begin": [18, 25, 28, 59, 63, 65, 82, 85], "after": [18, 19, 39, 50, 52, 60, 63, 64, 68, 71, 78, 83, 84, 85, 89], "Its": 18, "deterministicli": 19, "size_guess": [19, 50], "branching_factor": [19, 50], "minim": [19, 54, 65, 88], "cdf": [19, 83], "ari": [19, 52], "tree": 19, "qyl13": 19, "understand": [19, 25, 47, 48, 55, 65, 74, 82, 89, 90], "hierarch": 19, "www": 19, "vldb": 19, "pvldb": 19, "vol6": 19, "p1954": 19, "qardaji": 19, "guess": [19, 50, 52, 69], "leaf_count": [19, 50], "expand": [19, 30, 61], "branch": [19, 50], "children": [19, 50, 88], "ta": [19, 52, 56], "leaf": [19, 50], "node": [19, 50, 79], "factor": [19, 43, 50, 79, 84], "shallow": 19, "size_limit": [19, 51], "pairwis": [19, 51, 52], "advantag": [19, 35, 64, 67, 68, 87, 88], "better": [19, 43, 50, 60, 65, 75], "establish": [19, 39, 68, 69, 83, 84, 89], "summat": [19, 51, 52], "item": [19, 28, 55, 63, 66, 75], "f32": [19, 20, 26, 51, 52, 56, 63], "half": [19, 35, 87, 88], "precis": [19, 20, 26, 47, 48, 51, 56, 63, 65, 79, 83], "csvw22": 19, "2207": 19, "10635": 19, "dmns06": 19, "analysi": [19, 26, 28, 33, 43, 48, 51, 56, 65, 67, 69, 70, 73, 76, 77, 79, 84, 91], "peopl": [19, 61, 62, 65, 69, 76], "csail": 19, "mit": 19, "asmith": 19, "tcc": 19, "final": [19, 32, 50, 59, 64, 74, 76, 82], "keep": [19, 21, 34, 51, 68, 69, 74, 81, 83, 84, 87], "overflow": [19, 48, 51, 52, 54, 63, 75], "impos": 19, "overestim": [19, 69], "share": [19, 21, 34, 39, 46, 51, 52, 60, 68, 76, 83, 88], "sign": [19, 48, 51, 52, 54, 56, 57, 59, 63], "failur": [19, 45], "handl": [19, 28, 48, 52, 55, 59, 66, 68, 69, 75], "noisi": [19, 26, 28, 32, 50, 69, 75, 76, 83, 85, 89], "summari": [19, 52, 75, 76, 91], "cumul": [19, 50], "datum": [19, 52], "let": [19, 25, 43, 46, 47, 48, 63, 64, 65, 67, 68, 69, 71, 74, 75, 76, 82, 83, 88], "inclus": 19, "layer": [19, 84], "balanc": [19, 76], "implicitli": [19, 52, 64], "store": [19, 21, 34, 48, 63, 85], "breadth": 19, "leav": 19, "even": [19, 24, 31, 36, 39, 40, 43, 48, 51, 54, 60, 61, 68, 74, 75, 76, 82, 83], "adjust": [19, 22, 26, 28, 50, 51, 68, 75, 77, 87, 88], "apport": 19, "rel": [19, 35, 63, 65, 75, 76, 84, 87], "hrms09": 19, "boost": 19, "through": [19, 20, 25, 30, 47, 61, 67, 71, 76, 77, 82, 85, 89], "0904": 19, "0942": 19, "bv17": 19, "finit": [19, 26, 51, 83, 89, 91], "1709": 19, "05396": 19, "null_categori": [19, 50], "appear": [19, 34, 59, 64, 65], "end": [19, 23, 26, 28, 52, 59, 63, 64, 66, 69, 87], "col_nam": [19, 66, 68, 84, 85], "dataframedomain": [19, 64], "hashabl": [19, 52], "deprec": 19, "sinc": [19, 21, 22, 28, 34, 35, 36, 39, 43, 48, 49, 51, 54, 63, 64, 69, 75, 76, 77, 79, 83, 87, 88, 89], "version": [19, 25, 27, 55, 60, 63, 71, 77], "column_nam": 19, "imput": [19, 34, 45, 68, 69, 75, 76, 84], "edg": [19, 28, 39, 50, 52, 54, 79, 90], "bin": [19, 32, 39, 50, 52, 60, 76, 78], "increas": [19, 26, 37, 43, 47, 51, 52, 65, 69, 74, 76, 83, 85, 87, 88], "fall": 19, "infin": [19, 32, 63, 83], "ident": [19, 22, 63, 67], "warn": [19, 34, 39, 85], "won": [19, 32, 51, 65, 68, 75, 76], "chainabl": 19, "wherea": [19, 43, 48, 65, 78], "replac": [19, 50, 64, 68, 83, 84, 85], "uniformli": 19, "treat": [19, 56, 69], "manipul": [19, 20, 34, 38, 41, 42, 44, 45, 51, 85], "round": [19, 26, 51, 63, 66, 83, 84, 87, 88], "op": [19, 20, 39], "enforc": [19, 39, 40, 64, 68, 71, 76], "boundedmetr": 19, "unboundedmetr": 19, "unord": 19, "permut": 19, "orderedmetr": 19, "quantile_score_candid": 19, "bin_edg": 19, "interpol": [19, 50], "wa": [19, 22, 28, 48, 51, 68, 75, 76, 77, 82, 83, 85, 88], "befor": [19, 21, 28, 32, 33, 39, 44, 45, 46, 50, 52, 54, 57, 60, 61, 64, 65, 68, 69, 75, 76, 83, 88], "truncat": [19, 49, 51, 52, 54, 85], "downcast": 19, "load": [19, 32, 52, 55, 60, 66, 68, 86], "token": 19, "line": [19, 50, 60, 63, 64, 69, 76], "exprdomain": 19, "indicator_column": 19, "keep_column": 19, "deviat": 19, "ssd": 19, "unorderedmetr": 19, "stability_map": [19, 32, 33, 46, 64, 74], "runtim": [19, 26, 34], "ddof": 19, "dhk15": 19, "social": [19, 76], "scienc": [19, 74, 82], "hona": 19, "kr": 19, "doraziohonakerkingprivaci": 19, "degre": 19, "freedom": 19, "bridg": 20, "reli": [20, 24, 43, 55, 60], "secur": [20, 58, 60, 61, 76, 82], "natur": [20, 65, 88], "fine": [20, 75, 85], "grain": 20, "gap": [20, 26, 63], "normal": [20, 43, 74, 88], "public_exampl": 20, "py_object": 20, "recogn": [20, 63], "subtyp": 20, "type_nam": 20, "hint": [20, 61], "std": 20, "plaintext": 20, "depth": [20, 51, 56, 63], "_genericalia": [20, 26], "genericalia": [20, 26], "inherit": 20, "getitem": 20, "stdlib": 20, "throughout": [20, 39, 56, 75, 76], "particularli": [20, 40, 56, 61, 65], "unspecifi": 20, "u8": [20, 48, 56], "u16": [20, 56], "u64": [20, 56], "i8": [20, 56], "i16": [20, 56], "vet": [21, 24, 25, 26, 28, 49, 50, 51, 60, 63, 68, 71, 73, 85, 89], "opt": [21, 25, 26, 28, 49, 50, 51, 59, 68, 71, 73, 85, 89], "contact": [21, 26, 28, 49, 50, 51, 57, 62, 73, 89], "thank": [21, 26, 28, 49, 50, 51, 57, 73, 89], "count_mea": [21, 49], "sum_mea": 21, "notic": [21, 22, 26, 27, 34, 35, 48, 52, 63, 64, 68, 69, 75, 83, 85, 88, 89], "togeth": [21, 22, 43, 47, 48, 51, 52, 64, 68, 71, 74, 76, 83, 89], "batch": [21, 76], "mean_fraction_mea": 21, "int_dataset": 21, "7": [21, 26, 34, 35, 39, 40, 41, 42, 43, 48, 51, 66, 68, 69, 74, 75, 76, 78, 83, 85, 87, 88, 89], "dp_sum": [21, 49, 68, 89], "dp_count": [21, 49, 68, 69, 79], "simpli": [21, 26, 28, 39, 43, 48, 54, 69, 85, 89], "constitu": [21, 22, 47, 69], "relax": [21, 51, 65, 76], "view": [21, 24, 59, 79], "anoth": [21, 47, 48, 49, 51, 56, 61, 63, 64, 68, 76, 78, 83], "gain": [21, 43, 69], "discuss": [21, 22, 26, 27, 45, 48, 55, 65, 68, 75, 79, 83], "case": [21, 22, 26, 28, 30, 39, 43, 45, 48, 49, 51, 52, 54, 55, 59, 61, 63, 64, 65, 68, 69, 74, 75, 77, 79, 83, 85, 87, 89, 90], "explicitli": [21, 25, 26, 35, 43, 56, 64, 76, 79], "consumpt": [21, 89], "sc_mea": 21, "sc_queryabl": 21, "machin": [21, 65], "similarli": [21, 22, 26, 28, 50, 52, 54, 64, 68, 76, 83, 89], "sens": [21, 43, 63, 68, 83, 85], "adapt": 21, "vari": [21, 51, 60, 75, 77, 79, 84, 87, 88], "activ": [21, 60], "lock": 21, "freez": 21, "previous": [21, 83], "arriv": 21, "doesn": [21, 29, 39, 48, 51, 52, 54, 68, 78, 85, 87], "necessarili": [21, 48, 51, 83], "hold": [21, 48, 50, 51, 63, 83, 84, 89], "earlier": [21, 50, 69], "lift": [21, 34], "prove": [21, 30, 63, 83], "renyi": 21, "plain": 21, "old": [21, 39, 76, 77], "str_space": 21, "str_sc_mea": 21, "str_sc_queryabl": 21, "repeat": [21, 43], "mind": [21, 34, 43, 61, 68, 69, 76, 83, 87], "max_contribut": [21, 50, 89], "sum_tran": [21, 22, 51], "snip": [21, 31, 33, 63, 64], "adp_sc_query": 21, "\u03c1_1": 21, "\u03c1_2": 21, "scale_weight": 21, "w": [21, 87], "make_zcdp_sc": 21, "approxdp": [21, 22], "zcdp_compositor_scal": 21, "zcdp_compositor": 21, "child": [21, 77], "zcdp_sc_queryabl": 21, "rho_1": 21, "rho_2": 21, "0734": 21, "0146": 21, "make_zcdp_sum_queri": 21, "dg_scale": 21, "At": [21, 39, 60, 63, 87, 88], "becom": [21, 24, 26, 43, 51, 60, 63, 69, 75, 87], "adp_count_mea": 21, "adp": 21, "refus": 21, "failedfunct": 21, "conclus": 21, "chainer": [22, 48], "increment": 22, "longer": [22, 32, 60, 76, 78], "pipelin": [22, 52, 74], "stitch": 22, "make_chain_mm": 22, "onto": 22, "conform": [22, 29, 52, 83], "lap_mea": 22, "noisy_sum": 22, "investig": 22, "practic": [22, 29, 34, 48, 51, 71, 75, 77, 83, 85, 87, 89], "frequent": [22, 79], "written": [22, 43, 52, 63], "automat": [22, 39, 41, 43, 61, 64, 68, 83], "noisy_sum_mea": 22, "success": [22, 32, 59], "bounded_sum": [22, 48, 89], "base_dl": 22, "subtl": 22, "capabl": 22, "domainmismatch": 22, "github": [22, 58, 59, 60, 61, 68], "com": [22, 60, 68, 87, 88], "297": 22, "noisy_sum_tran": 22, "come": [22, 26, 54, 59, 68, 75, 77, 83, 87], "intend": [22, 25, 47, 52, 72, 75, 90], "further": [22, 26, 34, 43, 52, 65, 74, 76, 83, 87, 89], "preprocessor": [22, 68, 85], "fixedsmoothedmaxdiverg": 22, "thorough": [22, 48, 77, 89], "explan": [22, 52, 56, 64, 88], "meas_puredp": 22, "meas_fixed_approxdp": 22, "meas_zcdp": 22, "meas_approxdp": 22, "11": [22, 39, 41, 51, 66, 68, 69, 74, 75, 76, 83, 85, 87], "688596249354896": 22, "3861046488579": 22, "08": 22, "permiss": [22, 54, 56, 57, 64], "trust": [22, 31, 33, 68], "arbitrarili": [22, 68, 83], "standard": [22, 51, 69], "03": 22, "97": [22, 84, 87], "theoret": [22, 83, 84], "captur": [22, 26, 47, 48, 63, 83, 89], "had": [22, 48, 69, 77, 83], "4941": 22, "efficaci": 22, "improv": [22, 25, 43, 59, 74, 79], "rather": [23, 46, 59], "sum_queri": 23, "impute_const": [23, 79, 84], "dp_sum_queri": 23, "down": [24, 64, 69, 75, 76], "pictur": 24, "complement": 24, "bottom": [24, 60, 87], "edit": [24, 52, 60, 63], "cargo": [24, 60, 64, 71, 77], "toml": [24, 60, 71, 77], "adversari": [24, 60, 63, 75, 87, 88], "later": [24, 59, 60, 64, 68, 83], "someth": [24, 55, 60], "promis": [24, 26, 49, 60, 84, 89], "comprehens": [24, 60], "histori": [25, 63], "aim": 25, "commun": [25, 28, 30, 60, 61, 63, 69, 77, 82, 87, 88, 91], "trustworthi": 25, "alreadi": [25, 39, 44, 52, 60, 61, 63, 64, 68, 73, 75, 78, 79, 83, 88], "deploi": 25, "progress": 25, "impact": [25, 56, 75], "real": [25, 32, 45, 55, 67, 76, 77, 83, 87, 91], "arithmet": [25, 39, 51, 52, 63, 89], "common": [25, 34, 35, 39, 43, 52, 56, 60, 62, 65, 76, 79, 83], "literatur": [25, 69], "Their": 25, "discrep": 25, "ongo": [25, 84], "clearli": [25, 31, 75, 76], "distinguish": [25, 34, 83, 87], "ones": [25, 61], "concret": [25, 48, 64], "faithfulli": 25, "attack": [25, 61, 69, 90], "harden": 25, "thing": [25, 47, 60, 63], "cach": 25, "etc": [25, 52], "who": [25, 28, 61, 77, 85], "obtain": [25, 83, 84, 87, 88], "outsid": [25, 38, 51, 75, 87], "carefulli": [25, 52, 57, 63, 82], "implic": 25, "critic": [25, 48], "formal": 25, "undergo": [25, 60], "verifi": [25, 31, 33, 47], "characterist": [25, 46, 47], "involv": [25, 62, 63, 64, 65, 76], "mathemat": [25, 47, 48, 67, 82, 89], "underwai": [25, 68, 71, 85], "uncov": 25, "bug": [25, 58, 63], "flag": [25, 59, 60], "unvet": 25, "conceptu": [25, 47, 70, 82], "basi": [25, 31, 33], "foremost": 25, "among": [25, 27, 76, 83, 88], "concept": [25, 56, 64, 83], "prototyp": [25, 30, 82], "fulli": [25, 28], "flesh": 25, "roadmap": 25, "wait": [25, 68], "flux": 25, "lot": 25, "backward": 25, "incompat": [25, 60], "wai": [25, 34, 35, 43, 45, 46, 47, 48, 51, 52, 55, 59, 61, 63, 64, 76, 79, 81, 83, 84, 85], "flexibl": [25, 29, 46, 47, 71, 89], "evolv": 25, "appreci": 25, "feedback": [25, 59, 61], "offer": [25, 83], "across": [25, 75, 76, 77, 79], "strive": 25, "high": [25, 27, 47, 52, 65, 76, 82, 83, 84], "encount": [25, 48, 60, 61], "variat": [26, 35, 68, 75, 79, 83], "ubiquit": [26, 89], "ecosystem": [26, 89], "five": [26, 83, 89], "mu": [26, 65, 89], "importantli": [26, 89], "permit": [26, 28, 69, 89], "quantiti": [26, 35, 63, 69, 75, 89], "base_lap": [26, 89], "8418214435677124": 26, "analog": 26, "gauss": 26, "322023365796082": 26, "125": 26, "base_gauss": 26, "analogu": 26, "continu": [26, 63], "while": [26, 29, 31, 35, 37, 39, 41, 43, 47, 48, 50, 51, 52, 55, 59, 64, 69, 74, 75, 76, 83, 87], "base_discrete_lap": 26, "discretelaplac": 26, "base_discrete_gauss": 26, "discretegaussian": 26, "cover": [26, 35, 47, 51, 52, 78], "thu": [26, 63, 65, 69, 76, 83, 87, 89], "again": [26, 63, 68, 77], "base_lap_vec": 26, "wrong": 26, "often": [26, 48, 59, 83, 84], "page": [26, 38, 57, 60, 71, 89], "info": [26, 57, 58, 63, 76, 87, 89], "lt": [26, 51, 68, 88], "gt": [26, 40, 51, 68, 88], "249922018362259": 26, "5557446543831857": 26, "620935690993615": 26, "appropri": [26, 51, 65, 74, 77, 89], "lp": 26, "reflect": [26, 59], "relationship": [26, 47, 51, 65, 74, 83, 84, 88], "qo": [26, 56], "forwardref": 26, "39": [26, 60, 66, 68, 77, 85, 88], "latest": [26, 60, 63], "py": 26, "ref": 26, "rtype": 26, "calcul": [26, 47, 51, 65, 69, 74, 75, 84, 89], "base_gauss_vec": 26, "414": 26, "999698": 26, "By": [26, 46, 63, 65, 75, 77, 83, 87], "64": [26, 39, 48, 56], "32": [26, 48, 55, 56, 63, 66, 68], "ration": [26, 63], "represent": [26, 34, 39, 48, 51, 52, 63, 64], "therefor": [26, 39, 43, 45, 51, 52, 65, 68, 75, 76, 83, 89], "tight": [26, 75], "truli": [26, 75], "subnorm": 26, "faster": [26, 34, 60], "penalti": [26, 51], "subsequ": [26, 75], "plot": [26, 50, 51, 65, 66, 69, 74, 83, 85, 87, 88], "matplotlib": [26, 50, 65, 66, 69, 74, 83, 87, 88], "pyplot": [26, 50, 65, 66, 69, 74, 83, 87, 88], "plt": [26, 50, 65, 66, 69, 74, 83, 87, 88], "num_sampl": 26, "fig": [26, 66, 69], "ax": [26, 43, 66, 69, 85, 88], "subplot": [26, 69], "nrow": 26, "ncol": 26, "figsiz": [26, 65], "subplots_adjust": 26, "axi": [26, 69, 73, 74, 87, 88], "zip": [26, 28, 39, 69], "return_count": 26, "bar": [26, 51, 65, 66, 69, 76], "set_xtick": 26, "set_titl": 26, "set_ylabel": 26, "densiti": [26, 50, 65, 83], "suptitl": 26, "increasingli": 26, "approach": [26, 29, 47, 49, 50, 66, 75, 76, 85, 88, 89, 90], "penal": 26, "behavior": [26, 45, 47, 54, 61, 63, 69, 75, 78, 88], "1073": 26, "\u03b5_penalti": 26, "k_i": 26, "panda": [26, 32, 50, 51, 69, 84, 87, 88], "pd": [26, 32, 50, 51, 69, 84, 87, 88], "set_index": 26, "000000e": 26, "00": [26, 34, 77, 88], "940656e": 26, "324": 26, "888609e": 26, "31": [26, 66, 68, 85, 87], "01": [26, 41, 42, 75, 77], "overview": [27, 52, 60, 70, 91], "defint": 27, "exposit": [27, 68], "local": [27, 28, 55, 60, 71, 77], "meant": 28, "devic": [28, 79], "central": 28, "server": [28, 55, 60], "stronger": 28, "privileg": 28, "network": 28, "character": [28, 47, 63], "six": [28, 43, 89], "wedg": 28, "_bernoulli": 28, "rr_bool_mea": 28, "75": [28, 50, 74, 75, 87], "alice_survey_respons": 28, "0986": 28, "rr_mea": 28, "197": 28, "proport": [28, 43, 75], "respond": [28, 39, 43, 69, 76], "num_respons": 28, "true_prob": 28, "private_bool_respons": 28, "binomi": 28, "append": [28, 69, 85, 87, 88], "naive_proport": 28, "naiv": [28, 83], "bia": [28, 54, 69, 75, 76, 80, 88], "rr": 28, "unbias": [28, 69], "x_i": [28, 89], "y_i": 28, "texttt": [28, 63], "_bool": 28, "_mea": 28, "align": [28, 39, 40, 63, 74, 76, 78], "distil": 28, "debias_randomized_response_bool": 28, "mean_releas": [28, 68], "estimated_bool_proport": 28, "suffer": [28, 77], "private_cat_respons": 28, "counter": [28, 69, 83, 88], "naive_cat_proport": 28, "cat": [28, 79], "de": 28, "th": 28, "c_k": 28, "law": 28, "sum_": 28, "j": [28, 74, 85], "ne": [28, 40], "c_j": 28, "Then": [28, 51, 55, 60, 71, 83], "raw": [28, 50, 84, 87, 88], "pk": 28, "debias_randomized_respons": 28, "estimated_cat_proport": 28, "bias": [28, 69], "estimated_bool_count": 28, "estimated_cat_count": 28, "astyp": [28, 32, 74, 87, 88], "built": [29, 47, 60, 68, 69, 82], "almost": [29, 68], "own": [29, 30, 31, 32, 33, 51, 54, 55, 56, 59, 61, 62, 82, 83, 89, 91], "make_anything_const": 29, "36": [29, 35, 37, 39, 40, 41, 42, 43, 65, 68, 75, 76, 77, 78, 85], "anything_const": 29, "deni": [29, 31], "care": [29, 48, 68, 79, 89], "happili": 29, "make_int_const": 29, "int_const": 29, "drawback": [29, 39, 50], "hard": 29, "wide": 30, "itself": [30, 48, 52, 54, 60, 69], "machineri": 30, "usual": [30, 39, 64, 69, 77, 78], "easier": [30, 47, 49, 54, 59, 66, 71, 76, 83, 87], "idea": [30, 60, 89], "barrier": 30, "broader": [30, 87], "translat": [30, 43, 52, 64, 67, 84], "mock": [31, 33, 45, 89], "make_base_const": 31, "interchang": [31, 33, 52, 56], "incorpor": [31, 57, 69, 84], "world": [32, 67, 75, 91], "problem": [32, 54, 60, 61, 67, 87, 90], "yourself": [32, 57, 61, 75, 76], "look": [32, 43, 46, 48, 60, 61, 64, 68, 76, 82, 84, 87], "too": [32, 76], "uniform": [32, 73], "divers": 32, "On": [32, 48, 54, 59, 66, 69, 79, 82, 91], "appeal": 32, "report": [32, 58, 63], "gumbel": 32, "make_grouping_cols_scor": 32, "min_bin_contribut": 32, "assess": [32, 70], "rough": 32, "heurist": [32, 50, 54], "least": [32, 50, 63, 68, 74, 79, 84, 88, 91], "groupbi": [32, 88], "pandasdomain": 32, "make_select_grouping_col": 32, "min_bin_s": 32, "idx": 32, "row_count": 32, "col_count": 32, "private_data": 32, "too_uniform_": 32, "randint": [32, 79, 87, 88], "too_diverse_": 32, "just_right_": 32, "itertool": 32, "powerset": 32, "recip": 32, "duplic": [32, 33], "from_iter": 32, "m_select_gcol": 32, "89": 32, "dp_selected_grouping_column": 32, "make_repeat": 33, "mix": 33, "contigu": 34, "arrow": 34, "bitmap": 34, "lack": 34, "certain": [34, 41, 45, 75, 89], "simplest": [34, 75, 85], "uint32": [34, 39], "uint64": 34, "int8": 34, "int16": 34, "int64": 34, "uint16": 34, "acquir": 34, "although": [34, 45, 67], "lost": [34, 88], "upon": [34, 41], "float32": 34, "float64": [34, 74], "presenc": [34, 39, 43, 60], "fill_nan": [34, 39], "slowest": 34, "label": [34, 37, 39, 52, 63, 65, 66, 69, 74, 76, 83, 88], "to_phys": [34, 39], "unfortun": [34, 51, 75, 76, 83], "forbid": 34, "trigger": [34, 64], "remap": [34, 39], "accord": [34, 39, 43, 51, 52, 77, 89], "cut": [34, 63, 78], "latter": [34, 36], "context_categor": 34, "unreach": [34, 41], "err": [34, 41, 63, 68], "benefit": [34, 39, 43, 47], "never": [34, 48, 56, 64, 83], "enum_data": 34, "context_enum": 34, "alphalencatu32": 34, "quot": [34, 35, 39, 43, 60, 65, 75, 76, 78], "999": [34, 69], "1001": 34, "apach": 34, "kind": [34, 48, 50, 52, 54, 75, 76, 83], "date": [34, 39, 63, 76], "datetim": [34, 39, 42], "nanosecond": [34, 41, 42], "microsecond": [34, 42], "ingest": 34, "2000": [34, 69, 87], "hour": [34, 37, 39, 42, 75, 76, 77, 78], "2020": 34, "1500": 34, "2010": [34, 76], "timelentimeu3212": 34, "00100123": 34, "00100001": 34, "001001": 34, "dt": [34, 42], "tell": [35, 43, 48, 68, 82, 89], "recreat": [35, 75], "tabular": [35, 44, 70, 75], "introduct": [35, 63, 64, 70, 75, 90], "scan_csv": [35, 37, 39, 40, 41, 42, 43, 65, 75, 76, 78], "ignore_error": [35, 37, 39, 40, 41, 42, 43, 65, 75, 76, 78], "query_len_vari": 35, "hwusual": [35, 39, 40, 75, 76, 77, 78], "columnaggregatedistributionscalestrstrstrf64": [35, 39, 75, 76], "360": [35, 75], "detect": 35, "sexlenhwusuali64u32u32195762950472103723104234": 35, "unlik": [35, 39, 54], "query_n_uniqu": 35, "180": [35, 43, 75], "hwusualu320": 35, "unsign": [35, 48, 56, 63], "happen": [35, 52, 54, 85], "query_count": 35, "complementari": 35, "query_counts_via_group": 35, "is_nul": [35, 36], "hwusual_is_nul": 35, "hwusual_is_nulllenboolu32false197918true1297": 35, "is_not_nul": [36, 39], "is_finit": 36, "is_not_finit": 36, "is_nan": 36, "is_not_nan": 36, "four": [36, 46, 52, 64], "negat": 36, "not_": 36, "bitwis": 36, "simultan": [37, 88], "methodx": 37, "alphabet": 37, "joint": [37, 75, 87], "single_expr": 37, "abcd": 37, "split_expr": 37, "60_000_000": [37, 39, 40, 65, 75, 76, 78], "methodamethodbmethodcmethoddmethodei64i64i64i64i6417044841699390170288617032321705356": 37, "tempor": [38, 39, 41, 44, 45], "mixtur": [39, 40, 41, 76, 78], "correctli": [39, 69], "void": 39, "inexact": [39, 52, 89], "hundr": 39, "thousand": [39, 87], "domin": [39, 88], "843177": 39, "046991": 39, "14400": [39, 75], "insert": [39, 50], "anywher": 39, "broken": 39, "phase": 39, "break": [39, 63, 64, 76, 78], "98": [39, 76, 77, 78, 87], "hwusuallencatu32": [39, 78], "6312": 39, "54002": 39, "15422": 39, "119883": 39, "spend": [39, 69, 76], "cut_label": 39, "left_clos": 39, "bl": 39, "br": 39, "144": [39, 76], "146": 39, "6264": 39, "54011": 39, "15502": 39, "2282": 39, "334": 39, "120315": 39, "drop_nan": 39, "Not": [39, 65, 75, 77], "confus": [39, 61], "drop_nul": 39, "complic": [39, 50], "hwactual": 39, "mismatch": 39, "sure": [39, 60, 71], "retir": [39, 76], "year": [39, 41, 42, 43, 66, 76, 77], "65": [39, 84], "broadcast": 39, "filler": 39, "recod": [39, 77], "ilostat": [39, 65, 76, 77], "14112": 39, "shown": [39, 48, 64, 69, 75, 78, 83], "replace_strict": 39, "pickier": 39, "fallibl": [39, 63, 64, 71], "ilostat_label": 39, "pai": [39, 65, 76, 77], "profit": [39, 76, 77], "emploi": [39, 65, 76, 88], "unemploi": 39, "columnaggregatedistributionscalethresholdstrstrstrf64u32": 39, "02973": 39, "enum": [39, 63], "hwusuallenu32u3205451598425393931552742750506120155": 39, "conjunct": [40, 68], "comparison": [40, 75, 88], "link": [40, 48, 59, 60, 61, 63, 89], "and_": 40, "over_40": 40, "sexover_40leni64boolu321false180451true228832false158382true21500": 40, "to_dat": [41, 42], "to_datetim": 41, "to_tim": 41, "format": [41, 42, 45, 55, 63, 64, 69, 74, 84, 85], "yearlendateu322004": 41, "01165102005": 41, "01164482006": 41, "01161082007": 41, "01168022008": 41, "01167572009": 41, "01198462010": 41, "01240612011": 41, "01248422012": 41, "01248342013": 41, "0123316": 41, "lead": [41, 59, 63, 65, 69, 76, 88], "situat": [41, 48, 51, 52, 57, 68, 69, 87], "unstabl": 41, "reason": [41, 45, 46, 51, 54, 61, 64, 68, 75, 76, 77, 83, 84, 85], "lf_date": 42, "concat_str": 42, "refyear": 42, "quarter": [42, 43, 75, 76, 77], "lit": 42, "iso_year": 42, "month": [42, 77, 79], "week": [42, 77], "weekdai": 42, "dai": 42, "ordinal_dai": 42, "minut": 42, "seen": [42, 64, 76], "yearmonthleni32i8u322004342092004641792004941232004124061200534136": 42, "hellip": 42, "20121264242013363002013659052013956182013125702": 42, "easili": [43, 85], "switch": 43, "labour": [43, 75, 76, 77], "perturb": [43, 48, 52, 54, 75, 83], "query_num_respons": [43, 75], "columnaggregatedistributionscaleaccuracystrstrstrf64f64": [43, 75, 76], "0354": 43, "long": [43, 48, 52, 61], "isn": [43, 63, 75, 87], "simplifi": [43, 51], "weaker": 43, "afford": [43, 79], "l_1": 43, "l_2": 43, "euclidean": [43, 65], "along": [43, 54], "taxicab": 43, "intuit": [43, 51, 68, 83, 87], "travel": 43, "corner": 43, "crow": 43, "fli": 43, "opposit": 43, "grow": [43, 51], "slowli": 43, "v": [43, 44, 51, 60, 64, 66, 83], "worst": [43, 51, 52, 75, 79], "hide": [43, 82, 85], "attract": 43, "occur": [43, 60, 73], "quarterli": [43, 76, 77], "cadenc": [43, 77], "littl": [43, 51, 75], "knowledg": [43, 52, 68, 75, 79, 83], "context_margin": 43, "columnaggregatedistributionscaleaccuracythresholdstrstrstrf64f64u32": [43, 76], "060": 43, "0184": 43, "contrast": [43, 46, 60, 69, 88], "made": [43, 48, 54, 59, 60, 68, 75, 83, 85], "01133": 43, "fold": 43, "reduct": 43, "dimens": [43, 65], "explain": [43, 48, 50, 60, 67, 75, 78], "haven": 44, "review": [44, 56, 59, 82], "dive": [44, 51, 89], "materi": [44, 91], "think": [45, 63, 83], "realiti": 45, "somewhat": [45, 80], "mandatori": 45, "focus": [46, 59], "regardless": [46, 76], "arrang": 46, "determinist": [46, 47, 83], "sai": [46, 48, 51, 61, 83, 84, 85], "snippet": [46, 71, 80], "familiar": [46, 52, 56, 61, 63, 64, 75, 83, 85], "talk": [46, 61], "assembl": 47, "highli": [47, 79], "softwar": [47, 59], "faith": 47, "rigor": [47, 82, 83], "highlight": [47, 64], "acquaint": [47, 75], "motiv": [47, 87, 88], "encourag": 47, "illustr": [47, 65, 79, 83], "safe": [47, 51, 54], "g": [47, 84], "constrain": [47, 64], "glue": 47, "everyth": [47, 60], "possibli": [47, 64], "interdepend": 47, "programm": 47, "greatli": 47, "whole": [47, 75], "straightforward": 48, "f64_atom_domain": 48, "127": 48, "i32_bounded_domain": 48, "bool_vector_domain": 48, "bool_vector_2_domain": 48, "serv": [48, 74], "cap": 48, "fewest": 48, "bundl": 48, "midwai": 48, "effort": [48, 61, 82], "provabl": 48, "put": [48, 68], "clamper": [48, 52], "in_symmetric_dist": 48, "reus": [48, 68, 75, 76], "treatment": 48, "d_x": 48, "d_y": 48, "whatev": [48, 60, 68], "epsilon_1": 48, "delta_1": 48, "incompar": 48, "epsilon_2": 48, "delta_2": 48, "neither": [48, 77], "nor": [48, 77], "tightest": [48, 54, 66], "speak": [48, 52, 54, 79, 83, 88], "surpris": 48, "bisect": 48, "sb_mean_tran": 49, "divis": [49, 69], "0000000000000169": 49, "particular": [49, 52, 56, 64, 65, 77, 82, 87, 89], "ten": 49, "resiz": [49, 68, 79, 84], "mean_mea": 49, "dp_fraction_mea": 49, "goe": [49, 59, 89], "techniqu": [50, 65, 75, 87, 88], "129": 50, "best": [50, 52, 59, 65, 71, 74, 75, 82], "seaborn": [50, 65, 69, 85], "sn": [50, 65, 69, 85], "displot": 50, "kde": [50, 85], "130": 50, "true_quantil": 50, "tolist": [50, 69], "342567934782284": 50, "46163987459231": 50, "27": 50, "466767771051295": 50, "131": 50, "procedur": [50, 54, 69, 84], "land": 50, "scan": 50, "quart_alpha": 50, "make_hist_quantil": 50, "num_bin": 50, "linspac": [50, 65, 74], "num": [50, 65], "bin_nam": 50, "make_from_scal": 50, "realli": [50, 55], "hist_quartiles_mea": 50, "33": [50, 66, 68], "411111111111111": 50, "29": [50, 87], "875": 50, "difficult": 50, "fewer": [50, 52, 68, 69, 84], "reach": [50, 51, 55, 73], "wider": 50, "slightli": [50, 51, 52, 76, 77, 83], "tend": [50, 54, 75], "recurs": [50, 55], "parent": 50, "modif": [50, 69], "log_b": 50, "magnitud": [50, 51, 52, 54, 63, 76], "hyperparamet": 50, "133": 50, "1_500": 50, "lipschitz": 50, "134": 50, "make_tree_quantil": 50, "tree_quartiles_mea": 50, "0371403927139795": 50, "146207218782838": 50, "26": 50, "037387422664267": 50, "mention": [50, 63, 79], "135": 50, "average_error": 50, "num_trial": [50, 87, 88], "hist_quantiles_mea": 50, "tree_quantiles_mea": 50, "sample_error": 50, "linalg": [50, 88], "hist_err": 50, "tree_err": 50, "nb": 50, "250": 50, "750": 50, "1_000": [50, 69, 74, 84, 85], "3_000": 50, "minor": 50, "visual": [50, 51, 69, 76, 88], "136": 50, "make_distribution_count": 50, "hist": 50, "xlabel": [50, 65, 66, 69, 74, 83, 85, 87, 88], "ylabel": [50, 51, 65, 66, 69, 74, 83, 87, 88], "deep": [51, 56, 91], "easi": [51, 56, 63, 73, 82], "widen": 51, "shift": [51, 54, 74, 83], "regim": [51, 54], "stair": 51, "titl": [51, 59, 63, 65, 66, 74, 87, 88], "sized_bounded_sum": 51, "ieee": 51, "754": 51, "00000000004426": 51, "hit": 51, "snag": 51, "million": [51, 75], "caus": [51, 52], "regress": [51, 61, 91], "degrad": 51, "00000009313226": 51, "unchang": 51, "save": 51, "unaffect": 51, "bake": 51, "00000000000295": 51, "isol": 51, "10_000_000": 51, "log_2": [51, 52], "abil": 51, "sqlite": 51, "mysql": 51, "exhibit": [51, 88], "akin": 51, "bewar": 51, "quickli": [51, 88], "strategi": [51, 52, 76], "0x107fd06d0": 51, "moment": [51, 59], "18": [51, 66, 75, 87, 88], "1234": 51, "0x133763240": 51, "compromis": 52, "codebook": [52, 76], "expertis": 52, "proper": [52, 57, 76], "peek": 52, "caster": [52, 68, 85], "tricki": 52, "manner": 52, "propag": 52, "fed": 52, "bypass": 52, "da": 52, "relabel": 52, "word": [52, 59, 64, 83], "finder": 52, "binner": 52, "15": [52, 66, 75, 76, 77, 83, 87], "indici": 52, "2342": 52, "2k": 52, "sizeddomain": 52, "target": [52, 54, 60, 69, 75, 80, 85, 88], "taken": 52, "downstream": 52, "Such": [52, 87], "substitut": [52, 60], "make_sized_bounded_covari": 52, "loader": 52, "deeper": 52, "addition": [52, 75], "mantissa": 52, "manag": 53, "aid": 54, "primari": [54, 65], "secondari": 54, "oftentim": 54, "act": 54, "power": [54, 74, 87], "7071067811865477": 54, "unnecessari": 54, "largest": 54, "414213562373095": 54, "353553389770093": 54, "locat": [54, 60, 61], "unkown": 54, "thrown": 54, "eight": 54, "16": [54, 56, 75], "logarithm": 54, "explor": [54, 82, 84, 89], "offset": 54, "cross": 54, "intersect": 54, "luckili": [54, 68], "outright": 54, "malform": 54, "claim": [54, 59, 61], "perhap": [55, 85], "remot": [55, 82], "client": [55, 60], "dummi": 55, "new_context": 55, "new_queri": 55, "overridden": 55, "opendp_polars_lib_path": [55, 60], "environ": [55, 62, 63, 64, 71], "special": [55, 65, 89], "serialized_measur": 55, "fact": [55, 56, 75, 77], "serialized_domain": 55, "new_domain": 55, "__function__": 55, "json": 55, "discourag": 55, "serializ": 55, "trivial_user_domain": 55, "strict": 56, "implicit": [56, 63], "canon": [56, 84], "annot": [56, 64], "pattern": [56, 60, 71, 83], "modifi": 56, "i128": 56, "u128": 56, "docstr": [56, 61, 68], "aren": 56, "submiss": 57, "compani": [57, 79], "instruct": [57, 59], "question": [57, 61, 63, 64, 84], "cla": 57, "behalf": 57, "request": [58, 60, 63, 76, 77], "send": [58, 64], "email": 58, "slack": [58, 73], "mail": 58, "anticip": [59, 60, 85], "bot": [59, 63], "autom": 59, "verif": 59, "statu": [59, 65, 69, 76, 77, 88], "tag": 59, "head": 59, "codebas": 59, "fork": [59, 60], "short": [59, 64, 91], "verb": 59, "123": [59, 71, 87], "typo": 59, "readm": [59, 60], "retitl": 59, "script": [59, 60], "changelog": 59, "open": [59, 60, 61], "sometim": [59, 66, 69], "backlog": 59, "narrowli": 59, "But": [59, 65], "bigger": 59, "prerequisit": 59, "obviou": 59, "cours": [59, 91], "straight": 59, "main": [59, 71, 77, 87, 88], "partner": 59, "experi": [59, 60, 79], "graphit": 59, "team": 59, "engin": 59, "regular": 59, "disabl": [59, 88], "confirm": 59, "patient": 59, "credit": [59, 76], "crate": [59, 60, 63], "io": 59, "pypi": [59, 71], "task": 60, "tackl": [60, 61], "languag": [60, 63], "repositori": [60, 63], "directori": [60, 63, 71], "git": [60, 63], "cd": 60, "ssh": 60, "toolchain": 60, "rustup": 60, "subdirectori": 60, "compil": [60, 63, 64, 71], "platform": [60, 82], "untrust": 60, "foreign": 60, "then_": [60, 68, 89], "openssl": 60, "mode": 60, "opendp_test_releas": 60, "loop": 60, "regener": 60, "virtual": 60, "conda": 60, "python3": 60, "venv": 60, "dev": [60, 71], "txt": 60, "command": [60, 64], "reinstal": 60, "folder": [60, 64], "restart": [60, 64], "kernel": [60, 64], "oserror": 60, "dlopen": 60, "mach": 60, "architectur": 60, "rustc": 60, "vv": 60, "mac": 60, "m1": 60, "x86_64": 60, "suit": [60, 65], "pytest": [60, 61], "gone": 60, "bunch": 60, "57": [60, 87], "02": [60, 87], "forget": 60, "quick": [60, 64, 68, 70, 88], "websit": 60, "sphinx": [60, 61], "export": 60, "opendp_lib_dir": 60, "realpath": 60, "maco": 60, "gui": 60, "tcl": 60, "smoothest": 60, "brew": 60, "harfbuzz": 60, "fribidi": 60, "libgit2": 60, "xquartz": 60, "devtool": 60, "rcpptoml": 60, "lintr": 60, "load_al": 60, "recompil": 60, "r_stage": 60, "sh": 60, "amp": 60, "rscript": 60, "restor": 60, "manual": 60, "cmd": 60, "opendp_": 60, "tar": 60, "gz": 60, "cran": 60, "roxygen": 60, "man": 60, "comment": [60, 61, 64, 76], "pkgdown": 60, "render": [60, 78], "md": 60, "latex": 60, "templat": 60, "precondit": 60, "pseudocod": 60, "postcondit": 60, "workflow": [60, 70, 74], "overrid": 60, "stale": 60, "_lib": 60, "lib_path": 60, "opendp_headless": 60, "opendp_sphinx_port": 60, "opendp_sphinx_uri": 60, "host": 60, "uri": 60, "port": 60, "localhost": 60, "site": [60, 61, 63], "opendp_rustdoc_port": 60, "opendp_rustdoc_uri": 60, "rustdoc": [60, 61, 63], "intellij": 60, "sublim": 60, "comfort": 60, "panel": 60, "live": 60, "workshop": [60, 63], "cp": 60, "vscode": [60, 63], "codewithm": 60, "attach": 60, "red": [60, 69, 74], "banner": 60, "welcom": 61, "guidelin": 61, "usabl": 61, "opportun": 61, "invest": 61, "chanc": 61, "connect": 61, "board": 61, "ask": [61, 64], "clarifi": 61, "revis": 61, "ownership": 61, "embed": 61, "benchmark": 61, "stochast": 61, "tester": 61, "ey": 61, "great": [61, 64, 68], "toward": [62, 63, 68, 69, 83], "focu": [62, 71], "consult": 62, "contributor": 62, "licens": 62, "agreement": 62, "goal": 63, "bodi": [63, 64], "trait": [63, 64], "themselv": 63, "proven": [63, 83], "hoar": 63, "tripl": 63, "esqu": 63, "exploit": 63, "sharpli": 63, "argu": 63, "macro": [63, 64], "infsub": 63, "alertingab": 63, "inf_sub": 63, "alerting_ab": 63, "exactli": [63, 84, 85], "backtrac": 63, "exit": 63, "derefer": 63, "clone": [63, 64], "tex": 63, "documentclass": 63, "articl": 63, "overleaf": 63, "lib": 63, "sty": 63, "boilerpl": [63, 66], "_distanc": 63, "author": [63, 82, 91], "maketitl": 63, "asofcommit": 63, "f5bb719": 63, "vettingpr": 63, "519": 63, "dot": [63, 69, 87, 88], "commit_hash": 63, "commit": [63, 64, 75], "log": [63, 83, 87], "pretti": 63, "h": 63, "proofwrit": 63, "footnot": 63, "permalink": 63, "pr_number": 63, "pull": [63, 68, 76], "docsr": 63, "validtransform": 63, "input_argu": 63, "function_nam": 63, "validmeasur": 63, "shell": 63, "escap": 63, "pdflatex": 63, "synctex": 63, "nonstopmod": 63, "aux": 63, "advic": 63, "artifact": 63, "intent": [63, 68, 89], "1i32": 63, "2i32": 63, "bignum": 63, "strictli": [63, 64], "lstlist": 63, "escapechar": 63, "leverag": [63, 87, 88], "met": 63, "trivial": [63, 83, 84, 87], "text": 63, "stuck": 63, "abus": 63, "widget": 63, "book": 64, "surfac": 64, "default_cast_tran": 64, "struct": 64, "chapter": [64, 65], "pub": [64, 88], "stabilitymap": 64, "partialeq": 64, "closur": 64, "456": 64, "ship": 64, "behav": 64, "did": [64, 76, 77, 84, 85], "compat": [64, 77, 89], "ultim": [64, 71], "input_domain_1": 64, "output_domain_1": 64, "input_domain_2": 64, "output_domain_2": 64, "function_1": 64, "function_2": 64, "input_metric_1": 64, "output_metric_1": 64, "input_metric_2": 64, "output_metric_2": 64, "stability_map_1": 64, "stability_map_2": 64, "prefix": 64, "checknul": 64, "roundcast": 64, "datasetmetr": 64, "metricspac": 64, "move": [64, 69, 78, 83, 84], "round_cast": 64, "unwrap_or_default": 64, "new_from_const": 64, "signatur": 64, "colon": 64, "claus": 64, "cloneabl": 64, "anonym": 64, "privacymap": 64, "carri": [64, 83], "properli": 64, "button": 64, "gitignor": 64, "scratch": 64, "decor": 64, "bootstrap": 64, "hesit": 64, "room": 64, "accompani": 64, "plai": 64, "nice": 64, "rustfmt": 64, "meaningfulli": 64, "set_them": 65, "style": 65, "darkgrid": 65, "glanc": 65, "graph": [65, 76, 79, 83, 85, 87], "empir": [65, 84, 85], "laplace_pdf": 65, "exp": 65, "gaussian_pdf": 65, "pi": 65, "cont_support": 65, "legend": [65, 66, 69, 74, 76, 83, 88], "methodologi": 65, "diagram": 65, "lighter": 65, "tail": 65, "strong": 65, "multidimension": 65, "crucial": [65, 83], "averag": [65, 69, 75, 85, 88], "exchang": 65, "labor_status_cod": 65, "na": 65, "laid": 65, "actual_valu": 65, "map_el": 65, "ilostatactualstru32": 65, "76009": 65, "36085": 65, "bu": 65, "8057": 65, "pa": 65, "79849": 65, "rememb": [65, 74, 76, 89], "laplace_valu": 65, "ilostatlaplac": 65, "noisestru32": 65, "76064": 65, "35799": 65, "79765": 65, "8118": 65, "todo": 65, "fuller": 65, "gaussian_valu": 65, "ilostatgaussian": 65, "36130": 65, "75911": 65, "79944": 65, "8055": 65, "noise_valu": 65, "all_valu": 65, "ilostatactuallaplac": 65, "noisegaussian": 65, "noisestru32u32u32": 65, "360853579936130": 65, "760097606475911": 65, "798497976579944": 65, "805781188055": 65, "bar_width": 65, "r1": 65, "to_list": 65, "r2": 65, "r3": 65, "chart": 65, "figur": [65, 66, 87], "color": [65, 69, 74], "tab": 65, "blue": [65, 69, 74, 83], "edgecolor": [65, 85], "grei": 65, "orang": [65, 83], "green": 65, "fontweight": 65, "bold": 65, "xtick": 65, "rotat": 65, "45": [65, 68, 69], "tight_layout": 65, "quit": [65, 75, 84], "accomplish": [65, 76], "block": [66, 83], "max_influ": [66, 68, 85, 88], "read_text": [66, 68, 84, 85], "plot_histogram": 66, "sensitive_count": 66, "released_count": 66, "ticker": 66, "add_ax": 66, "ylim": [66, 87], "225": 66, "tick_spac": 66, "xaxi": 66, "set_major_loc": 66, "multipleloc": 66, "xlim": 66, "noisy_histogram": 66, "14": [66, 75, 76, 83, 87], "38": [66, 68, 69], "17": [66, 75], "24": 66, "21": [66, 83, 87, 88], "51": [66, 68, 87], "201": 66, "165": 66, "76": 66, "178": 66, "54": [66, 68, 85], "34": [66, 68, 76, 85], "22": [66, 83, 88], "59": [66, 68, 85], "166": 66, "make_laplace_threshold_budget": 66, "1e8": 66, "postprocessed_count": 66, "as_arrai": 66, "160": 66, "56": [66, 88], "77": 66, "introductori": 67, "solut": [67, 69, 88], "focuss": 67, "nearli": [67, 75, 88], "smartnois": [67, 82], "sql": [67, 82], "synthes": 67, "synthet": [67, 82], "dpcreator": 67, "web": 67, "app": 67, "brief": 68, "bureau": [68, 76, 87, 88], "demograph": 68, "age_bound": [68, 69, 84], "income_bound": [68, 85], "150_000": 68, "examin": [68, 76, 85], "grab": 68, "income_preprocessor": [68, 85], "sake": 68, "35": [68, 75], "17000": [68, 85], "9100": [68, 85], "37000": [68, 85], "strip": 68, "cast_str_int": 68, "asid": [68, 83], "anyth": 68, "suppos": 68, "NOT": [68, 83], "count_respons": 68, "realist": [68, 84], "41": [68, 76, 87], "count_releas": [68, 85], "bounded_income_sum": 68, "told": 68, "my": 68, "43": [68, 69, 87], "discovered_scal": 68, "succinctli": 68, "44": [68, 87], "30633527": 68, "mean_age_preprocessor": 68, "startswith": 68, "298": 68, "float_age_bound": 68, "dp_varianc": 68, "154334857855616": 68, "pareto": 68, "49": [68, 87], "app_dp_vari": 68, "6194085342284823": 68, "fixed_app_dp_vari": 68, "07": 68, "make_dp_vari": 68, "dp_var": 68, "dp_variance_lte_budget": 68, "lte": 68, "52": [68, 87], "30419934": 68, "75968544038662": 68, "53": [68, 87], "1000000000004568": 68, "100_000": [68, 73, 85], "017036863236176553": 68, "leak": [69, 75, 91], "rare": [69, 85], "diseas": 69, "var_nam": [69, 84], "120": 69, "age_prior": 69, "genfromtxt": 69, "delimit": 69, "briefli": 69, "48": [69, 83, 87], "41546783313125": 69, "truthfulli": 69, "ballpark": 69, "dp_count_releas": 69, "make_mean_measur": 69, "target_s": 69, "dp_mean_releas": 69, "518070978540095": 69, "moreov": 69, "wherebi": 69, "went": 69, "therebi": 69, "intention": 69, "receiv": 69, "lower_n": 69, "200": [69, 77, 87], "real_n": 69, "higher_n": 69, "81880656946988": 69, "49853735856283": 69, "50278188564646": 69, "simul": [69, 84, 85, 86], "helper": 69, "functool": [69, 87], "lru_cach": [69, 87], "maxsiz": [69, 87], "make_count_with": 69, "10000": [69, 73], "make_mean_with": 69, "mean_chain": 69, "make_sum_with": 69, "bounded_age_sum": 69, "n_simul": 69, "history_count": 69, "history_mean": 69, "count_chain": 69, "true_mean_ag": 69, "light": 69, "circl": [69, 83], "fillstyl": 69, "cornflowerblu": 69, "compute_expected_mean": 69, "expected_count": 69, "expected_mean": 69, "dark": 69, "indigo": 69, "linestyl": 69, "tomato": 69, "dash": 69, "unknow": 69, "tick": 69, "n_rang": 69, "2001": 69, "boxplot": 69, "axhlin": 69, "thankfulli": 69, "simpler": [69, 71], "plug": [69, 80], "agre": 69, "asymmetr": [69, 83], "history_plugin": 69, "history_res": 69, "robust": [69, 74, 83, 87], "resize_count": 69, "plugin_count": 69, "plugin_sum": 69, "resize_mean": 69, "kdeplot": 69, "linewidth": [69, 85], "forestgreen": 69, "leg": 69, "around": [69, 71, 76, 85, 88], "quickstart": 70, "dure": [71, 77], "launch": 71, "repo": 71, "init": 71, "pin": 71, "unless": 71, "laplace_mechan": 71, "dp_valu": 71, "new_non_nan": 71, "println": 71, "aka": 71, "futur": 72, "sample_microdata": 73, "num_row": 73, "cov": 73, "sample_covari": 73, "multivariate_norm": 73, "num_featur": 73, "covari": 73, "matrix": [73, 74, 88], "example_dataset": 73, "introspect": 73, "singular_values_": 73, "tailor": 73, "eigenvalu": 73, "slope": 74, "ordinari": 74, "outlier": 74, "skew": 74, "heteroskedast": 74, "wikipedia": 74, "virgina": 74, "statlab": 74, "25th": 74, "75th": 74, "chose": [74, 77], "nuanc": 74, "midpoint": 74, "undefin": 74, "compute_points_on_percentil": 74, "copi": [74, 77], "p1": 74, "p2": 74, "array_split": 74, "dx": 74, "dy": 74, "x_bar": 74, "y_bar": 74, "make_theil_sen_percentil": 74, "cost": 74, "vstack": 74, "b_in": 74, "discrete_scor": 74, "median_quantil": 74, "select_index_measur": 74, "m_median": 74, "coeffici": 74, "intercept": 74, "make_private_theil_sen": 74, "mostli": [74, 83], "coef": 74, "line_x": 74, "line_i": 74, "scatter": [74, 76], "valuabl": 74, "foundat": [74, 77], "span": [75, 76, 83], "eager": 75, "0539": 75, "731115": 75, "math": 75, "interv": [75, 76, 80, 83], "0829": 75, "429939": 75, "justifi": 75, "200215": 75, "instabl": 75, "biggest": 75, "surmis": 75, "bank": 75, "inconsequenti": 75, "undermin": 75, "query_work_hour": [75, 76], "fulfil": 75, "weekli": 75, "043139": 75, "04473": 75, "1440": 75, "hwusuali642964398": 75, "though": [75, 76, 84], "seem": [75, 76], "retrospect": 75, "43k": 75, "imprecis": 75, "28800": 75, "086277": 75, "589474": 75, "01078": 75, "963271": 75, "twice": 75, "hwusuallenmeani64u32f6429742647814038": 75, "063271": 75, "context_bounded_dp": 75, "metadata": 75, "query_mean_work_hour": 75, "terminologi": 75, "7200": 75, "021569": 75, "772352": 75, "0nan": [75, 76], "hwusualf6437": 75, "642692": 75, "recap": 75, "query_median_hour": 75, "gumbelmin": 75, "0null": 75, "hwusuali6437": 75, "19": [75, 87, 88], "query_multi_quantil": 75, "3240": 75, "1080": 75, "judg": [75, 76], "quantile0": 75, "quantilei64i64i64353740": 75, "rescal": 75, "hvplot": 76, "card": 76, "catastroph": 76, "identif": 76, "benign": 76, "latanya": 76, "sweenei": 76, "reidentifi": 76, "governor": 76, "massachusett": 76, "healthcar": [76, 82], "disappear": 76, "worker": [76, 77], "query_age_ilostat": 76, "0431": 76, "8845792773": 76, "young": 76, "adult": 76, "lai": [76, 77], "youngest": 76, "employ": 76, "rewrit": [76, 89], "clear": 76, "reluct": 76, "absenc": 76, "constitut": 76, "nevertheless": 76, "eurostat": [76, 77], "query_quarterly_count": 76, "884579": 76, "errorbar": 76, "yerr1": 76, "spite": 76, "2008": 76, "declar": 76, "risk": [76, 79, 87], "damag": 76, "lf_preprocess": 76, "gender": 76, "7056": 76, "021138": 76, "386904": 76, "disaggreg": 76, "conceal": [76, 79], "hstack": 76, "sex_str": 76, "male": [76, 77], "femal": [76, 77, 88], "sexsex_strhwusuali64strf642": 76, "2526731": 76, "05379": 76, "signal": [76, 88], "poor": 76, "excess": 76, "mislead": 76, "speedup": 76, "mediat": [76, 77], "1872": 77, "european": 77, "tradit": [77, 84], "disclosur": [77, 87, 88], "suppress": 77, "variou": [77, 79, 85], "realism": 77, "studi": [77, 91], "famili": 77, "conscript": 77, "compulsori": 77, "militari": 77, "servic": 77, "job": [77, 82], "busi": [77, 82], "he": [77, 85, 87], "she": 77, "absent": 77, "consider": [77, 78, 79], "blank": 77, "abstain": 77, "delet": 77, "del": 77, "seldom": 78, "query_hwusual_bin": 78, "shadow": 78, "5795": 78, "53695": 78, "15884": 78, "120157": 78, "6318": 78, "54107": 78, "15034": 78, "120217": 78, "mask": [78, 88], "query_total_hours_work": 78, "hwusuali6412535165": 78, "1l": 79, "broadli": [79, 83, 88], "medium": 79, "id": 79, "household": 79, "varieti": 79, "harm": 79, "ethic": 79, "legal": 79, "oblig": 79, "custodian": 79, "proxi": 79, "customari": [79, 83], "rule": 79, "thumb": 79, "hsu": 79, "et": [79, 87], "al": [79, 87], "elabor": 79, "privacy_measur": 79, "imputed_valu": 79, "maintain": [79, 87, 91], "m_sc": 79, "runif": 79, "100l": 79, "rep": 79, "3l": 79, "count_queri": 79, "0000000000000004": 79, "445721638273584": 79, "confidence_interv": 79, "count_transform": 79, "count_sensit": 79, "count_measur": 79, "mean_queri": 79, "mean_transform": 79, "mean_measur": [79, 85], "compens": 80, "kmr": 80, "unavoid": 80, "020426913849308": 80, "challeng": 81, "navig": 81, "achiev": 82, "inject": 82, "background": [82, 83], "handbook": 82, "administr": [82, 91], "evid": 82, "resourc": [82, 83, 90], "differentialprivaci": 82, "shorter": [82, 89], "co": [82, 91], "architect": [82, 91], "solid": 82, "thread": [82, 89], "safeti": 82, "audit": 82, "corpor": 82, "fairli": 82, "ml": 82, "sdk": 82, "tech": 82, "un": 82, "commission": 82, "refuge": 82, "unhcr": 82, "creation": 82, "swiss": 82, "feder": 82, "offic": 82, "loma": 82, "oblivi": 82, "telecom": 82, "pilot": 82, "antigranular": 82, "openmin": 82, "pysyft": 82, "deploy": [82, 91], "microsoft": 82, "dailymot": 82, "nation": 82, "broadband": [82, 91], "percentag": 82, "databas": [82, 85], "harvard": [82, 87, 91], "atla": 82, "internet": 82, "substanti": 82, "dispar": 82, "urban": 82, "rural": 82, "area": [82, 83], "citi": 82, "liveramp": 82, "covid": 82, "christchurch": 82, "fundament": 82, "perspect": 83, "alic": [83, 87], "jane": 83, "john": 83, "jack": 83, "cardin": 83, "multiset": 83, "sym": 83, "sum_x": 83, "u_i": 83, "v_i": 83, "And": 83, "d_symmetricdist": 83, "lose": 83, "symmetric_differ": 83, "indirectli": 83, "stipul": 83, "sim_": 83, "rv": 83, "realiz": [83, 84], "bother": [83, 88], "arang": [83, 87], "rv_m": 83, "scipi": [83, 85], "stat": [83, 85], "plot_pdf": 83, "p_": 83, "prop": 83, "dissimilar": 83, "limits_": 83, "equat": 83, "randomli": [83, 87], "plot_": 83, "draw": [83, 87], "fill_between": 83, "divergence_over_": 83, "pr_mu_in_": 83, "pr_mv_in_": 83, "2276049566440389": 83, "14083816706408814": 83, "4799999999999992": 83, "hypothet": 83, "u_prim": 83, "017594942096975916": 83, "080000000000001": 83, "came": 83, "moreso": 83, "qualifi": 83, "immun": 83, "foral": 83, "quad": 83, "bigl": 83, "bigr": 83, "boldsymbol": 83, "textbf": 83, "induc": 83, "particip": 83, "kept": 83, "formul": 83, "ambigu": 83, "reclaim": 83, "d_ab": 83, "attain": 83, "clamped_sum_0_12": 83, "_sum": 83, "_0": 83, "_12": 83, "conceiv": 83, "_nois": 83, "laplace_nois": 83, "m_": 83, "t_": 83, "t_2": 83, "t_1": 83, "laplace_sum": 83, "takeawai": 83, "encapsul": 83, "abstract": 83, "clamped_sum_0_12_map": 83, "repackag": 83, "laplace_noise_map": 83, "henc": [83, 85], "laplace_sum_map": 83, "nontrivi": 83, "especi": 83, "trip": 84, "phi": 84, "phi_": 84, "uncertainti": 84, "deal": 84, "tild": 84, "drawn": 84, "extent": 84, "plausibl": 84, "pid": 84, "read_csv": [84, 87, 88], "d_mean_ag": 84, "n_sim": [84, 85], "d_tilde_mean_ag": 84, "make_mean_aggreg": 84, "mean_aggreg": 84, "d_tild": 84, "2996": 84, "93": 84, "scenario": 84, "1050": 84, "diagnost": 84, "knew": 84, "predict": 84, "1_050": 84, "d_tilde_mean": 84, "2853": 84, "wors": [84, 88], "mitig": [85, 86], "cast_str_float": 85, "6000": 85, "5000": 85, "person_of_interest": 85, "poi": 85, "everyon": 85, "exact_mean": 85, "known_ob": 85, "legitim": 85, "overall_mean": 85, "n_ob": 85, "poi_incom": 85, "certainti": 85, "known_mean": 85, "accordingli": 85, "clamp_and_resize_data": 85, "27660": 85, "389303281972": 85, "29805": 85, "858585858587": 85, "n_queri": 85, "poi_income_est": 85, "estimated_mean": 85, "query_mean": 85, "28913": 85, "242083100424": 85, "59455": 85, "79168995719": 85, "inde": 85, "outstand": 85, "simplefilt": 85, "action": 85, "futurewarn": 85, "distplot": 85, "hist_kw": 85, "black": [85, 88], "differenc": [86, 90], "reconstruct": [86, 90], "sequest": [87, 88], "pose": 87, "dssuv": 87, "traceabl": 87, "american": [87, 88], "ac": [87, 88], "seed": 87, "gist": 87, "membership_attack_fig_1": 87, "reference_sampl": 87, "dwork": 87, "privacytool": 87, "sea": 87, "alice_similar": 87, "cosin": 87, "reference_similar": 87, "tau": 87, "membership_attack_fig_2": 87, "eta": 87, "mont": 87, "carlo": 87, "simplic": 87, "githubusercont": [87, 88], "cs208": [87, 88], "spring2022": [87, 88], "fultonpums5sample100": 87, "make_boolean_project": 87, "prime": [87, 88], "691": [87, 88], "desc": [87, 88], "ndarrai": [87, 88], "modulu": [87, 88], "sample_s": 87, "rest": 87, "iloc": 87, "execute_exact_queri": 87, "medic": 87, "trial": 87, "poll": 87, "polit": 87, "parti": 87, "strength": 87, "sequestered_data": 87, "inconclus": 87, "4000": 87, "anita": 87, "simulate_attack": 87, "membership_attack": 87, "reference_s": 87, "num_pred": 87, "rate": [87, 91], "fp_result": 87, "tp_result": 87, "fp": 87, "tp": 87, "start_tim": 87, "plot_fpr_tpr": 87, "fpr": 87, "tpr": 87, "400": 87, "84": 87, "600": 87, "496": 87, "800": 87, "897": 87, "995": 87, "001": 87, "084": 87, "hypothesi": 87, "1200": 87, "37": 87, "1400": 87, "1600": 87, "63": [87, 88], "1800": 87, "67": 87, "2200": 87, "79": 87, "2400": 87, "86": [87, 88], "2600": 87, "2800": 87, "94": 87, "3000": 87, "3200": 87, "3400": 87, "3600": 87, "3800": 87, "execute_dp_queri": 87, "commensur": 87, "find_mea": 87, "num_queri": 87, "epsilon_p": 87, "exact_aggreg": 87, "58": 87, "46": 87, "55": 87, "thwart": 87, "coin": 87, "citizen": 88, "fultonpums5reconstruct": 88, "latino": 88, "asian": 88, "divorc": 88, "militaryservic": 88, "english": 88, "uscitizen": 88, "execute_subsetsums_exact": 88, "resembl": 88, "pred": 88, "reconstruction_attack": 88, "data_pub": 88, "lstsq": 88, "rcond": 88, "scheme": 88, "make_random_pred": 88, "random_pred": 88, "num_citizens_that_matched_random_pred": 88, "random_predicate_mask": 88, "readi": 88, "exact_answ": 88, "reconstructed_target": 88, "perfectli": 88, "citizenship": 88, "execute_subsetsums_round": 88, "execute_subsetsums_nois": 88, "sigma": 88, "execute_subsetsums_sampl": 88, "sub_data": 88, "rmse": 88, "compute_accuracy_reconstruct": 88, "compute_rmse_answ": 88, "evaluate_perform": 88, "interface_nam": 88, "predicates_temp": 88, "spot": 88, "perf": 88, "815": 88, "62": 88, "466": 88, "surprisingli": 88, "evaluate_all_perform": 88, "all_perf": 88, "reset_index": 88, "inplac": 88, "stratifi": 88, "baselin": 88, "defens": 88, "pronounc": 88, "invers": 88, "strang": 88, "axessubplot": 88, "bring": 89, "modular": 89, "bounded_mock_dataset": 89, "forward": 89, "roughli": 89, "mock_dataset": 89, "compound": 89, "breez": 89, "redund": 89, "successor": 89, "pitfal": 90, "primer": 91, "technic": 91, "audienc": 91, "registri": 91, "wizard": 91, "jupyt": 91, "confidenti": 91, "snap": 91, "converg": 91, "gradient": 91, "descent": 91, "feasibl": 91, "analys": 91, "tax": 91}, "objects": {"": [[2, 0, 0, "-", "opendp"]], "opendp": [[3, 0, 0, "-", "accuracy"], [4, 0, 0, "-", "combinators"], [5, 0, 0, "-", "context"], [6, 0, 0, "-", "core"], [7, 0, 0, "-", "domains"], [8, 0, 0, "-", "extras"], [14, 0, 0, "-", "measurements"], [15, 0, 0, "-", "measures"], [16, 0, 0, "-", "metrics"], [17, 0, 0, "-", "mod"], [18, 0, 0, "-", "prelude"], [19, 0, 0, "-", "transformations"], [20, 0, 0, "-", "typing"]], "opendp.accuracy": [[3, 1, 1, "", "accuracy_to_discrete_gaussian_scale"], [3, 1, 1, "", "accuracy_to_discrete_laplacian_scale"], [3, 1, 1, "", "accuracy_to_gaussian_scale"], [3, 1, 1, "", "accuracy_to_laplacian_scale"], [3, 1, 1, "", "discrete_gaussian_scale_to_accuracy"], [3, 1, 1, "", "discrete_laplacian_scale_to_accuracy"], [3, 1, 1, "", "gaussian_scale_to_accuracy"], [3, 1, 1, "", "laplacian_scale_to_accuracy"], [3, 1, 1, "", "summarize_polars_measurement"]], "opendp.combinators": [[4, 1, 1, "", "make_approximate"], [4, 1, 1, "", "make_basic_composition"], [4, 1, 1, "", "make_chain_mt"], [4, 1, 1, "", "make_chain_pm"], [4, 1, 1, "", "make_chain_tt"], [4, 1, 1, "", "make_fix_delta"], [4, 1, 1, "", "make_fixed_approxDP_to_approxDP"], [4, 1, 1, "", "make_population_amplification"], [4, 1, 1, "", "make_pureDP_to_zCDP"], [4, 1, 1, "", "make_select_private_candidate"], [4, 1, 1, "", "make_sequential_composition"], [4, 1, 1, "", "make_zCDP_to_approxDP"], [4, 1, 1, "", "then_sequential_composition"]], "opendp.context": [[5, 2, 1, "", "Context"], [5, 2, 1, "", "PartialChain"], [5, 2, 1, "", "Query"], [5, 1, 1, "", "domain_of"], [5, 1, 1, "", "loss_of"], [5, 1, 1, "", "metric_of"], [5, 1, 1, "", "register"], [5, 1, 1, "", "space_of"], [5, 1, 1, "", "unit_of"]], "opendp.context.Context": [[5, 3, 1, "", "accountant"], [5, 4, 1, "", "compositor"], [5, 4, 1, "", "deserialize_polars_plan"], [5, 4, 1, "", "query"], [5, 3, 1, "", "queryable"]], "opendp.context.PartialChain": [[5, 4, 1, "", "fix"], [5, 3, 1, "", "partial"], [5, 4, 1, "", "wrap"]], "opendp.context.Query": [[5, 4, 1, "", "compositor"], [5, 4, 1, "", "new_with"], [5, 4, 1, "", "param"], [5, 4, 1, "", "release"], [5, 4, 1, "", "resolve"]], "opendp.core": [[6, 1, 1, "", "function_eval"], [6, 1, 1, "", "measurement_check"], [6, 1, 1, "", "measurement_function"], [6, 1, 1, "", "measurement_input_carrier_type"], [6, 1, 1, "", "measurement_input_distance_type"], [6, 1, 1, "", "measurement_input_domain"], [6, 1, 1, "", "measurement_input_metric"], [6, 1, 1, "", "measurement_invoke"], [6, 1, 1, "", "measurement_map"], [6, 1, 1, "", "measurement_output_distance_type"], [6, 1, 1, "", "measurement_output_measure"], [6, 1, 1, "", "new_function"], [6, 1, 1, "", "new_queryable"], [6, 1, 1, "", "queryable_eval"], [6, 1, 1, "", "queryable_query_type"], [6, 1, 1, "", "transformation_check"], [6, 1, 1, "", "transformation_function"], [6, 1, 1, "", "transformation_input_carrier_type"], [6, 1, 1, "", "transformation_input_distance_type"], [6, 1, 1, "", "transformation_input_domain"], [6, 1, 1, "", "transformation_input_metric"], [6, 1, 1, "", "transformation_invoke"], [6, 1, 1, "", "transformation_map"], [6, 1, 1, "", "transformation_output_distance_type"], [6, 1, 1, "", "transformation_output_domain"], [6, 1, 1, "", "transformation_output_metric"]], "opendp.domains": [[7, 1, 1, "", "array_domain"], [7, 1, 1, "", "atom_domain"], [7, 1, 1, "", "bitvector_domain"], [7, 1, 1, "", "categorical_domain"], [7, 1, 1, "", "datetime_domain"], [7, 1, 1, "", "domain_carrier_type"], [7, 1, 1, "", "domain_debug"], [7, 1, 1, "", "domain_type"], [7, 1, 1, "", "enum_domain"], [7, 1, 1, "", "lazyframe_domain"], [7, 1, 1, "", "map_domain"], [7, 1, 1, "", "member"], [7, 1, 1, "", "option_domain"], [7, 1, 1, "", "series_domain"], [7, 1, 1, "", "user_domain"], [7, 1, 1, "", "vector_domain"], [7, 1, 1, "", "wild_expr_domain"], [7, 1, 1, "", "with_margin"]], "opendp.extras": [[9, 0, 0, "-", "examples"], [10, 0, 0, "-", "numpy"], [11, 0, 0, "-", "polars"], [12, 0, 0, "-", "sklearn"]], "opendp.extras.examples": [[9, 1, 1, "", "get_california_pums_path"], [9, 1, 1, "", "get_france_lfs_path"]], "opendp.extras.numpy": [[10, 1, 1, "", "array2_domain"]], "opendp.extras.polars": [[11, 2, 1, "", "DPExpr"], [11, 2, 1, "", "LazyFrameQuery"], [11, 2, 1, "", "LazyGroupByQuery"], [11, 2, 1, "", "Margin"], [11, 2, 1, "", "OnceFrame"], [11, 1, 1, "", "dp_len"]], "opendp.extras.polars.DPExpr": [[11, 4, 1, "", "count"], [11, 4, 1, "", "gaussian"], [11, 4, 1, "", "laplace"], [11, 4, 1, "", "len"], [11, 4, 1, "", "mean"], [11, 4, 1, "", "median"], [11, 4, 1, "", "n_unique"], [11, 4, 1, "", "noise"], [11, 4, 1, "", "null_count"], [11, 4, 1, "", "quantile"], [11, 4, 1, "", "sum"]], "opendp.extras.polars.LazyFrameQuery": [[11, 4, 1, "", "filter"], [11, 4, 1, "", "group_by"], [11, 4, 1, "", "join"], [11, 4, 1, "", "release"], [11, 4, 1, "", "resolve"], [11, 4, 1, "", "select"], [11, 4, 1, "", "select_seq"], [11, 4, 1, "", "sort"], [11, 4, 1, "", "summarize"], [11, 4, 1, "", "with_columns"], [11, 4, 1, "", "with_columns_seq"], [11, 4, 1, "", "with_keys"]], "opendp.extras.polars.LazyGroupByQuery": [[11, 4, 1, "", "agg"]], "opendp.extras.polars.Margin": [[11, 3, 1, "", "by"], [11, 3, 1, "", "max_influenced_partitions"], [11, 3, 1, "", "max_num_partitions"], [11, 3, 1, "", "max_partition_contributions"], [11, 3, 1, "", "max_partition_length"], [11, 3, 1, "", "public_info"]], "opendp.extras.polars.OnceFrame": [[11, 4, 1, "", "collect"], [11, 4, 1, "", "lazy"]], "opendp.extras.sklearn": [[13, 0, 0, "-", "decomposition"]], "opendp.extras.sklearn.decomposition": [[13, 2, 1, "", "PCA"], [13, 2, 1, "", "PCAEpsilons"], [13, 1, 1, "", "make_private_pca"]], "opendp.extras.sklearn.decomposition.PCA": [[13, 4, 1, "", "fit"], [13, 4, 1, "", "measurement"], [13, 3, 1, "", "n_features"]], "opendp.extras.sklearn.decomposition.PCAEpsilons": [[13, 3, 1, "", "eigvals"], [13, 3, 1, "", "eigvecs"], [13, 3, 1, "", "mean"]], "opendp.measurements": [[14, 1, 1, "", "debias_randomized_response_bitvec"], [14, 1, 1, "", "make_alp_queryable"], [14, 1, 1, "", "make_gaussian"], [14, 1, 1, "", "make_geometric"], [14, 1, 1, "", "make_laplace"], [14, 1, 1, "", "make_laplace_threshold"], [14, 1, 1, "", "make_private_expr"], [14, 1, 1, "", "make_private_lazyframe"], [14, 1, 1, "", "make_private_quantile"], [14, 1, 1, "", "make_randomized_response"], [14, 1, 1, "", "make_randomized_response_bitvec"], [14, 1, 1, "", "make_randomized_response_bool"], [14, 1, 1, "", "make_report_noisy_max_gumbel"], [14, 1, 1, "", "make_user_measurement"], [14, 1, 1, "", "then_alp_queryable"], [14, 1, 1, "", "then_gaussian"], [14, 1, 1, "", "then_geometric"], [14, 1, 1, "", "then_laplace"], [14, 1, 1, "", "then_laplace_threshold"], [14, 1, 1, "", "then_private_expr"], [14, 1, 1, "", "then_private_lazyframe"], [14, 1, 1, "", "then_private_quantile"], [14, 1, 1, "", "then_randomized_response_bitvec"], [14, 1, 1, "", "then_report_noisy_max_gumbel"], [14, 1, 1, "", "then_user_measurement"]], "opendp.measures": [[15, 1, 1, "", "approximate"], [15, 1, 1, "", "fixed_smoothed_max_divergence"], [15, 1, 1, "", "max_divergence"], [15, 1, 1, "", "measure_debug"], [15, 1, 1, "", "measure_distance_type"], [15, 1, 1, "", "measure_type"], [15, 1, 1, "", "new_privacy_profile"], [15, 1, 1, "", "renyi_divergence"], [15, 1, 1, "", "smoothed_max_divergence"], [15, 1, 1, "", "user_divergence"], [15, 1, 1, "", "zero_concentrated_divergence"]], "opendp.metrics": [[16, 1, 1, "", "absolute_distance"], [16, 1, 1, "", "change_one_distance"], [16, 1, 1, "", "discrete_distance"], [16, 1, 1, "", "hamming_distance"], [16, 1, 1, "", "insert_delete_distance"], [16, 1, 1, "", "l1_distance"], [16, 1, 1, "", "l2_distance"], [16, 1, 1, "", "linf_distance"], [16, 1, 1, "", "metric_debug"], [16, 1, 1, "", "metric_distance_type"], [16, 1, 1, "", "metric_type"], [16, 1, 1, "", "partition_distance"], [16, 1, 1, "", "symmetric_distance"], [16, 1, 1, "", "user_distance"]], "opendp.mod": [[17, 2, 1, "", "AtomDomain"], [17, 2, 1, "", "Domain"], [17, 2, 1, "", "ExtrinsicDomain"], [17, 2, 1, "", "Function"], [17, 2, 1, "", "LazyFrameDomain"], [17, 2, 1, "", "Measure"], [17, 2, 1, "", "Measurement"], [17, 2, 1, "", "Metric"], [17, 5, 1, "", "OpenDPException"], [17, 2, 1, "", "OptionDomain"], [17, 2, 1, "", "PrivacyProfile"], [17, 2, 1, "", "Queryable"], [17, 2, 1, "", "SeriesDomain"], [17, 2, 1, "", "Transformation"], [17, 5, 1, "", "UnknownTypeException"], [17, 2, 1, "", "VectorDomain"], [17, 1, 1, "", "assert_features"], [17, 1, 1, "", "binary_search"], [17, 1, 1, "", "binary_search_chain"], [17, 1, 1, "", "binary_search_param"], [17, 1, 1, "", "deserialize"], [17, 1, 1, "", "disable_features"], [17, 1, 1, "", "enable_features"], [17, 1, 1, "", "exponential_bounds_search"], [17, 1, 1, "", "serialize"]], "opendp.mod.AtomDomain": [[17, 3, 1, "", "bounds"], [17, 3, 1, "", "nan"]], "opendp.mod.Domain": [[17, 3, 1, "", "carrier_type"], [17, 4, 1, "", "member"], [17, 3, 1, "", "type"]], "opendp.mod.ExtrinsicDomain": [[17, 3, 1, "", "descriptor"]], "opendp.mod.LazyFrameDomain": [[17, 3, 1, "", "columns"], [17, 4, 1, "", "get_margin"], [17, 4, 1, "", "get_series_domain"]], "opendp.mod.Measure": [[17, 3, 1, "", "distance_type"], [17, 3, 1, "", "type"]], "opendp.mod.Measurement": [[17, 4, 1, "", "check"], [17, 3, 1, "", "function"], [17, 3, 1, "", "input_carrier_type"], [17, 3, 1, "", "input_distance_type"], [17, 3, 1, "", "input_domain"], [17, 3, 1, "", "input_metric"], [17, 3, 1, "", "input_space"], [17, 4, 1, "", "invoke"], [17, 4, 1, "", "map"], [17, 3, 1, "", "output_distance_type"], [17, 3, 1, "", "output_measure"]], "opendp.mod.Metric": [[17, 3, 1, "", "distance_type"], [17, 3, 1, "", "type"]], "opendp.mod.OpenDPException": [[17, 3, 1, "", "raw_traceback"]], "opendp.mod.OptionDomain": [[17, 3, 1, "", "element_domain"]], "opendp.mod.PrivacyProfile": [[17, 4, 1, "", "delta"], [17, 4, 1, "", "epsilon"]], "opendp.mod.SeriesDomain": [[17, 3, 1, "", "element_domain"], [17, 3, 1, "", "name"], [17, 3, 1, "", "nullable"]], "opendp.mod.Transformation": [[17, 4, 1, "", "check"], [17, 3, 1, "", "function"], [17, 3, 1, "", "input_carrier_type"], [17, 3, 1, "", "input_distance_type"], [17, 3, 1, "", "input_domain"], [17, 3, 1, "", "input_metric"], [17, 3, 1, "", "input_space"], [17, 4, 1, "", "invoke"], [17, 4, 1, "", "map"], [17, 3, 1, "", "output_distance_type"], [17, 3, 1, "", "output_domain"], [17, 3, 1, "", "output_metric"], [17, 3, 1, "", "output_space"]], "opendp.mod.VectorDomain": [[17, 3, 1, "", "element_domain"], [17, 3, 1, "", "size"]], "opendp.transformations": [[19, 1, 1, "", "choose_branching_factor"], [19, 1, 1, "", "make_b_ary_tree"], [19, 1, 1, "", "make_bounded_float_checked_sum"], [19, 1, 1, "", "make_bounded_float_ordered_sum"], [19, 1, 1, "", "make_bounded_int_monotonic_sum"], [19, 1, 1, "", "make_bounded_int_ordered_sum"], [19, 1, 1, "", "make_bounded_int_split_sum"], [19, 1, 1, "", "make_cast"], [19, 1, 1, "", "make_cast_default"], [19, 1, 1, "", "make_cast_inherent"], [19, 1, 1, "", "make_cdf"], [19, 1, 1, "", "make_clamp"], [19, 1, 1, "", "make_consistent_b_ary_tree"], [19, 1, 1, "", "make_count"], [19, 1, 1, "", "make_count_by"], [19, 1, 1, "", "make_count_by_categories"], [19, 1, 1, "", "make_count_distinct"], [19, 1, 1, "", "make_create_dataframe"], [19, 1, 1, "", "make_df_cast_default"], [19, 1, 1, "", "make_df_is_equal"], [19, 1, 1, "", "make_drop_null"], [19, 1, 1, "", "make_find"], [19, 1, 1, "", "make_find_bin"], [19, 1, 1, "", "make_identity"], [19, 1, 1, "", "make_impute_constant"], [19, 1, 1, "", "make_impute_uniform_float"], [19, 1, 1, "", "make_index"], [19, 1, 1, "", "make_is_equal"], [19, 1, 1, "", "make_is_null"], [19, 1, 1, "", "make_lipschitz_float_mul"], [19, 1, 1, "", "make_mean"], [19, 1, 1, "", "make_metric_bounded"], [19, 1, 1, "", "make_metric_unbounded"], [19, 1, 1, "", "make_ordered_random"], [19, 1, 1, "", "make_quantile_score_candidates"], [19, 1, 1, "", "make_quantiles_from_counts"], [19, 1, 1, "", "make_resize"], [19, 1, 1, "", "make_select_column"], [19, 1, 1, "", "make_sized_bounded_float_checked_sum"], [19, 1, 1, "", "make_sized_bounded_float_ordered_sum"], [19, 1, 1, "", "make_sized_bounded_int_checked_sum"], [19, 1, 1, "", "make_sized_bounded_int_monotonic_sum"], [19, 1, 1, "", "make_sized_bounded_int_ordered_sum"], [19, 1, 1, "", "make_sized_bounded_int_split_sum"], [19, 1, 1, "", "make_split_dataframe"], [19, 1, 1, "", "make_split_lines"], [19, 1, 1, "", "make_split_records"], [19, 1, 1, "", "make_stable_expr"], [19, 1, 1, "", "make_stable_lazyframe"], [19, 1, 1, "", "make_subset_by"], [19, 1, 1, "", "make_sum"], [19, 1, 1, "", "make_sum_of_squared_deviations"], [19, 1, 1, "", "make_unordered"], [19, 1, 1, "", "make_user_transformation"], [19, 1, 1, "", "make_variance"], [19, 1, 1, "", "then_b_ary_tree"], [19, 1, 1, "", "then_cast"], [19, 1, 1, "", "then_cast_default"], [19, 1, 1, "", "then_cast_inherent"], [19, 1, 1, "", "then_clamp"], [19, 1, 1, "", "then_count"], [19, 1, 1, "", "then_count_by"], [19, 1, 1, "", "then_count_by_categories"], [19, 1, 1, "", "then_count_distinct"], [19, 1, 1, "", "then_df_cast_default"], [19, 1, 1, "", "then_df_is_equal"], [19, 1, 1, "", "then_drop_null"], [19, 1, 1, "", "then_find"], [19, 1, 1, "", "then_find_bin"], [19, 1, 1, "", "then_identity"], [19, 1, 1, "", "then_impute_constant"], [19, 1, 1, "", "then_impute_uniform_float"], [19, 1, 1, "", "then_index"], [19, 1, 1, "", "then_is_equal"], [19, 1, 1, "", "then_is_null"], [19, 1, 1, "", "then_lipschitz_float_mul"], [19, 1, 1, "", "then_mean"], [19, 1, 1, "", "then_metric_bounded"], [19, 1, 1, "", "then_metric_unbounded"], [19, 1, 1, "", "then_ordered_random"], [19, 1, 1, "", "then_quantile_score_candidates"], [19, 1, 1, "", "then_resize"], [19, 1, 1, "", "then_stable_expr"], [19, 1, 1, "", "then_stable_lazyframe"], [19, 1, 1, "", "then_sum"], [19, 1, 1, "", "then_sum_of_squared_deviations"], [19, 1, 1, "", "then_unordered"], [19, 1, 1, "", "then_variance"]], "opendp.typing": [[20, 2, 1, "", "Carrier"], [20, 2, 1, "", "RuntimeType"], [20, 2, 1, "", "SensitivityMetric"], [20, 1, 1, "", "get_atom"], [20, 1, 1, "", "get_atom_or_infer"], [20, 1, 1, "", "get_carrier_type"], [20, 1, 1, "", "get_distance_type"], [20, 1, 1, "", "get_first"], [20, 1, 1, "", "get_type"], [20, 1, 1, "", "get_value_type"], [20, 1, 1, "", "parse_or_infer"], [20, 1, 1, "", "pass_through"], [20, 1, 1, "", "set_default_float_type"], [20, 1, 1, "", "set_default_int_type"]], "opendp.typing.RuntimeType": [[20, 3, 1, "", "args"], [20, 4, 1, "", "infer"], [20, 3, 1, "", "origin"], [20, 4, 1, "", "parse"], [20, 4, 1, "", "parse_or_infer"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 1, 24, 25, 29, 55, 65, 67], "python": [1, 60], "document": [1, 60, 61], "content": [1, 2, 8, 9, 10, 11, 12, 13, 60], "index": [1, 52], "opendp": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 45, 60, 63, 64, 67, 69, 82, 85, 89], "packag": [2, 8, 9, 10, 11, 12, 13], "subpackag": [2, 8, 12], "submodul": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "accuraci": [3, 80, 84], "combin": [4, 22], "context": [5, 23, 29, 55, 65, 77], "core": [6, 46], "domain": [7, 26, 48], "extra": [8, 9, 10, 11, 12, 13], "exampl": [9, 30, 31, 33, 63, 64, 67, 68, 69, 87, 89], "numpi": 10, "polar": [11, 44, 45], "sklearn": [12, 13], "decomposit": 13, "measur": [14, 15, 22, 27, 31, 46, 48, 64, 68], "metric": [16, 48, 52], "mod": 17, "prelud": 18, "transform": [19, 33, 46, 52, 64, 89], "type": [20, 34, 56], "compositor": [21, 77], "basic": 21, "composit": [21, 22, 68], "sequenti": 21, "chain": [21, 22, 89], "nest": 21, "cast": [22, 39, 52, 68], "amplif": [22, 68], "user": 24, "guid": 24, "featur": [24, 79], "list": [24, 91], "limit": [25, 55], "privaci": [25, 48, 68, 79, 82, 83, 87, 88, 89, 91], "concern": 25, "incomplet": 25, "proof": [25, 61, 63], "miss": 25, "function": [25, 48, 63, 74], "stabil": [25, 48, 83], "softwar": 25, "qualiti": 25, "addit": [26, 27], "nois": [26, 27, 43, 65], "mechan": [26, 27, 74, 89], "distribut": [26, 43, 50, 83], "laplac": [26, 65, 89], "v": [26, 35, 45, 65, 69, 84], "gaussian": [26, 27, 43, 65], "support": [26, 48, 56], "float": [26, 34, 51], "integ": [26, 34, 51], "scalar": 26, "vector": 26, "bit": 26, "depth": 26, "desideratum": 26, "point": [26, 47, 51, 74], "granular": 26, "laplacian": 27, "geometr": 27, "threshold": 27, "random": [27, 28], "respons": [27, 28], "privat": [28, 32, 50, 66, 68, 73, 74], "aggreg": [28, 35, 49, 50, 51, 52, 83], "mean": [28, 49, 68, 75], "count": [28, 35, 68, 75], "plugin": [29, 30], "select": [32, 74, 78], "group": [32, 76, 78], "column": [32, 37, 74, 78], "data": [34, 68, 74, 77, 79, 85], "boolean": [34, 36], "string": [34, 41], "categor": 34, "enum": 34, "tempor": [34, 42], "frame": 35, "length": [35, 76], "express": [35, 38], "uniqu": 35, "null": [35, 39], "non": 35, "i": [36, 65, 69, 82, 84], "properti": 36, "Not": 36, "manipul": 39, "clip": 39, "cut": 39, "drop": 39, "nan": 39, "fill": 39, "filter": [39, 78], "replac": 39, "strict": 39, "To": [39, 41, 65], "physic": 39, "oper": 40, "strptime": 41, "date": [41, 42], "datetim": 41, "time": [41, 42], "compon": 42, "comparison": 43, "sensit": [43, 83], "max": 43, "partit": [43, 76], "contribut": [43, 59, 61, 62], "structur": [46, 63, 64], "similar": 46, "program": 47, "framework": [47, 55, 83], "summari": [47, 65], "kei": [47, 76], "element": 48, "map": [48, 83], "distanc": [48, 83], "known": [49, 51, 69], "dataset": [49, 51, 52, 69, 77, 83], "size": [49, 51, 69], "unknown": [49, 51, 69], "quantil": [50, 52, 74, 75], "via": [50, 52, 66], "histogram": [50, 66], "b": 50, "ari": 50, "tree": [50, 52], "estim": [50, 74], "sum": [51, 68, 75, 89], "special": 51, "constructor": [51, 64, 89], "imput": 52, "clamp": [52, 89], "order": 52, "bound": [52, 74], "resiz": [52, 69], "util": [53, 81], "paramet": [54, 77, 79], "search": 54, "binari": 54, "exponenti": 54, "serial": 55, "lazyframequeri": 55, "argument": 56, "alias": 56, "contributor": [57, 59], "licens": [57, 59], "agreement": [57, 59], "contact": 58, "process": [59, 60], "creat": [59, 74], "pull": [59, 61], "request": [59, 61], "branch": 59, "philosophi": 59, "vet": 59, "merg": 59, "develop": [60, 64], "environ": 60, "clone": 60, "repo": 60, "rust": [60, 64, 67], "setup": 60, "test": [60, 61], "r": 60, "doc": 60, "releas": 60, "variabl": 60, "tool": 60, "get": [61, 70], "involv": 61, "bug": 61, "report": 61, "code": 61, "resolv": 61, "an": 61, "issu": 61, "add": 61, "review": 61, "initi": [63, 64], "latex": 63, "templat": 63, "precondit": 63, "pseudocod": 63, "postcondit": 63, "loop": 64, "next": [64, 82], "step": 64, "what": [65, 82, 84], "should": 65, "choos": 65, "introduct": [65, 74], "when": [65, 69], "us": [65, 82, 85], "specifi": 65, "compar": 65, "result": 65, "conclus": 65, "make_count_by_categori": 66, "make_count_bi": 66, "make_laplace_threshold": 66, "more": 67, "cookbook": 67, "theori": [67, 90], "applic": 67, "built": 67, "analysi": 68, "work": [68, 69, 77], "csv": 68, "zero": 68, "concentr": 68, "differenti": [68, 73, 74, 82, 87, 88, 89, 91], "popul": 68, "load": [69, 85], "provid": 69, "incorrect": 69, "valu": 69, "other": [69, 79], "approach": 69, "start": 70, "quickstart": 71, "statist": [72, 75], "model": 72, "pca": 73, "linear": 74, "regress": 74, "defin": 74, "1": [74, 79], "alpha": 74, "2": [74, 79], "comput": 74, "percentil": 74, "line": 74, "3": [74, 79], "4": [74, 79], "specif": 74, "5": [74, 79], "make": 74, "6": 74, "theil": 74, "sen": 74, "appli": [74, 91], "synthet": 74, "essenti": 75, "median": 75, "stabl": 76, "explicit": 76, "invari": 76, "tabular": 77, "descript": 77, "overview": [77, 84], "prepar": 78, "microdata": 78, "With": 78, "By": 78, "typic": 79, "workflow": 79, "identifi": 79, "unit": 79, "set": 79, "loss": 79, "collect": 79, "public": 79, "inform": 79, "mediat": 79, "access": 79, "submit": 79, "dp": [79, 83], "queri": 79, "assess": 81, "welcom": 82, "why": 82, "who": 82, "A": [83, 85], "understand": 83, "between": 83, "adjac": 83, "diverg": 83, "definit": 83, "pitfal": 84, "edg": 84, "case": 84, "confid": 84, "interv": 84, "d": 84, "synopsi": 84, "guarante": 84, "In": 84, "practic": 84, "differenc": 85, "simpl": 85, "attack": [85, 86, 87, 88], "membership": 87, "simul": [87, 88], "reconstruct": 88, "mitig": 88, "The": 89, "retrospect": 89, "partial": 89, "resourc": 91, "foundat": 91, "learn": 91, "about": 91, "paper": 91}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "Python API Documentation": [[1, "python-api-documentation"]], "Contents:": [[1, null], [60, "toctitle"]], "Indexes": [[1, "indexes"]], "opendp package": [[2, "opendp-package"]], "Subpackages": [[2, "subpackages"], [8, "subpackages"], [12, "subpackages"]], "Submodules": [[2, "submodules"]], "Module contents": [[2, "module-opendp"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.numpy"], [11, "module-opendp.extras.polars"], [12, "module-opendp.extras.sklearn"], [13, "module-opendp.extras.sklearn.decomposition"]], "opendp.accuracy module": [[3, "module-opendp.accuracy"]], "opendp.combinators module": [[4, "module-opendp.combinators"]], "opendp.context module": [[5, "module-opendp.context"]], "opendp.core module": [[6, "module-opendp.core"]], "opendp.domains module": [[7, "module-opendp.domains"]], "opendp.extras package": [[8, "opendp-extras-package"]], "opendp.extras.examples package": [[9, "opendp-extras-examples-package"]], "opendp.extras.numpy package": [[10, "opendp-extras-numpy-package"]], "opendp.extras.polars package": [[11, "opendp-extras-polars-package"]], "opendp.extras.sklearn package": [[12, "opendp-extras-sklearn-package"]], "opendp.extras.sklearn.decomposition package": [[13, "opendp-extras-sklearn-decomposition-package"]], "opendp.measurements module": [[14, "module-opendp.measurements"]], "opendp.measures module": [[15, "module-opendp.measures"]], "opendp.metrics module": [[16, "module-opendp.metrics"]], "opendp.mod module": [[17, "module-opendp.mod"]], "opendp.prelude module": [[18, "module-opendp.prelude"]], "opendp.transformations module": [[19, "module-opendp.transformations"]], "opendp.typing module": [[20, "module-opendp.typing"]], "Compositors": [[21, "compositors"]], "Basic Composition": [[21, "basic-composition"]], "Sequential Composition": [[21, "sequential-composition"]], "Chaining": [[21, "chaining"], [22, "chaining"], [89, "chaining"]], "Nesting": [[21, "nesting"]], "Combinators": [[22, "combinators"]], "Composition": [[22, "composition"], [68, "Composition"]], "Measure Casting": [[22, "measure-casting"], [68, "Measure-Casting"]], "Amplification": [[22, "amplification"]], "Context": [[23, "context"]], "API User Guide": [[24, "api-user-guide"]], "Feature Listing": [[24, "feature-listing"]], "Limitations": [[25, "limitations"], [55, "limitations"]], "Privacy Concerns": [[25, "privacy-concerns"]], "Incomplete Privacy Proofs": [[25, "incomplete-privacy-proofs"]], "Missing Functionality": [[25, "missing-functionality"]], "API Stability": [[25, "api-stability"]], "Software Quality": [[25, "software-quality"]], "Additive Noise Mechanisms": [[26, "Additive-Noise-Mechanisms"], [27, "additive-noise-mechanisms"]], "Distribution: Laplace vs. Gaussian": [[26, "Distribution:-Laplace-vs.-Gaussian"]], "Support: Float vs. Integer": [[26, "Support:-Float-vs.-Integer"]], "Domain: Scalar vs. Vector": [[26, "Domain:-Scalar-vs.-Vector"]], "Bit depth": [[26, "Bit-depth"]], "Desideratum: Floating-Point Granularity": [[26, "Desideratum:-Floating-Point-Granularity"]], "Measurements": [[27, "measurements"]], "Laplacian Noise": [[27, "laplacian-noise"]], "Gaussian Noise": [[27, "gaussian-noise"], [43, "Gaussian-Noise"]], "Geometric Noise": [[27, "geometric-noise"]], "Noise Addition with Thresholding": [[27, "noise-addition-with-thresholding"]], "Randomized Response": [[27, "randomized-response"], [28, "randomized-response"]], "Privatization": [[28, "privatization"]], "Aggregation: Mean": [[28, "aggregation-mean"], [49, "aggregation-mean"]], "Aggregation: Count": [[28, "aggregation-count"]], "Context API Plugins": [[29, "context-api-plugins"]], "Plugins": [[30, "plugins"]], "Examples": [[30, "examples"]], "Measurement example": [[31, "measurement-example"]], "Privately Selecting Grouping Columns": [[32, "privately-selecting-grouping-columns"]], "Transformation example": [[33, "transformation-example"]], "Data Types": [[34, "Data-Types"]], "Boolean": [[34, "Boolean"], [36, "Boolean"]], "Integer": [[34, "Integer"]], "Float": [[34, "Float"]], "String": [[34, "String"], [41, "String"]], "Categorical": [[34, "Categorical"]], "Enum": [[34, "Enum"]], "Temporal": [[34, "Temporal"], [42, "Temporal"]], "Aggregation": [[35, "Aggregation"]], "Frame Length vs Expression Length": [[35, "Frame-Length-vs-Expression-Length"]], "Unique Counts": [[35, "Unique-Counts"]], "Null and Non-Null Counts": [[35, "Null-and-Non-Null-Counts"]], "Is Property": [[36, "Is-Property"]], "Not": [[36, "Not"]], "Columns": [[37, "Columns"]], "Expressions": [[38, "expressions"]], "Manipulation": [[39, "Manipulation"]], "Cast": [[39, "Cast"]], "Clip": [[39, "Clip"]], "Cut": [[39, "Cut"]], "Drop NaNs": [[39, "Drop-NaNs"]], "Drop Nulls": [[39, "Drop-Nulls"]], "Fill NaN": [[39, "Fill-NaN"]], "Fill Null": [[39, "Fill-Null"]], "Filter": [[39, "Filter"], [78, "Filter"]], "Replace": [[39, "Replace"]], "Replace Strict": [[39, "Replace-Strict"]], "To Physical": [[39, "To-Physical"]], "Operators": [[40, "Operators"]], "Strptime, To Date, To Datetime, To Time": [[41, "Strptime,-To-Date,-To-Datetime,-To-Time"]], "Date/Time Components": [[42, "Date/Time-Components"]], "Distribution Comparison": [[43, "Distribution-Comparison"]], "Sensitivity": [[43, "Sensitivity"]], "Max Partition Contributions": [[43, "Max-Partition-Contributions"]], "Polars": [[44, "polars"]], "Polars vs. OpenDP": [[45, "polars-vs-opendp"]], "Core Structures": [[46, "core-structures"]], "Similarities": [[46, "similarities"]], "Transformation": [[46, "transformation"]], "Measurement": [[46, "measurement"]], "Programming Framework": [[47, "programming-framework"]], "Summary": [[47, "summary"], [65, "Summary"]], "Key Points": [[47, "key-points"]], "Supporting Elements": [[48, "supporting-elements"]], "Function": [[48, "function"]], "Domain": [[48, "domain"]], "Metric": [[48, "metric"]], "Measure": [[48, "measure"]], "Stability/Privacy Map": [[48, "stability-privacy-map"]], "Distance": [[48, "distance"]], "Known Dataset Size": [[49, "known-dataset-size"]], "Unknown Dataset Size": [[49, "unknown-dataset-size"]], "Aggregation: Quantile": [[50, "Aggregation:-Quantile"]], "Quantile via Histogram": [[50, "Quantile-via-Histogram"]], "Quantile via B-ary Tree": [[50, "Quantile-via-B-ary-Tree"]], "Privately Estimating the Distribution": [[50, "Privately-Estimating-the-Distribution"]], "Aggregation: Sum": [[51, "Aggregation:-Sum"]], "Known/Unknown Dataset Size": [[51, "Known/Unknown-Dataset-Size"]], "Floating-Point": [[51, "Floating-Point"]], "Specialized Floating-Point Constructors": [[51, "Specialized-Floating-Point-Constructors"]], "Specialized Integer Constructors": [[51, "Specialized-Integer-Constructors"]], "Transformations": [[52, "transformations"]], "Casting": [[52, "casting"], [68, "Casting"]], "Imputation": [[52, "imputation"]], "Indexing": [[52, "indexing"]], "Clamping": [[52, "clamping"]], "Dataset Ordering": [[52, "dataset-ordering"]], "Bounded Metrics": [[52, "bounded-metrics"]], "Resizing": [[52, "resizing"]], "Aggregators": [[52, "aggregators"]], "Quantiles via Trees": [[52, "quantiles-via-trees"]], "Utilities": [[53, "utilities"]], "Parameter Search": [[54, "parameter-search"]], "Binary Search": [[54, "binary-search"]], "Exponential Search": [[54, "exponential-search"]], "Serialization": [[55, "serialization"]], "LazyFrameQuery Serialization": [[55, "lazyframequery-serialization"]], "Context Serialization": [[55, "context-serialization"]], "Framework API Serialization": [[55, "framework-api-serialization"]], "Typing": [[56, "typing"]], "Type Argument": [[56, "type-argument"]], "Supported Types": [[56, "supported-types"]], "Type Aliases": [[56, "type-aliases"]], "Contributor License Agreement": [[57, "contributor-license-agreement"], [59, "contributor-license-agreement"]], "Contact": [[58, "contact"]], "Contribution Process": [[59, "contribution-process"]], "Creating a Pull Request": [[59, "creating-a-pull-request"]], "Branch Philosophy": [[59, "branch-philosophy"]], "Vetting Process": [[59, "vetting-process"]], "Merge": [[59, "merge"]], "Development Environment": [[60, "development-environment"]], "Clone the OpenDP Repo": [[60, "clone-the-opendp-repo"]], "Rust Setup": [[60, "rust-setup"]], "Python Setup": [[60, "python-setup"]], "Python Tests": [[60, "python-tests"]], "Python Documentation": [[60, "python-documentation"]], "R Setup": [[60, "r-setup"]], "R Tests": [[60, "r-tests"]], "R Documentation": [[60, "r-documentation"]], "Docs Setup": [[60, "docs-setup"]], "Release Process": [[60, "release-process"]], "Environment Variables": [[60, "environment-variables"]], "Developer Tooling": [[60, "developer-tooling"]], "Getting Involved": [[61, "getting-involved"]], "Bug Reports": [[61, "bug-reports"]], "Code and Proof Contributions": [[61, "code-and-proof-contributions"]], "Resolve an Issue": [[61, "resolve-an-issue"]], "Documentation": [[61, "documentation"]], "Add Tests": [[61, "add-tests"]], "Review Pull Requests": [[61, "review-pull-requests"]], "Contributing": [[62, "contributing"]], "OpenDP Proof Initiation": [[63, "opendp-proof-initiation"]], "Proof Structure": [[63, "proof-structure"]], "Function Example": [[63, "function-example"]], "LaTex Template": [[63, "latex-template"]], "Preconditions": [[63, "preconditions"]], "Pseudocode": [[63, "pseudocode"]], "Postcondition": [[63, "postcondition"]], "Proof": [[63, "proof"]], "OpenDP Rust Initiation": [[64, "opendp-rust-initiation"]], "Transformation Structure": [[64, "transformation-structure"]], "Example Transformation Constructor": [[64, "example-transformation-constructor"]], "Measurement Structure": [[64, "measurement-structure"]], "Developer Loop": [[64, "developer-loop"]], "Next Steps": [[64, "next-steps"]], "What Noise Should I Choose?": [[65, "What-Noise-Should-I-Choose?"]], "Introduction": [[65, "Introduction"], [74, "Introduction"]], "Laplace vs. Gaussian": [[65, "Laplace-vs.-Gaussian"]], "When To Use:": [[65, "When-To-Use:"]], "Specifying Laplace or Gaussian with the Context API": [[65, "Specifying-Laplace-or-Gaussian-with-the-Context-API"]], "Comparing Results": [[65, "Comparing-Results"]], "Conclusion": [[65, "Conclusion"]], "Privatizing Histograms": [[66, "Privatizing-Histograms"]], "Private histogram via make_count_by_categories": [[66, "Private-histogram-via-make_count_by_categories"]], "Private histogram via make_count_by and make_laplace_threshold": [[66, "Private-histogram-via-make_count_by-and-make_laplace_threshold"]], "More Examples": [[67, "more-examples"]], "Cookbook examples": [[67, "cookbook-examples"]], "Theory examples": [[67, "theory-examples"]], "API Examples": [[67, "api-examples"]], "Rust Examples": [[67, "rust-examples"]], "Applications built with OpenDP": [[67, "applications-built-with-opendp"]], "Example Data Analysis": [[68, "Example-Data-Analysis"]], "Working with CSV data": [[68, "Working-with-CSV-data"]], "Private Count": [[68, "Private-Count"]], "Private Sum": [[68, "Private-Sum"]], "Private Mean": [[68, "Private-Mean"]], "Zero-Concentrated Differential Privacy": [[68, "Zero-Concentrated-Differential-Privacy"]], "Population Amplification": [[68, "Population-Amplification"]], "Working with Unknown Dataset Sizes": [[69, "Working-with-Unknown-Dataset-Sizes"]], "Load example dataset": [[69, "Load-example-dataset"]], "When dataset size is known": [[69, "When-dataset-size-is-known"]], "When dataset size is unknown": [[69, "When-dataset-size-is-unknown"]], "Providing incorrect dataset size values": [[69, "Providing-incorrect-dataset-size-values"]], "OpenDP resize vs. other approaches": [[69, "OpenDP-resize-vs.-other-approaches"]], "Getting Started": [[70, "getting-started"]], "Quickstart": [[71, "quickstart"]], "Statistical Modeling": [[72, "statistical-modeling"]], "Differentially Private PCA": [[73, "differentially-private-pca"]], "Linear Regression": [[74, "Linear-Regression"]], "Defining Regression Functions": [[74, "Defining-Regression-Functions"]], "1. Define Alphas": [[74, "1.-Define-Alphas"]], "2. Define a Function to Compute Points on the Percentile Lines": [[74, "2.-Define-a-Function-to-Compute-Points-on-the-Percentile-Lines"]], "3. Define a Function to Compute Differentially Private Percentiles": [[74, "3.-Define-a-Function-to-Compute-Differentially-Private-Percentiles"]], "4. Create a Function to Select a Specific Column": [[74, "4.-Create-a-Function-to-Select-a-Specific-Column"]], "5. Create a Function to Make Private Quantiles in Bounds": [[74, "5.-Create-a-Function-to-Make-Private-Quantiles-in-Bounds"]], "6. Create a Differentially Private Theil-Sen Estimator": [[74, "6.-Create-a-Differentially-Private-Theil-Sen-Estimator"]], "Creating and Applying the Mechanism to Synthetic Data": [[74, "Creating-and-Applying-the-Mechanism-to-Synthetic-Data"]], "Essential Statistics": [[75, "Essential-Statistics"]], "Count": [[75, "Count"]], "Sum": [[75, "Sum"]], "Mean": [[75, "Mean"]], "Median": [[75, "Median"]], "Quantile": [[75, "Quantile"]], "Grouping": [[76, "Grouping"]], "Stable Keys": [[76, "Stable-Keys"]], "Explicit Keys": [[76, "Explicit-Keys"]], "Invariant Keys": [[76, "Invariant-Keys"]], "Invariant Partition Lengths": [[76, "Invariant-Partition-Lengths"]], "Working with Tabular Data": [[77, "working-with-tabular-data"]], "Dataset Description": [[77, "dataset-description"]], "Compositor Overview": [[77, "compositor-overview"]], "Context Parameters": [[77, "context-parameters"]], "Preparing Microdata": [[78, "Preparing-Microdata"]], "With Columns": [[78, "With-Columns"]], "Select": [[78, "Select"]], "Group By": [[78, "Group-By"]], "Typical Workflow": [[79, "typical-workflow"]], "1. Identify the Unit of Privacy": [[79, "identify-the-unit-of-privacy"]], "2. Set Privacy Loss Parameters": [[79, "set-privacy-loss-parameters"]], "3. Collect Public Information": [[79, "collect-public-information"]], "4. Mediate Access to Data": [[79, "mediate-access-to-data"]], "5. Submit DP Queries": [[79, "submit-dp-queries"]], "Other features": [[79, "other-features"]], "Accuracy": [[80, "accuracy"]], "Assessing Utility": [[81, "assessing-utility"]], "Welcome": [[82, "welcome"]], "What is differential privacy?": [[82, "what-is-differential-privacy"]], "Why OpenDP?": [[82, "why-opendp"]], "Who is using OpenDP?": [[82, "who-is-using-opendp"]], "What next?": [[82, "what-next"]], "A Framework to Understand DP": [[83, "A-Framework-to-Understand-DP"]], "Distance Between Datasets - Adjacency": [[83, "Distance-Between-Datasets---Adjacency"]], "Distance Between Distributions - Divergence": [[83, "Distance-Between-Distributions---Divergence"]], "Definition of Privacy": [[83, "Definition-of-Privacy"]], "Distance Between Aggregates - Sensitivity": [[83, "Distance-Between-Aggregates---Sensitivity"]], "Definition of Stability": [[83, "Definition-of-Stability"]], "Stability Maps and Privacy Maps": [[83, "Stability-Maps-and-Privacy-Maps"]], "Accuracy: Pitfalls and Edge Cases": [[84, "Accuracy:-Pitfalls-and-Edge-Cases"]], "Overview": [[84, "Overview"]], "Accuracy vs. Confidence Intervals": [[84, "Accuracy-vs.-Confidence-Intervals"]], "What is D?": [[84, "What-is-D?"]], "Synopsis": [[84, "Synopsis"]], "Accuracy Guarantees In Practice": [[84, "Accuracy-Guarantees-In-Practice"]], "Differencing": [[85, "Differencing"]], "Loading the data": [[85, "Loading-the-data"]], "A simple attack": [[85, "A-simple-attack"]], "Using OpenDP": [[85, "Using-OpenDP"]], "Attacks": [[86, "attacks"]], "Membership": [[87, "Membership"]], "Membership Attacks": [[87, "Membership-Attacks"]], "Example": [[87, "Example"]], "Simulations": [[87, "Simulations"], [88, "Simulations"]], "Differential Privacy": [[87, "Differential-Privacy"], [88, "Differential-Privacy"]], "Reconstruction": [[88, "Reconstruction"]], "Reconstruction Attack": [[88, "Reconstruction-Attack"]], "Mitigations": [[88, "Mitigations"]], "Differential Privacy with OpenDP": [[89, "differential-privacy-with-opendp"]], "The Laplace Mechanism": [[89, "the-laplace-mechanism"]], "Transformation Example: Sum": [[89, "transformation-example-sum"]], "Transformation Example: Clamp": [[89, "transformation-example-clamp"]], "Retrospective": [[89, "retrospective"]], "Partial Constructors": [[89, "partial-constructors"]], "Theory": [[90, "theory"]], "Resources List": [[91, "resources-list"]], "Foundations": [[91, "foundations"]], "Applying Differential Privacy": [[91, "applying-differential-privacy"]], "Learning About Differential Privacy": [[91, "learning-about-differential-privacy"]], "Papers": [[91, "papers"]]}, "indexentries": {"module": [[2, "module-opendp"], [3, "module-opendp.accuracy"], [4, "module-opendp.combinators"], [5, "module-opendp.context"], [6, "module-opendp.core"], [7, "module-opendp.domains"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.numpy"], [11, "module-opendp.extras.polars"], [12, "module-opendp.extras.sklearn"], [13, "module-opendp.extras.sklearn.decomposition"], [14, "module-opendp.measurements"], [15, "module-opendp.measures"], [16, "module-opendp.metrics"], [17, "module-opendp.mod"], [18, "module-opendp.prelude"], [19, "module-opendp.transformations"], [20, "module-opendp.typing"]], "opendp": [[2, "module-opendp"]], "accuracy_to_discrete_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_gaussian_scale"]], "accuracy_to_discrete_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_laplacian_scale"]], "accuracy_to_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_gaussian_scale"]], "accuracy_to_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_laplacian_scale"]], "discrete_gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_gaussian_scale_to_accuracy"]], "discrete_laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_laplacian_scale_to_accuracy"]], "gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.gaussian_scale_to_accuracy"]], "laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.laplacian_scale_to_accuracy"]], "opendp.accuracy": [[3, "module-opendp.accuracy"]], "summarize_polars_measurement() (in module opendp.accuracy)": [[3, "opendp.accuracy.summarize_polars_measurement"]], "make_approximate() (in module opendp.combinators)": [[4, "opendp.combinators.make_approximate"]], "make_basic_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_basic_composition"]], "make_chain_mt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_mt"]], "make_chain_pm() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_pm"]], "make_chain_tt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_tt"]], "make_fix_delta() (in module opendp.combinators)": [[4, "opendp.combinators.make_fix_delta"]], "make_fixed_approxdp_to_approxdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_fixed_approxDP_to_approxDP"]], "make_population_amplification() (in module opendp.combinators)": [[4, "opendp.combinators.make_population_amplification"]], "make_puredp_to_zcdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_pureDP_to_zCDP"]], "make_select_private_candidate() (in module opendp.combinators)": [[4, "opendp.combinators.make_select_private_candidate"]], "make_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_sequential_composition"]], "make_zcdp_to_approxdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_zCDP_to_approxDP"]], "opendp.combinators": [[4, "module-opendp.combinators"]], "then_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_sequential_composition"]], "context (class in opendp.context)": [[5, "opendp.context.Context"]], "partialchain (class in opendp.context)": [[5, "opendp.context.PartialChain"]], "query (class in opendp.context)": [[5, "opendp.context.Query"]], "accountant (opendp.context.context attribute)": [[5, "opendp.context.Context.accountant"]], "compositor() (opendp.context.context static method)": [[5, "opendp.context.Context.compositor"]], "compositor() (opendp.context.query method)": [[5, "opendp.context.Query.compositor"]], "deserialize_polars_plan() (opendp.context.context method)": [[5, "opendp.context.Context.deserialize_polars_plan"]], "domain_of() (in module opendp.context)": [[5, "opendp.context.domain_of"]], "fix() (opendp.context.partialchain method)": [[5, "opendp.context.PartialChain.fix"]], "loss_of() (in module opendp.context)": [[5, "opendp.context.loss_of"]], "metric_of() (in module opendp.context)": [[5, "opendp.context.metric_of"]], "new_with() (opendp.context.query method)": [[5, "opendp.context.Query.new_with"]], "opendp.context": [[5, "module-opendp.context"]], "param() (opendp.context.query method)": [[5, "opendp.context.Query.param"]], "partial (opendp.context.partialchain attribute)": [[5, "opendp.context.PartialChain.partial"]], "query() (opendp.context.context method)": [[5, "opendp.context.Context.query"]], "queryable (opendp.context.context attribute)": [[5, "opendp.context.Context.queryable"]], "register() (in module opendp.context)": [[5, "opendp.context.register"]], "release() (opendp.context.query method)": [[5, "opendp.context.Query.release"]], "resolve() (opendp.context.query method)": [[5, "opendp.context.Query.resolve"]], "space_of() (in module opendp.context)": [[5, "opendp.context.space_of"]], "unit_of() (in module opendp.context)": [[5, "opendp.context.unit_of"]], "wrap() (opendp.context.partialchain class method)": [[5, "opendp.context.PartialChain.wrap"]], "function_eval() (in module opendp.core)": [[6, "opendp.core.function_eval"]], "measurement_check() (in module opendp.core)": [[6, "opendp.core.measurement_check"]], "measurement_function() (in module opendp.core)": [[6, "opendp.core.measurement_function"]], "measurement_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_carrier_type"]], "measurement_input_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_distance_type"]], "measurement_input_domain() (in module opendp.core)": [[6, "opendp.core.measurement_input_domain"]], "measurement_input_metric() (in module opendp.core)": [[6, "opendp.core.measurement_input_metric"]], "measurement_invoke() (in module opendp.core)": [[6, "opendp.core.measurement_invoke"]], "measurement_map() (in module opendp.core)": [[6, "opendp.core.measurement_map"]], "measurement_output_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_output_distance_type"]], "measurement_output_measure() (in module opendp.core)": [[6, "opendp.core.measurement_output_measure"]], "new_function() (in module opendp.core)": [[6, "opendp.core.new_function"]], "new_queryable() (in module opendp.core)": [[6, "opendp.core.new_queryable"]], "opendp.core": [[6, "module-opendp.core"]], "queryable_eval() (in module opendp.core)": [[6, "opendp.core.queryable_eval"]], "queryable_query_type() (in module opendp.core)": [[6, "opendp.core.queryable_query_type"]], "transformation_check() (in module opendp.core)": [[6, "opendp.core.transformation_check"]], "transformation_function() (in module opendp.core)": [[6, "opendp.core.transformation_function"]], "transformation_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_carrier_type"]], "transformation_input_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_distance_type"]], "transformation_input_domain() (in module opendp.core)": [[6, "opendp.core.transformation_input_domain"]], "transformation_input_metric() (in module opendp.core)": [[6, "opendp.core.transformation_input_metric"]], "transformation_invoke() (in module opendp.core)": [[6, "opendp.core.transformation_invoke"]], "transformation_map() (in module opendp.core)": [[6, "opendp.core.transformation_map"]], "transformation_output_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_output_distance_type"]], "transformation_output_domain() (in module opendp.core)": [[6, "opendp.core.transformation_output_domain"]], "transformation_output_metric() (in module opendp.core)": [[6, "opendp.core.transformation_output_metric"]], "array_domain() (in module opendp.domains)": [[7, "opendp.domains.array_domain"]], "atom_domain() (in module opendp.domains)": [[7, "opendp.domains.atom_domain"]], "bitvector_domain() (in module opendp.domains)": [[7, "opendp.domains.bitvector_domain"]], "categorical_domain() (in module opendp.domains)": [[7, "opendp.domains.categorical_domain"]], "datetime_domain() (in module opendp.domains)": [[7, "opendp.domains.datetime_domain"]], "domain_carrier_type() (in module opendp.domains)": [[7, "opendp.domains.domain_carrier_type"]], "domain_debug() (in module opendp.domains)": [[7, "opendp.domains.domain_debug"]], "domain_type() (in module opendp.domains)": [[7, "opendp.domains.domain_type"]], "enum_domain() (in module opendp.domains)": [[7, "opendp.domains.enum_domain"]], "lazyframe_domain() (in module opendp.domains)": [[7, "opendp.domains.lazyframe_domain"]], "map_domain() (in module opendp.domains)": [[7, "opendp.domains.map_domain"]], "member() (in module opendp.domains)": [[7, "opendp.domains.member"]], "opendp.domains": [[7, "module-opendp.domains"]], "option_domain() (in module opendp.domains)": [[7, "opendp.domains.option_domain"]], "series_domain() (in module opendp.domains)": [[7, "opendp.domains.series_domain"]], "user_domain() (in module opendp.domains)": [[7, "opendp.domains.user_domain"]], "vector_domain() (in module opendp.domains)": [[7, "opendp.domains.vector_domain"]], "wild_expr_domain() (in module opendp.domains)": [[7, "opendp.domains.wild_expr_domain"]], "with_margin() (in module opendp.domains)": [[7, "opendp.domains.with_margin"]], "opendp.extras": [[8, "module-opendp.extras"]], "get_california_pums_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_california_pums_path"]], "get_france_lfs_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_france_lfs_path"]], "opendp.extras.examples": [[9, "module-opendp.extras.examples"]], "array2_domain() (in module opendp.extras.numpy)": [[10, "opendp.extras.numpy.array2_domain"]], "opendp.extras.numpy": [[10, "module-opendp.extras.numpy"]], "dpexpr (class in opendp.extras.polars)": [[11, "opendp.extras.polars.DPExpr"]], "lazyframequery (class in opendp.extras.polars)": [[11, "opendp.extras.polars.LazyFrameQuery"]], "lazygroupbyquery (class in opendp.extras.polars)": [[11, "opendp.extras.polars.LazyGroupByQuery"]], "margin (class in opendp.extras.polars)": [[11, "opendp.extras.polars.Margin"]], "onceframe (class in opendp.extras.polars)": [[11, "opendp.extras.polars.OnceFrame"]], "agg() (opendp.extras.polars.lazygroupbyquery method)": [[11, "opendp.extras.polars.LazyGroupByQuery.agg"]], "by (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.by"]], "collect() (opendp.extras.polars.onceframe method)": [[11, "opendp.extras.polars.OnceFrame.collect"]], "count() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.count"]], "dp_len() (in module opendp.extras.polars)": [[11, "opendp.extras.polars.dp_len"]], "filter() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.filter"]], "gaussian() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.gaussian"]], "group_by() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.group_by"]], "join() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.join"]], "laplace() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.laplace"]], "lazy() (opendp.extras.polars.onceframe method)": [[11, "opendp.extras.polars.OnceFrame.lazy"]], "len() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.len"]], "max_influenced_partitions (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_influenced_partitions"]], "max_num_partitions (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_num_partitions"]], "max_partition_contributions (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_partition_contributions"]], "max_partition_length (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_partition_length"]], "mean() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.mean"]], "median() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.median"]], "n_unique() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.n_unique"]], "noise() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.noise"]], "null_count() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.null_count"]], "opendp.extras.polars": [[11, "module-opendp.extras.polars"]], "public_info (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.public_info"]], "quantile() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.quantile"]], "release() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.release"]], "resolve() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.resolve"]], "select() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.select"]], "select_seq() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.select_seq"]], "sort() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.sort"]], "sum() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.sum"]], "summarize() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.summarize"]], "with_columns() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.with_columns"]], "with_columns_seq() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.with_columns_seq"]], "with_keys() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.with_keys"]], "opendp.extras.sklearn": [[12, "module-opendp.extras.sklearn"]], "pca (class in opendp.extras.sklearn.decomposition)": [[13, "opendp.extras.sklearn.decomposition.PCA"]], "pcaepsilons (class in opendp.extras.sklearn.decomposition)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons"]], "eigvals (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvals"]], "eigvecs (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvecs"]], "fit() (opendp.extras.sklearn.decomposition.pca method)": [[13, "opendp.extras.sklearn.decomposition.PCA.fit"]], "make_private_pca() (in module opendp.extras.sklearn.decomposition)": [[13, "opendp.extras.sklearn.decomposition.make_private_pca"]], "mean (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons.mean"]], "measurement() (opendp.extras.sklearn.decomposition.pca method)": [[13, "opendp.extras.sklearn.decomposition.PCA.measurement"]], "n_features (opendp.extras.sklearn.decomposition.pca attribute)": [[13, "opendp.extras.sklearn.decomposition.PCA.n_features"]], "opendp.extras.sklearn.decomposition": [[13, "module-opendp.extras.sklearn.decomposition"]], "debias_randomized_response_bitvec() (in module opendp.measurements)": [[14, "opendp.measurements.debias_randomized_response_bitvec"]], "make_alp_queryable() (in module opendp.measurements)": [[14, "opendp.measurements.make_alp_queryable"]], "make_gaussian() (in module opendp.measurements)": [[14, "opendp.measurements.make_gaussian"]], "make_geometric() (in module opendp.measurements)": [[14, "opendp.measurements.make_geometric"]], "make_laplace() (in module opendp.measurements)": [[14, "opendp.measurements.make_laplace"]], "make_laplace_threshold() (in module opendp.measurements)": [[14, "opendp.measurements.make_laplace_threshold"]], "make_private_expr() (in module opendp.measurements)": [[14, "opendp.measurements.make_private_expr"]], "make_private_lazyframe() (in module opendp.measurements)": [[14, "opendp.measurements.make_private_lazyframe"]], "make_private_quantile() (in module opendp.measurements)": [[14, "opendp.measurements.make_private_quantile"]], "make_randomized_response() (in module opendp.measurements)": [[14, "opendp.measurements.make_randomized_response"]], "make_randomized_response_bitvec() (in module opendp.measurements)": [[14, "opendp.measurements.make_randomized_response_bitvec"]], "make_randomized_response_bool() (in module opendp.measurements)": [[14, "opendp.measurements.make_randomized_response_bool"]], "make_report_noisy_max_gumbel() (in module opendp.measurements)": [[14, "opendp.measurements.make_report_noisy_max_gumbel"]], "make_user_measurement() (in module opendp.measurements)": [[14, "opendp.measurements.make_user_measurement"]], "opendp.measurements": [[14, "module-opendp.measurements"]], "then_alp_queryable() (in module opendp.measurements)": [[14, "opendp.measurements.then_alp_queryable"]], "then_gaussian() (in module opendp.measurements)": [[14, "opendp.measurements.then_gaussian"]], "then_geometric() (in module opendp.measurements)": [[14, "opendp.measurements.then_geometric"]], "then_laplace() (in module opendp.measurements)": [[14, "opendp.measurements.then_laplace"]], "then_laplace_threshold() (in module opendp.measurements)": [[14, "opendp.measurements.then_laplace_threshold"]], "then_private_expr() (in module opendp.measurements)": [[14, "opendp.measurements.then_private_expr"]], "then_private_lazyframe() (in module opendp.measurements)": [[14, "opendp.measurements.then_private_lazyframe"]], "then_private_quantile() (in module opendp.measurements)": [[14, "opendp.measurements.then_private_quantile"]], "then_randomized_response_bitvec() (in module opendp.measurements)": [[14, "opendp.measurements.then_randomized_response_bitvec"]], "then_report_noisy_max_gumbel() (in module opendp.measurements)": [[14, "opendp.measurements.then_report_noisy_max_gumbel"]], "then_user_measurement() (in module opendp.measurements)": [[14, "opendp.measurements.then_user_measurement"]], "approximate() (in module opendp.measures)": [[15, "opendp.measures.approximate"]], "fixed_smoothed_max_divergence() (in module opendp.measures)": [[15, "opendp.measures.fixed_smoothed_max_divergence"]], "max_divergence() (in module opendp.measures)": [[15, "opendp.measures.max_divergence"]], "measure_debug() (in module opendp.measures)": [[15, "opendp.measures.measure_debug"]], "measure_distance_type() (in module opendp.measures)": [[15, "opendp.measures.measure_distance_type"]], "measure_type() (in module opendp.measures)": [[15, "opendp.measures.measure_type"]], "new_privacy_profile() (in module opendp.measures)": [[15, "opendp.measures.new_privacy_profile"]], "opendp.measures": [[15, "module-opendp.measures"]], "renyi_divergence() (in module opendp.measures)": [[15, "opendp.measures.renyi_divergence"]], "smoothed_max_divergence() (in module opendp.measures)": [[15, "opendp.measures.smoothed_max_divergence"]], "user_divergence() (in module opendp.measures)": [[15, "opendp.measures.user_divergence"]], "zero_concentrated_divergence() (in module opendp.measures)": [[15, "opendp.measures.zero_concentrated_divergence"]], "absolute_distance() (in module opendp.metrics)": [[16, "opendp.metrics.absolute_distance"]], "change_one_distance() (in module opendp.metrics)": [[16, "opendp.metrics.change_one_distance"]], "discrete_distance() (in module opendp.metrics)": [[16, "opendp.metrics.discrete_distance"]], "hamming_distance() (in module opendp.metrics)": [[16, "opendp.metrics.hamming_distance"]], "insert_delete_distance() (in module opendp.metrics)": [[16, "opendp.metrics.insert_delete_distance"]], "l1_distance() (in module opendp.metrics)": [[16, "opendp.metrics.l1_distance"]], "l2_distance() (in module opendp.metrics)": [[16, "opendp.metrics.l2_distance"]], "linf_distance() (in module opendp.metrics)": [[16, "opendp.metrics.linf_distance"]], "metric_debug() (in module opendp.metrics)": [[16, "opendp.metrics.metric_debug"]], "metric_distance_type() (in module opendp.metrics)": [[16, "opendp.metrics.metric_distance_type"]], "metric_type() (in module opendp.metrics)": [[16, "opendp.metrics.metric_type"]], "opendp.metrics": [[16, "module-opendp.metrics"]], "partition_distance() (in module opendp.metrics)": [[16, "opendp.metrics.partition_distance"]], "symmetric_distance() (in module opendp.metrics)": [[16, "opendp.metrics.symmetric_distance"]], "user_distance() (in module opendp.metrics)": [[16, "opendp.metrics.user_distance"]], "atomdomain (class in opendp.mod)": [[17, "opendp.mod.AtomDomain"]], "domain (class in opendp.mod)": [[17, "opendp.mod.Domain"]], "extrinsicdomain (class in opendp.mod)": [[17, "opendp.mod.ExtrinsicDomain"]], "function (class in opendp.mod)": [[17, "opendp.mod.Function"]], "lazyframedomain (class in opendp.mod)": [[17, "opendp.mod.LazyFrameDomain"]], "measure (class in opendp.mod)": [[17, "opendp.mod.Measure"]], "measurement (class in opendp.mod)": [[17, "opendp.mod.Measurement"]], "metric (class in opendp.mod)": [[17, "opendp.mod.Metric"]], "opendpexception": [[17, "opendp.mod.OpenDPException"]], "optiondomain (class in opendp.mod)": [[17, "opendp.mod.OptionDomain"]], "privacyprofile (class in opendp.mod)": [[17, "opendp.mod.PrivacyProfile"]], "queryable (class in opendp.mod)": [[17, "opendp.mod.Queryable"]], "seriesdomain (class in opendp.mod)": [[17, "opendp.mod.SeriesDomain"]], "transformation (class in opendp.mod)": [[17, "opendp.mod.Transformation"]], "unknowntypeexception": [[17, "opendp.mod.UnknownTypeException"]], "vectordomain (class in opendp.mod)": [[17, "opendp.mod.VectorDomain"]], "assert_features() (in module opendp.mod)": [[17, "opendp.mod.assert_features"]], "binary_search() (in module opendp.mod)": [[17, "opendp.mod.binary_search"]], "binary_search_chain() (in module opendp.mod)": [[17, "opendp.mod.binary_search_chain"]], "binary_search_param() (in module opendp.mod)": [[17, "opendp.mod.binary_search_param"]], "bounds (opendp.mod.atomdomain attribute)": [[17, "opendp.mod.AtomDomain.bounds"]], "carrier_type (opendp.mod.domain attribute)": [[17, "opendp.mod.Domain.carrier_type"]], "check() (opendp.mod.measurement method)": [[17, "opendp.mod.Measurement.check"]], "check() (opendp.mod.transformation method)": [[17, "opendp.mod.Transformation.check"]], "columns (opendp.mod.lazyframedomain attribute)": [[17, "opendp.mod.LazyFrameDomain.columns"]], "delta() (opendp.mod.privacyprofile method)": [[17, "opendp.mod.PrivacyProfile.delta"]], "descriptor (opendp.mod.extrinsicdomain attribute)": [[17, "opendp.mod.ExtrinsicDomain.descriptor"]], "deserialize() (in module opendp.mod)": [[17, "opendp.mod.deserialize"]], "disable_features() (in module opendp.mod)": [[17, "opendp.mod.disable_features"]], "distance_type (opendp.mod.measure attribute)": [[17, "opendp.mod.Measure.distance_type"]], "distance_type (opendp.mod.metric attribute)": [[17, "opendp.mod.Metric.distance_type"]], "element_domain (opendp.mod.optiondomain attribute)": [[17, "opendp.mod.OptionDomain.element_domain"]], "element_domain (opendp.mod.seriesdomain attribute)": [[17, "opendp.mod.SeriesDomain.element_domain"]], "element_domain (opendp.mod.vectordomain attribute)": [[17, "opendp.mod.VectorDomain.element_domain"]], "enable_features() (in module opendp.mod)": [[17, "opendp.mod.enable_features"]], "epsilon() (opendp.mod.privacyprofile method)": [[17, "opendp.mod.PrivacyProfile.epsilon"]], "exponential_bounds_search() (in module opendp.mod)": [[17, "opendp.mod.exponential_bounds_search"]], "function (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.function"]], "function (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.function"]], "get_margin() (opendp.mod.lazyframedomain method)": [[17, "opendp.mod.LazyFrameDomain.get_margin"]], "get_series_domain() (opendp.mod.lazyframedomain method)": [[17, "opendp.mod.LazyFrameDomain.get_series_domain"]], "input_carrier_type (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_carrier_type"]], "input_carrier_type (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_carrier_type"]], "input_distance_type (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_distance_type"]], "input_distance_type (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_distance_type"]], "input_domain (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_domain"]], "input_domain (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_domain"]], "input_metric (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_metric"]], "input_metric (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_metric"]], "input_space (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_space"]], "input_space (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_space"]], "invoke() (opendp.mod.measurement method)": [[17, "opendp.mod.Measurement.invoke"]], "invoke() (opendp.mod.transformation method)": [[17, "opendp.mod.Transformation.invoke"]], "map() (opendp.mod.measurement method)": [[17, "opendp.mod.Measurement.map"]], "map() (opendp.mod.transformation method)": [[17, "opendp.mod.Transformation.map"]], "member() (opendp.mod.domain method)": [[17, "opendp.mod.Domain.member"]], "name (opendp.mod.seriesdomain attribute)": [[17, "opendp.mod.SeriesDomain.name"]], "nan (opendp.mod.atomdomain attribute)": [[17, "opendp.mod.AtomDomain.nan"]], "nullable (opendp.mod.seriesdomain attribute)": [[17, "opendp.mod.SeriesDomain.nullable"]], "opendp.mod": [[17, "module-opendp.mod"]], "output_distance_type (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.output_distance_type"]], "output_distance_type (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_distance_type"]], "output_domain (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_domain"]], "output_measure (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.output_measure"]], "output_metric (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_metric"]], "output_space (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_space"]], "raw_traceback (opendp.mod.opendpexception attribute)": [[17, "opendp.mod.OpenDPException.raw_traceback"]], "serialize() (in module opendp.mod)": [[17, "opendp.mod.serialize"]], "size (opendp.mod.vectordomain attribute)": [[17, "opendp.mod.VectorDomain.size"]], "type (opendp.mod.domain attribute)": [[17, "opendp.mod.Domain.type"]], "type (opendp.mod.measure attribute)": [[17, "opendp.mod.Measure.type"]], "type (opendp.mod.metric attribute)": [[17, "opendp.mod.Metric.type"]], "opendp.prelude": [[18, "module-opendp.prelude"]], "choose_branching_factor() (in module opendp.transformations)": [[19, "opendp.transformations.choose_branching_factor"]], "make_b_ary_tree() (in module opendp.transformations)": [[19, "opendp.transformations.make_b_ary_tree"]], "make_bounded_float_checked_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_float_checked_sum"]], "make_bounded_float_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_float_ordered_sum"]], "make_bounded_int_monotonic_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_int_monotonic_sum"]], "make_bounded_int_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_int_ordered_sum"]], "make_bounded_int_split_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_int_split_sum"]], "make_cast() (in module opendp.transformations)": [[19, "opendp.transformations.make_cast"]], "make_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.make_cast_default"]], "make_cast_inherent() (in module opendp.transformations)": [[19, "opendp.transformations.make_cast_inherent"]], "make_cdf() (in module opendp.transformations)": [[19, "opendp.transformations.make_cdf"]], "make_clamp() (in module opendp.transformations)": [[19, "opendp.transformations.make_clamp"]], "make_consistent_b_ary_tree() (in module opendp.transformations)": [[19, "opendp.transformations.make_consistent_b_ary_tree"]], "make_count() (in module opendp.transformations)": [[19, "opendp.transformations.make_count"]], "make_count_by() (in module opendp.transformations)": [[19, "opendp.transformations.make_count_by"]], "make_count_by_categories() (in module opendp.transformations)": [[19, "opendp.transformations.make_count_by_categories"]], "make_count_distinct() (in module opendp.transformations)": [[19, "opendp.transformations.make_count_distinct"]], "make_create_dataframe() (in module opendp.transformations)": [[19, "opendp.transformations.make_create_dataframe"]], "make_df_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.make_df_cast_default"]], "make_df_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.make_df_is_equal"]], "make_drop_null() (in module opendp.transformations)": [[19, "opendp.transformations.make_drop_null"]], "make_find() (in module opendp.transformations)": [[19, "opendp.transformations.make_find"]], "make_find_bin() (in module opendp.transformations)": [[19, "opendp.transformations.make_find_bin"]], "make_identity() (in module opendp.transformations)": [[19, "opendp.transformations.make_identity"]], "make_impute_constant() (in module opendp.transformations)": [[19, "opendp.transformations.make_impute_constant"]], "make_impute_uniform_float() (in module opendp.transformations)": [[19, "opendp.transformations.make_impute_uniform_float"]], "make_index() (in module opendp.transformations)": [[19, "opendp.transformations.make_index"]], "make_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.make_is_equal"]], "make_is_null() (in module opendp.transformations)": [[19, "opendp.transformations.make_is_null"]], "make_lipschitz_float_mul() (in module opendp.transformations)": [[19, "opendp.transformations.make_lipschitz_float_mul"]], "make_mean() (in module opendp.transformations)": [[19, "opendp.transformations.make_mean"]], "make_metric_bounded() (in module opendp.transformations)": [[19, "opendp.transformations.make_metric_bounded"]], "make_metric_unbounded() (in module opendp.transformations)": [[19, "opendp.transformations.make_metric_unbounded"]], "make_ordered_random() (in module opendp.transformations)": [[19, "opendp.transformations.make_ordered_random"]], "make_quantile_score_candidates() (in module opendp.transformations)": [[19, "opendp.transformations.make_quantile_score_candidates"]], "make_quantiles_from_counts() (in module opendp.transformations)": [[19, "opendp.transformations.make_quantiles_from_counts"]], "make_resize() (in module opendp.transformations)": [[19, "opendp.transformations.make_resize"]], "make_select_column() (in module opendp.transformations)": [[19, "opendp.transformations.make_select_column"]], "make_sized_bounded_float_checked_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_float_checked_sum"]], "make_sized_bounded_float_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_float_ordered_sum"]], "make_sized_bounded_int_checked_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_checked_sum"]], "make_sized_bounded_int_monotonic_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_monotonic_sum"]], "make_sized_bounded_int_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_ordered_sum"]], "make_sized_bounded_int_split_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_split_sum"]], "make_split_dataframe() (in module opendp.transformations)": [[19, "opendp.transformations.make_split_dataframe"]], "make_split_lines() (in module opendp.transformations)": [[19, "opendp.transformations.make_split_lines"]], "make_split_records() (in module opendp.transformations)": [[19, "opendp.transformations.make_split_records"]], "make_stable_expr() (in module opendp.transformations)": [[19, "opendp.transformations.make_stable_expr"]], "make_stable_lazyframe() (in module opendp.transformations)": [[19, "opendp.transformations.make_stable_lazyframe"]], "make_subset_by() (in module opendp.transformations)": [[19, "opendp.transformations.make_subset_by"]], "make_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sum"]], "make_sum_of_squared_deviations() (in module opendp.transformations)": [[19, "opendp.transformations.make_sum_of_squared_deviations"]], "make_unordered() (in module opendp.transformations)": [[19, "opendp.transformations.make_unordered"]], "make_user_transformation() (in module opendp.transformations)": [[19, "opendp.transformations.make_user_transformation"]], "make_variance() (in module opendp.transformations)": [[19, "opendp.transformations.make_variance"]], "opendp.transformations": [[19, "module-opendp.transformations"]], "then_b_ary_tree() (in module opendp.transformations)": [[19, "opendp.transformations.then_b_ary_tree"]], "then_cast() (in module opendp.transformations)": [[19, "opendp.transformations.then_cast"]], "then_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.then_cast_default"]], "then_cast_inherent() (in module opendp.transformations)": [[19, "opendp.transformations.then_cast_inherent"]], "then_clamp() (in module opendp.transformations)": [[19, "opendp.transformations.then_clamp"]], "then_count() (in module opendp.transformations)": [[19, "opendp.transformations.then_count"]], "then_count_by() (in module opendp.transformations)": [[19, "opendp.transformations.then_count_by"]], "then_count_by_categories() (in module opendp.transformations)": [[19, "opendp.transformations.then_count_by_categories"]], "then_count_distinct() (in module opendp.transformations)": [[19, "opendp.transformations.then_count_distinct"]], "then_df_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.then_df_cast_default"]], "then_df_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.then_df_is_equal"]], "then_drop_null() (in module opendp.transformations)": [[19, "opendp.transformations.then_drop_null"]], "then_find() (in module opendp.transformations)": [[19, "opendp.transformations.then_find"]], "then_find_bin() (in module opendp.transformations)": [[19, "opendp.transformations.then_find_bin"]], "then_identity() (in module opendp.transformations)": [[19, "opendp.transformations.then_identity"]], "then_impute_constant() (in module opendp.transformations)": [[19, "opendp.transformations.then_impute_constant"]], "then_impute_uniform_float() (in module opendp.transformations)": [[19, "opendp.transformations.then_impute_uniform_float"]], "then_index() (in module opendp.transformations)": [[19, "opendp.transformations.then_index"]], "then_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.then_is_equal"]], "then_is_null() (in module opendp.transformations)": [[19, "opendp.transformations.then_is_null"]], "then_lipschitz_float_mul() (in module opendp.transformations)": [[19, "opendp.transformations.then_lipschitz_float_mul"]], "then_mean() (in module opendp.transformations)": [[19, "opendp.transformations.then_mean"]], "then_metric_bounded() (in module opendp.transformations)": [[19, "opendp.transformations.then_metric_bounded"]], "then_metric_unbounded() (in module opendp.transformations)": [[19, "opendp.transformations.then_metric_unbounded"]], "then_ordered_random() (in module opendp.transformations)": [[19, "opendp.transformations.then_ordered_random"]], "then_quantile_score_candidates() (in module opendp.transformations)": [[19, "opendp.transformations.then_quantile_score_candidates"]], "then_resize() (in module opendp.transformations)": [[19, "opendp.transformations.then_resize"]], "then_stable_expr() (in module opendp.transformations)": [[19, "opendp.transformations.then_stable_expr"]], "then_stable_lazyframe() (in module opendp.transformations)": [[19, "opendp.transformations.then_stable_lazyframe"]], "then_sum() (in module opendp.transformations)": [[19, "opendp.transformations.then_sum"]], "then_sum_of_squared_deviations() (in module opendp.transformations)": [[19, "opendp.transformations.then_sum_of_squared_deviations"]], "then_unordered() (in module opendp.transformations)": [[19, "opendp.transformations.then_unordered"]], "then_variance() (in module opendp.transformations)": [[19, "opendp.transformations.then_variance"]], "carrier (class in opendp.typing)": [[20, "opendp.typing.Carrier"]], "runtimetype (class in opendp.typing)": [[20, "opendp.typing.RuntimeType"]], "sensitivitymetric (class in opendp.typing)": [[20, "opendp.typing.SensitivityMetric"]], "args (opendp.typing.runtimetype attribute)": [[20, "opendp.typing.RuntimeType.args"]], "get_atom() (in module opendp.typing)": [[20, "opendp.typing.get_atom"]], "get_atom_or_infer() (in module opendp.typing)": [[20, "opendp.typing.get_atom_or_infer"]], "get_carrier_type() (in module opendp.typing)": [[20, "opendp.typing.get_carrier_type"]], "get_distance_type() (in module opendp.typing)": [[20, "opendp.typing.get_distance_type"]], "get_first() (in module opendp.typing)": [[20, "opendp.typing.get_first"]], "get_type() (in module opendp.typing)": [[20, "opendp.typing.get_type"]], "get_value_type() (in module opendp.typing)": [[20, "opendp.typing.get_value_type"]], "infer() (opendp.typing.runtimetype class method)": [[20, "opendp.typing.RuntimeType.infer"]], "opendp.typing": [[20, "module-opendp.typing"]], "origin (opendp.typing.runtimetype attribute)": [[20, "opendp.typing.RuntimeType.origin"]], "parse() (opendp.typing.runtimetype class method)": [[20, "opendp.typing.RuntimeType.parse"]], "parse_or_infer() (in module opendp.typing)": [[20, "opendp.typing.parse_or_infer"]], "parse_or_infer() (opendp.typing.runtimetype class method)": [[20, "opendp.typing.RuntimeType.parse_or_infer"]], "pass_through() (in module opendp.typing)": [[20, "opendp.typing.pass_through"]], "set_default_float_type() (in module opendp.typing)": [[20, "opendp.typing.set_default_float_type"]], "set_default_int_type() (in module opendp.typing)": [[20, "opendp.typing.set_default_int_type"]]}})
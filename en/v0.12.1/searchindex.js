Search.setIndex({"docnames": ["api/index", "api/python/index", "api/python/opendp", "api/python/opendp.accuracy", "api/python/opendp.combinators", "api/python/opendp.context", "api/python/opendp.core", "api/python/opendp.domains", "api/python/opendp.extras", "api/python/opendp.extras.examples", "api/python/opendp.extras.numpy", "api/python/opendp.extras.polars", "api/python/opendp.extras.sklearn", "api/python/opendp.extras.sklearn.decomposition", "api/python/opendp.measurements", "api/python/opendp.measures", "api/python/opendp.metrics", "api/python/opendp.mod", "api/python/opendp.prelude", "api/python/opendp.transformations", "api/python/opendp.typing", "api/user-guide/combinators/compositors", "api/user-guide/combinators/index", "api/user-guide/context/index", "api/user-guide/index", "api/user-guide/limitations", "api/user-guide/measurements/additive-noise-mechanisms", "api/user-guide/measurements/index", "api/user-guide/measurements/randomized-response", "api/user-guide/plugins/index", "api/user-guide/plugins/measurement", "api/user-guide/plugins/selecting-grouping-columns", "api/user-guide/plugins/transformation", "api/user-guide/polars/data-types", "api/user-guide/polars/expressions/aggregation", "api/user-guide/polars/expressions/boolean", "api/user-guide/polars/expressions/columns", "api/user-guide/polars/expressions/index", "api/user-guide/polars/expressions/manipulation", "api/user-guide/polars/expressions/operators", "api/user-guide/polars/expressions/string", "api/user-guide/polars/expressions/temporal", "api/user-guide/polars/gaussian-noise", "api/user-guide/polars/index", "api/user-guide/polars/polars-vs-opendp", "api/user-guide/programming-framework/core-structures", "api/user-guide/programming-framework/index", "api/user-guide/programming-framework/supporting-elements", "api/user-guide/transformations/aggregation-mean", "api/user-guide/transformations/aggregation-quantile", "api/user-guide/transformations/aggregation-sum", "api/user-guide/transformations/index", "api/user-guide/utilities/index", "api/user-guide/utilities/parameter-search", "api/user-guide/utilities/serialization", "api/user-guide/utilities/typing", "contributing/cla", "contributing/contact", "contributing/contribution-process", "contributing/development-environment", "contributing/getting-involved", "contributing/index", "contributing/proof-initiation", "contributing/rust-initiation", "getting-started/assessing-utility/noise", "getting-started/examples/histograms", "getting-started/examples/index", "getting-started/examples/pums-data-analysis", "getting-started/examples/unknown-dataset-size", "getting-started/index", "getting-started/quickstart", "getting-started/statistical-modeling/index", "getting-started/statistical-modeling/pca", "getting-started/statistical-modeling/regression", "getting-started/tabular-data/essential-statistics", "getting-started/tabular-data/grouping", "getting-started/tabular-data/index", "getting-started/tabular-data/preparing-microdata", "getting-started/typical-workflow", "getting-started/utility/accuracy", "getting-started/utility/index", "index", "theory/a-framework-to-understand-dp", "theory/accuracy-pitfalls", "theory/attacks/differencing", "theory/attacks/index", "theory/attacks/membership", "theory/attacks/reconstruction", "theory/dp-with-opendp", "theory/index", "theory/resources"], "filenames": ["api/index.rst", "api/python/index.rst", "api/python/opendp.rst", "api/python/opendp.accuracy.rst", "api/python/opendp.combinators.rst", "api/python/opendp.context.rst", "api/python/opendp.core.rst", "api/python/opendp.domains.rst", "api/python/opendp.extras.rst", "api/python/opendp.extras.examples.rst", "api/python/opendp.extras.numpy.rst", "api/python/opendp.extras.polars.rst", "api/python/opendp.extras.sklearn.rst", "api/python/opendp.extras.sklearn.decomposition.rst", "api/python/opendp.measurements.rst", "api/python/opendp.measures.rst", "api/python/opendp.metrics.rst", "api/python/opendp.mod.rst", "api/python/opendp.prelude.rst", "api/python/opendp.transformations.rst", "api/python/opendp.typing.rst", "api/user-guide/combinators/compositors.rst", "api/user-guide/combinators/index.rst", "api/user-guide/context/index.rst", "api/user-guide/index.rst", "api/user-guide/limitations.rst", "api/user-guide/measurements/additive-noise-mechanisms.ipynb", "api/user-guide/measurements/index.rst", "api/user-guide/measurements/randomized-response.rst", "api/user-guide/plugins/index.rst", "api/user-guide/plugins/measurement.rst", "api/user-guide/plugins/selecting-grouping-columns.rst", "api/user-guide/plugins/transformation.rst", "api/user-guide/polars/data-types.ipynb", "api/user-guide/polars/expressions/aggregation.ipynb", "api/user-guide/polars/expressions/boolean.ipynb", "api/user-guide/polars/expressions/columns.ipynb", "api/user-guide/polars/expressions/index.rst", "api/user-guide/polars/expressions/manipulation.ipynb", "api/user-guide/polars/expressions/operators.ipynb", "api/user-guide/polars/expressions/string.ipynb", "api/user-guide/polars/expressions/temporal.ipynb", "api/user-guide/polars/gaussian-noise.ipynb", "api/user-guide/polars/index.rst", "api/user-guide/polars/polars-vs-opendp.rst", "api/user-guide/programming-framework/core-structures.rst", "api/user-guide/programming-framework/index.rst", "api/user-guide/programming-framework/supporting-elements.rst", "api/user-guide/transformations/aggregation-mean.rst", "api/user-guide/transformations/aggregation-quantile.ipynb", "api/user-guide/transformations/aggregation-sum.ipynb", "api/user-guide/transformations/index.rst", "api/user-guide/utilities/index.rst", "api/user-guide/utilities/parameter-search.rst", "api/user-guide/utilities/serialization.rst", "api/user-guide/utilities/typing.rst", "contributing/cla.rst", "contributing/contact.rst", "contributing/contribution-process.rst", "contributing/development-environment.rst", "contributing/getting-involved.rst", "contributing/index.rst", "contributing/proof-initiation.rst", "contributing/rust-initiation.rst", "getting-started/assessing-utility/noise.ipynb", "getting-started/examples/histograms.ipynb", "getting-started/examples/index.rst", "getting-started/examples/pums-data-analysis.ipynb", "getting-started/examples/unknown-dataset-size.ipynb", "getting-started/index.rst", "getting-started/quickstart.rst", "getting-started/statistical-modeling/index.rst", "getting-started/statistical-modeling/pca.rst", "getting-started/statistical-modeling/regression.ipynb", "getting-started/tabular-data/essential-statistics.ipynb", "getting-started/tabular-data/grouping.ipynb", "getting-started/tabular-data/index.rst", "getting-started/tabular-data/preparing-microdata.ipynb", "getting-started/typical-workflow.rst", "getting-started/utility/accuracy.rst", "getting-started/utility/index.rst", "index.rst", "theory/a-framework-to-understand-dp.ipynb", "theory/accuracy-pitfalls.ipynb", "theory/attacks/differencing.ipynb", "theory/attacks/index.rst", "theory/attacks/membership.ipynb", "theory/attacks/reconstruction.ipynb", "theory/dp-with-opendp.rst", "theory/index.rst", "theory/resources.rst"], "titles": ["API", "Python API Documentation", "opendp package", "opendp.accuracy module", "opendp.combinators module", "opendp.context module", "opendp.core module", "opendp.domains module", "opendp.extras package", "opendp.extras.examples package", "opendp.extras.numpy package", "opendp.extras.polars package", "opendp.extras.sklearn package", "opendp.extras.sklearn.decomposition package", "opendp.measurements module", "opendp.measures module", "opendp.metrics module", "opendp.mod module", "opendp.prelude module", "opendp.transformations module", "opendp.typing module", "Compositors", "Combinators", "Context", "API User Guide", "Limitations", "Additive Noise Mechanisms", "Measurements", "Randomized Response", "Plugins", "Measurement example", "Privately Selecting Grouping Columns", "Transformation example", "Data Types", "Aggregation", "Boolean", "Columns", "Expressions", "Manipulation", "Operators", "String", "Temporal", "Gaussian Noise", "Polars", "Polars vs. OpenDP", "Core Structures", "Programming Framework", "Supporting Elements", "Aggregation: Mean", "Aggregation: Quantile", "Aggregation: Sum", "Transformations", "Utilities", "Parameter Search", "Serialization", "Typing", "Contributor License Agreement", "Contact", "Contribution Process", "Development Environment", "Getting Involved", "Contributing", "OpenDP Proof Initiation", "OpenDP Rust Initiation", "What Noise Should I Choose?", "Privatizing Histograms", "More Examples", "Example Data Analysis", "Working with Unknown Dataset Sizes", "Getting Started", "Quickstart", "Statistical Modeling", "Differentially Private PCA", "Linear Regression", "Essential Statistics", "Grouping", "Working with Tabular Data", "Preparing Microdata", "Typical Workflow", "Accuracy", "Assessing Utility", "Welcome", "A Framework to Understand DP", "Accuracy: Pitfalls and Edge Cases", "Differencing", "Attacks", "Membership", "Reconstruction", "Differential Privacy with OpenDP", "Theory", "Resources List"], "terms": {"content": [0, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 69, 70, 71, 72, 76, 78, 79, 80, 81, 85, 88, 89, 90], "If": [0, 3, 4, 5, 7, 11, 14, 17, 19, 20, 22, 26, 27, 29, 31, 43, 46, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 74, 75, 76, 81, 82, 83, 86, 87, 88], "you": [0, 3, 4, 11, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88], "re": [0, 34, 45, 46, 49, 59, 63, 67, 74, 75, 81, 82, 87, 88], "new": [0, 4, 5, 7, 16, 17, 21, 22, 31, 49, 59, 60, 62, 63, 67, 70, 74, 77, 81, 82, 86, 87, 88], "opendp": [0, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 89, 90], "pleas": [0, 21, 25, 26, 28, 43, 48, 49, 50, 54, 56, 58, 60, 61, 63, 66, 72, 74, 88], "go": [0, 34, 62, 67, 75, 88], "back": [0, 33, 52, 58, 63, 75, 84], "get": [0, 3, 6, 7, 15, 16, 18, 20, 21, 22, 33, 34, 43, 46, 47, 49, 58, 61, 62, 63, 64, 65, 67, 68, 70, 73, 74, 75, 81, 82, 83, 84, 89], "start": [0, 5, 11, 14, 18, 23, 28, 34, 36, 43, 51, 53, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 73, 74, 81, 88, 89], "interest": [0, 21, 26, 28, 46, 48, 49, 50, 56, 59, 61, 67, 68, 72, 74, 82, 84, 88], "theori": [0, 14, 19, 26, 69, 79, 81], "behind": [0, 4, 44, 46, 64, 66, 88], "differenti": [0, 4, 6, 9, 11, 14, 15, 17, 19, 21, 24, 25, 26, 27, 29, 33, 37, 42, 44, 45, 46, 47, 51, 53, 59, 64, 66, 68, 69, 71, 74, 75, 76, 78, 82, 83, 84, 85, 89], "privaci": [0, 4, 5, 6, 9, 11, 14, 15, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 42, 44, 45, 46, 48, 49, 51, 53, 55, 58, 59, 62, 63, 64, 66, 68, 69, 73, 74, 75, 76, 77, 80, 84, 85, 89], "how": [0, 3, 4, 5, 11, 14, 17, 19, 21, 22, 25, 31, 34, 42, 44, 47, 50, 53, 58, 59, 62, 64, 66, 67, 68, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 86, 87, 88, 90], "implement": [0, 14, 15, 17, 25, 29, 40, 46, 50, 51, 60, 62, 63, 70, 74, 81, 86], "feel": [0, 20, 25, 60, 63], "free": [0, 52, 53, 59, 60, 63], "jump": 0, "ahead": [0, 67, 75], "document": [0, 3, 4, 6, 7, 11, 14, 15, 16, 19, 20, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 53, 58, 62, 63, 66, 67, 69, 70, 72, 76, 77, 80, 81, 88], "entri": [0, 14, 19, 29, 58, 87, 88], "point": [0, 10, 14, 17, 21, 22, 24, 25, 38, 51, 53, 59, 62, 65, 67, 68, 72, 74, 75, 78, 82, 86, 87, 88, 90], "user": [0, 3, 4, 5, 6, 7, 11, 14, 15, 16, 17, 19, 20, 26, 28, 29, 30, 31, 32, 34, 37, 46, 47, 54, 58, 59, 63, 64, 66, 67, 73, 76, 77, 78, 81, 82, 88], "guid": [0, 3, 4, 5, 6, 7, 11, 14, 15, 16, 19, 20, 26, 37, 55, 61, 63, 64, 66, 67, 73, 76, 77, 88], "python": [0, 4, 5, 8, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 47, 48, 51, 53, 54, 55, 60, 62, 63, 66, 69, 70, 72, 76, 78, 79, 81, 88], "refer": [0, 6, 14, 18, 22, 23, 24, 27, 33, 37, 45, 47, 51, 55, 62, 63, 65, 69, 74, 75, 76, 78, 79, 81, 82, 86], "r": [0, 3, 4, 6, 7, 8, 14, 15, 16, 19, 24, 26, 31, 38, 40, 41, 62, 63, 64, 66, 69, 70, 76, 78, 81, 82, 87], "rust": [0, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 19, 20, 24, 25, 26, 29, 51, 55, 60, 61, 62, 69, 70, 76, 81], "packag": [1, 3, 4, 6, 7, 14, 15, 16, 17, 19, 26, 59, 70, 76, 88], "subpackag": 1, "extra": [1, 2, 37, 44, 46, 62, 65, 83], "submodul": [1, 12, 18], "accuraci": [1, 2, 11, 17, 18, 19, 27, 53, 64, 68, 69, 73, 74, 75, 78, 80, 87, 89], "modul": [1, 26, 33, 40, 52, 55, 60, 63, 70, 88], "combin": [1, 2, 11, 18, 24, 31, 45, 47, 51, 67, 72, 75], "context": [1, 2, 3, 4, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 24, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 55, 56, 62, 66, 70, 74, 75, 77, 78, 82], "core": [1, 2, 3, 4, 7, 14, 15, 16, 17, 19, 26, 27, 47, 60, 63, 81], "domain": [1, 2, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 31, 33, 35, 38, 42, 45, 46, 48, 49, 51, 55, 63, 67, 68, 70, 74, 75, 76, 78, 82, 88], "measur": [1, 2, 3, 4, 5, 6, 11, 13, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 31, 46, 50, 51, 53, 54, 55, 59, 62, 64, 65, 66, 68, 70, 72, 73, 74, 76, 78, 82, 83, 88], "metric": [1, 2, 4, 5, 6, 10, 13, 14, 15, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 42, 45, 46, 49, 50, 55, 62, 63, 67, 70, 73, 82, 88], "mod": [1, 2, 5, 18, 20, 21, 22, 26, 47, 50, 53, 54, 62, 63, 66], "prelud": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 55, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 79, 83, 84, 86, 87, 88], "transform": [1, 2, 4, 5, 6, 7, 10, 11, 17, 18, 21, 22, 24, 25, 27, 29, 31, 34, 37, 38, 46, 47, 48, 49, 50, 52, 53, 55, 59, 62, 65, 66, 67, 68, 73, 82, 84], "type": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 26, 27, 30, 31, 34, 35, 38, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 62, 63, 64, 66, 67, 68, 73, 74, 82, 84, 88], "exampl": [2, 3, 4, 5, 7, 8, 11, 14, 15, 17, 18, 19, 20, 21, 22, 27, 31, 33, 34, 36, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 53, 55, 58, 59, 60, 64, 65, 69, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87, 89, 90], "numpi": [2, 4, 8, 14, 26, 28, 49, 55, 64, 68, 72, 73, 82, 83, 84, 86, 87], "polar": [2, 3, 7, 8, 14, 19, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 59, 64, 74, 75, 76, 77], "sklearn": [2, 8, 72], "accuracy_to_discrete_gaussian_scal": [2, 3], "accuracy_to_discrete_laplacian_scal": [2, 3], "accuracy_to_gaussian_scal": [2, 3, 27, 79], "accuracy_to_laplacian_scal": [2, 3, 17, 27, 79], "discrete_gaussian_scale_to_accuraci": [2, 3], "discrete_laplacian_scale_to_accuraci": [2, 3, 78], "gaussian_scale_to_accuraci": [2, 3, 27, 79], "laplacian_scale_to_accuraci": [2, 3, 27, 79, 83], "summarize_polars_measur": [2, 3], "make_approxim": [2, 4, 21, 22], "make_basic_composit": [2, 4, 18, 21, 22, 48, 67, 73], "make_chain_mt": [2, 4, 22, 54], "make_chain_pm": [2, 4, 22], "make_chain_tt": [2, 4, 22], "make_fix_delta": [2, 4, 17, 21, 22, 67, 87], "make_population_amplif": [2, 4, 22, 67], "make_puredp_to_zcdp": [2, 4, 22], "make_select_private_candid": [2, 4], "make_sequential_composit": [2, 4, 5, 17, 21, 22, 78], "make_zcdp_to_approxdp": [2, 4, 17, 21, 22, 67, 87], "then_sequential_composit": [2, 4], "account": [2, 5, 6, 22, 26, 38, 44, 50, 51, 60, 68, 74, 75, 78, 82, 88], "compositor": [2, 4, 5, 11, 22, 23, 33, 34, 36, 38, 39, 40, 41, 42, 47, 64, 72, 74, 75, 77, 78], "queri": [2, 3, 4, 5, 6, 11, 17, 21, 23, 26, 27, 33, 34, 36, 38, 39, 40, 41, 42, 44, 47, 49, 50, 51, 53, 57, 59, 64, 66, 68, 74, 75, 76, 77, 86, 87], "queryabl": [2, 4, 5, 6, 11, 14, 17, 21, 78], "partialchain": [2, 5], "fix": [2, 4, 5, 11, 15, 17, 22, 26, 50, 51, 53, 58, 62, 67, 68, 75, 76, 82, 85, 88], "partial": [2, 4, 5, 14, 19, 59], "wrap": [2, 5, 17, 22, 23, 63], "new_with": [2, 5], "param": [2, 5, 26, 78, 86, 87], "releas": [2, 3, 4, 5, 6, 11, 13, 14, 17, 21, 22, 23, 25, 27, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 58, 62, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 90], "resolv": [2, 5, 11, 50, 77], "domain_of": [2, 5], "loss_of": [2, 5, 11, 17, 23, 33, 34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 76, 77, 78], "metric_of": [2, 5], "space_of": [2, 5, 17], "unit_of": [2, 5, 11, 23, 33, 34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 76, 77, 78], "function_ev": [2, 6], "measurement_check": [2, 6], "measurement_funct": [2, 6], "measurement_input_carrier_typ": [2, 6], "measurement_input_distance_typ": [2, 6], "measurement_input_domain": [2, 6], "measurement_input_metr": [2, 6], "measurement_invok": [2, 6], "measurement_map": [2, 6], "measurement_output_distance_typ": [2, 6], "measurement_output_measur": [2, 6], "new_funct": [2, 6, 29], "new_query": [2, 6, 17], "queryable_ev": [2, 6], "queryable_query_typ": [2, 6], "transformation_check": [2, 6], "transformation_funct": [2, 6], "transformation_input_carrier_typ": [2, 6], "transformation_input_distance_typ": [2, 6], "transformation_input_domain": [2, 6], "transformation_input_metr": [2, 6], "transformation_invok": [2, 6], "transformation_map": [2, 6], "transformation_output_distance_typ": [2, 6], "transformation_output_domain": [2, 6], "transformation_output_metr": [2, 6], "atom_domain": [2, 3, 4, 5, 7, 14, 17, 19, 21, 22, 26, 30, 31, 32, 47, 48, 49, 50, 51, 53, 54, 55, 63, 67, 68, 70, 73, 78, 84, 86, 87, 88], "bitvector_domain": [2, 7, 14], "categorical_domain": [2, 7], "datetime_domain": [2, 7], "domain_carrier_typ": [2, 7], "domain_debug": [2, 7], "domain_typ": [2, 7], "lazyframe_domain": [2, 3, 7, 14], "map_domain": [2, 7], "member": [2, 4, 5, 6, 7, 11, 17, 18, 19, 31, 45, 47, 48, 55, 63, 65, 86, 87, 88], "option_domain": [2, 7, 19], "series_domain": [2, 3, 7, 14], "user_domain": [2, 5, 7, 29, 31, 54], "vector_domain": [2, 5, 7, 14, 17, 19, 21, 22, 26, 30, 31, 32, 47, 48, 49, 50, 51, 53, 54, 63, 67, 68, 73, 78, 84, 86, 87, 88], "wild_expr_domain": [2, 7], "with_margin": [2, 3, 7, 14], "debias_randomized_response_bitvec": [2, 14], "make_alp_query": [2, 14], "make_gaussian": [2, 14, 26, 27, 51, 53, 79], "make_geometr": [2, 14, 27], "make_laplac": [2, 14, 17, 22, 26, 27, 51, 67, 79, 88], "make_laplace_threshold": [2, 14, 27, 51, 79], "make_private_expr": [2, 14], "make_private_lazyfram": [2, 3, 11, 14], "make_randomized_respons": [2, 14, 27, 28], "make_randomized_response_bitvec": [2, 14], "make_randomized_response_bool": [2, 14, 27, 28], "make_report_noisy_max_gumbel": [2, 14, 73], "make_user_measur": [2, 14, 29, 30], "then_alp_query": [2, 14], "then_gaussian": [2, 14, 17, 21, 22, 53, 67, 87], "then_geometr": [2, 14], "then_laplac": [2, 14, 17, 18, 21, 22, 32, 48, 49, 54, 65, 67, 68, 70, 78, 83, 84, 86, 88], "then_laplace_threshold": [2, 14, 65], "then_private_expr": [2, 14], "then_private_lazyfram": [2, 14], "then_randomized_response_bitvec": [2, 14], "then_report_noisy_max_gumbel": [2, 14, 31], "then_user_measur": [2, 4, 14, 29], "approxim": [2, 4, 5, 14, 15, 19, 21, 22, 27, 42, 47, 49, 64, 82, 83, 87], "fixed_smoothed_max_diverg": [2, 15], "max_diverg": [2, 3, 4, 14, 15, 21, 30, 78, 88], "measure_debug": [2, 15], "measure_distance_typ": [2, 15], "measure_typ": [2, 15], "new_privacy_profil": [2, 15, 17, 29], "renyi_diverg": [2, 15], "smoothed_max_diverg": [2, 15], "user_diverg": [2, 15, 29], "zero_concentrated_diverg": [2, 15, 21], "absolute_dist": [2, 4, 14, 16, 17, 22, 26, 30, 53, 62, 70, 88], "change_one_dist": [2, 16], "discrete_dist": [2, 14, 16], "hamming_dist": [2, 16], "insert_delete_dist": [2, 16, 50], "l1_distanc": [2, 14, 16, 26, 86], "l2_distanc": [2, 14, 16, 26], "linf_dist": [2, 14, 16, 31, 73], "metric_debug": [2, 16], "metric_distance_typ": [2, 16], "metric_typ": [2, 16], "partition_dist": [2, 16], "symmetric_dist": [2, 3, 5, 10, 13, 14, 16, 17, 21, 22, 30, 31, 32, 47, 48, 49, 50, 51, 53, 54, 63, 67, 68, 73, 78, 84, 86, 87, 88], "user_dist": [2, 16, 29], "carrier_typ": [2, 17], "descriptor": [2, 7, 11, 15, 16, 17, 20, 33, 34, 35, 38, 42, 47, 55, 68, 74, 75, 77], "function": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 28, 30, 31, 32, 35, 41, 45, 46, 48, 49, 51, 53, 54, 55, 59, 63, 64, 65, 66, 67, 68, 71, 74, 76, 77, 78, 79, 82, 83, 86, 87, 88], "distance_typ": [2, 17], "check": [2, 6, 7, 17, 19, 20, 22, 38, 47, 48, 50, 51, 53, 58, 59, 60, 63, 67, 87, 88], "input_carrier_typ": [2, 17], "input_distance_typ": [2, 17], "input_domain": [2, 4, 10, 13, 14, 17, 19, 21, 22, 26, 30, 31, 32, 45, 47, 48, 63, 67, 68, 73, 78, 79, 86, 88], "input_metr": [2, 4, 10, 13, 14, 17, 19, 21, 26, 30, 31, 32, 45, 47, 63, 67, 68, 73, 78, 79, 88], "input_spac": [2, 14, 17, 21, 22, 26, 48, 49, 50, 53, 68, 73, 87], "invok": [2, 4, 6, 15, 17, 21, 22, 26, 28, 45, 47, 63, 67, 70, 88], "map": [2, 4, 6, 14, 15, 17, 19, 21, 22, 26, 28, 30, 31, 32, 45, 46, 48, 50, 51, 53, 62, 63, 65, 67, 68, 78, 83, 86, 87, 88], "output_distance_typ": [2, 17], "output_measur": [2, 4, 5, 14, 17, 21, 30, 45, 47, 63, 73, 78, 88], "opendpexcept": [2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 19, 21, 22, 26, 33, 40], "raw_traceback": [2, 17], "privacyprofil": [2, 15, 17], "delta": [2, 4, 5, 15, 17, 19, 21, 22, 26, 28, 33, 38, 39, 40, 41, 42, 45, 47, 65, 67, 75, 77, 82, 86, 87, 88], "epsilon": [2, 5, 11, 13, 14, 15, 17, 22, 23, 26, 27, 28, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 45, 47, 48, 49, 64, 65, 67, 68, 72, 74, 75, 76, 77, 78, 82, 83, 84, 86, 87, 88], "output_domain": [2, 17, 19, 21, 22, 31, 32, 45, 47, 63, 73, 82], "output_metr": [2, 17, 19, 21, 22, 31, 32, 45, 47, 51, 63, 73], "output_spac": [2, 17, 67], "unknowntypeexcept": [2, 3, 4, 6, 7, 14, 15, 16, 17, 19, 20, 26], "assert_featur": [2, 17, 31], "binary_search": [2, 17, 53, 65, 67, 87], "binary_search_chain": [2, 17, 49, 53, 65, 67, 68, 78], "binary_search_param": [2, 17, 21, 53, 67, 83, 86], "deseri": [2, 17, 54], "disable_featur": [2, 17], "enable_featur": [2, 3, 4, 14, 15, 17, 18, 21, 22, 24, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 83, 84, 86, 87, 88], "exponential_bounds_search": [2, 17, 53], "serial": [2, 17, 52], "choose_branching_factor": [2, 19, 49], "make_b_ary_tre": [2, 19, 51], "make_bounded_float_checked_sum": [2, 19, 50, 51], "make_bounded_float_ordered_sum": [2, 19, 51], "make_bounded_int_monotonic_sum": [2, 19, 51], "make_bounded_int_ordered_sum": [2, 19, 50, 51], "make_bounded_int_split_sum": [2, 19, 51], "make_cast": [2, 19, 22, 51], "make_cast_default": [2, 19, 49, 51, 63], "make_cast_inher": [2, 19, 51], "make_cdf": [2, 19], "make_clamp": [2, 19, 22, 47, 51, 78, 88], "make_consistent_b_ary_tre": [2, 19, 49, 51], "make_count": [2, 19, 51, 67, 78], "make_count_bi": [2, 19, 27, 51], "make_count_by_categori": [2, 17, 19, 51], "make_count_distinct": [2, 19, 51], "make_create_datafram": [2, 19], "make_df_cast_default": [2, 19], "make_df_is_equ": [2, 19], "make_drop_nul": [2, 19, 51], "make_find": [2, 19, 51], "make_find_bin": [2, 19, 51], "make_ident": [2, 19], "make_impute_const": [2, 19, 22, 51], "make_impute_uniform_float": [2, 19, 51], "make_index": [2, 19, 51], "make_is_equ": [2, 19, 51], "make_is_nul": [2, 19, 51], "make_lipschitz_float_mul": [2, 19], "make_mean": [2, 17, 19, 48, 51, 53, 86], "make_metric_bound": [2, 19, 51], "make_metric_unbound": [2, 19, 51], "make_ordered_random": [2, 19, 51], "make_quantile_score_candid": [2, 19, 73], "make_quantiles_from_count": [2, 19, 49, 51], "make_res": [2, 19, 22, 51], "make_select_column": [2, 19, 65, 67, 73, 83, 84], "make_sized_bounded_float_checked_sum": [2, 19, 50, 51], "make_sized_bounded_float_ordered_sum": [2, 19, 51], "make_sized_bounded_int_checked_sum": [2, 19, 50, 51], "make_sized_bounded_int_monotonic_sum": [2, 19, 51], "make_sized_bounded_int_ordered_sum": [2, 19, 51], "make_sized_bounded_int_split_sum": [2, 19, 51], "make_split_datafram": [2, 19, 65, 67, 83, 84], "make_split_lin": [2, 17, 19], "make_split_record": [2, 19], "make_stable_expr": [2, 19], "make_stable_lazyfram": [2, 19], "make_subset_bi": [2, 19], "make_sum": [2, 17, 19, 22, 47, 48, 50, 51, 53, 67, 88], "make_sum_of_squared_devi": [2, 19], "make_unord": [2, 19, 51], "make_user_transform": [2, 19, 29, 31, 32, 73], "make_vari": [2, 19, 51, 67], "then_b_ary_tre": [2, 19, 49], "then_cast": [2, 19, 67, 83, 84], "then_cast_default": [2, 17, 19, 21, 32, 67], "then_cast_inher": [2, 19], "then_clamp": [2, 17, 19, 21, 32, 48, 54, 67, 68, 83, 84, 88], "then_count": [2, 17, 19, 21, 48, 67, 68, 87], "then_count_bi": [2, 19, 65], "then_count_by_categori": [2, 19, 49, 65], "then_count_distinct": [2, 19], "then_df_cast_default": [2, 19], "then_df_is_equ": [2, 19], "then_drop_nul": [2, 19], "then_find": [2, 19, 51], "then_find_bin": [2, 19, 49], "then_ident": [2, 19], "then_impute_const": [2, 19, 51, 67, 83, 84], "then_impute_uniform_float": [2, 19], "then_index": [2, 19, 49], "then_is_equ": [2, 19], "then_is_nul": [2, 19], "then_mean": [2, 17, 19, 22, 48, 67, 68, 78, 83, 84], "then_metric_bound": [2, 19], "then_metric_unbound": [2, 19], "then_ordered_random": [2, 19], "then_quantile_score_candid": [2, 19], "then_res": [2, 17, 19, 48, 67, 68, 78, 83, 84], "then_stable_expr": [2, 19], "then_stable_lazyfram": [2, 19], "then_sum": [2, 17, 18, 19, 21, 30, 32, 48, 50, 54, 67, 68, 88], "then_sum_of_squared_devi": [2, 19], "then_unord": [2, 19], "then_vari": [2, 19, 67], "carrier": [2, 5, 6, 7, 14, 17, 19, 20, 26], "domaindescriptor": [2, 20], "runtimetyp": [2, 20, 26], "arg": [2, 5, 6, 17, 20, 32, 63, 70, 78], "infer": [2, 5, 17, 19, 20, 28, 40, 62, 67, 84, 86], "origin": [2, 9, 10, 17, 19, 20, 47, 53, 68, 75, 81], "pars": [2, 3, 4, 6, 7, 14, 15, 16, 19, 20, 26, 33, 37, 38, 39, 40, 41, 44, 67, 75, 77, 84], "parse_or_inf": [2, 20], "substitut": [2, 20, 51, 59], "sensitivitymetr": [2, 19, 20], "get_atom": [2, 20], "get_atom_or_inf": [2, 20], "get_carrier_typ": [2, 20], "get_distance_typ": [2, 20], "get_first": [2, 20], "get_typ": [2, 20], "get_value_typ": [2, 20], "pass_through": [2, 20], "set_default_float_typ": [2, 20, 55], "set_default_int_typ": [2, 20, 55], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 42, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90], "provid": [3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 46, 47, 49, 51, 53, 62, 63, 64, 66, 71, 72, 73, 74, 75, 78, 79, 82, 83, 86, 87, 88, 90], "convert": [3, 14, 19, 21, 22, 26, 27, 47, 51, 67, 79, 83, 84], "between": [3, 4, 5, 14, 15, 16, 17, 19, 20, 22, 25, 26, 38, 42, 45, 46, 47, 50, 51, 54, 55, 62, 63, 64, 65, 73, 74, 75, 77, 78, 79, 80, 87, 88], "scale": [3, 11, 14, 17, 21, 22, 26, 31, 34, 38, 42, 44, 46, 49, 50, 53, 54, 64, 65, 67, 68, 70, 73, 74, 75, 78, 79, 82, 83, 84, 86, 87, 88], "paramet": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 38, 47, 48, 52, 55, 62, 64, 65, 67, 68, 73, 74, 75, 82, 87], "For": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 37, 38, 40, 42, 47, 50, 51, 55, 58, 59, 62, 63, 64, 67, 68, 69, 71, 74, 75, 76, 77, 81, 82, 83, 86, 89, 90], "more": [3, 4, 5, 6, 7, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 31, 34, 37, 38, 42, 45, 46, 47, 49, 50, 51, 53, 55, 59, 60, 62, 63, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88], "see": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 37, 45, 46, 47, 51, 55, 59, 63, 64, 66, 67, 68, 69, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89], "conveni": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 55, 63, 68, 72], "all": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 31, 33, 34, 35, 38, 39, 45, 46, 47, 49, 50, 51, 53, 55, 59, 60, 63, 65, 67, 68, 70, 74, 75, 76, 77, 78, 82, 86, 87, 88], "thi": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89], "also": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 31, 33, 34, 37, 40, 44, 45, 46, 47, 50, 51, 53, 55, 58, 59, 60, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 78, 79, 82, 84, 86, 87, 88], "avail": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 27, 45, 51, 59, 63, 64, 65, 68, 70, 78], "from": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 58, 59, 60, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90], "we": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88], "suggest": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 59, 60, 83], "import": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 55, 59, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 86, 87, 88], "under": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 26, 31, 37, 42, 68, 74, 78, 88], "convent": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 58, 63, 68], "name": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 24, 36, 44, 51, 55, 58, 59, 62, 63, 67, 68, 82, 83, 87], "dp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 88, 89, 90], "alpha": [3, 5, 11, 14, 15, 17, 19, 42, 49, 74, 75, 78, 79, 82, 83, 86], "t": [3, 4, 5, 7, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 59, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 82, 83, 84, 86, 87, 88], "none": [3, 4, 5, 6, 7, 10, 11, 13, 14, 17, 19, 20, 26, 68, 70, 72, 86, 87], "sourc": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 49, 59, 63, 70, 73, 74, 78], "desir": [3, 46, 74], "toler": 3, "discret": [3, 14, 22, 26, 27, 28, 67], "gaussian": [3, 11, 14, 17, 43, 67, 78, 79, 83, 87], "nois": [3, 11, 14, 17, 19, 23, 34, 38, 43, 46, 49, 51, 53, 59, 65, 67, 68, 70, 73, 74, 75, 76, 79, 81, 82, 83, 86, 87, 88, 90], "statist": [3, 9, 11, 31, 34, 38, 42, 44, 51, 64, 67, 68, 69, 75, 76, 78, 79, 81, 82, 86, 87, 90], "signific": [3, 11, 59, 60, 74, 79, 86, 90], "level": [3, 11, 17, 21, 23, 27, 28, 38, 46, 47, 51, 63, 65, 70, 72, 74, 75, 78, 79, 81, 82, 83], "http": [3, 4, 6, 7, 14, 15, 16, 19, 22, 26, 31, 59, 67, 70, 86, 87], "doc": [3, 4, 6, 7, 14, 15, 16, 17, 19, 26, 31, 55, 60, 62, 66], "0": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 53, 54, 55, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 86, 87, 88], "12": [3, 4, 6, 7, 14, 15, 16, 19, 20, 26, 33, 40, 65, 73, 74, 75, 82, 86, 87], "1": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 53, 55, 59, 62, 63, 64, 65, 67, 68, 70, 72, 74, 75, 76, 77, 79, 82, 83, 84, 86, 87, 88], "fn": [3, 4, 6, 7, 14, 15, 16, 19, 26, 62, 63, 70], "html": [3, 4, 6, 7, 14, 15, 16, 19, 26, 31], "proof": [3, 4, 14, 15, 19, 21, 26, 28, 47, 48, 49, 50, 58, 59, 61, 63, 72, 88], "definit": [3, 4, 14, 15, 16, 19, 42, 45, 46, 47, 62, 63, 64, 70, 76, 81], "org": [3, 4, 14, 19, 26, 31, 56, 57, 81], "en": [3, 4, 14, 19], "v0": [3, 4, 14, 19], "src": [3, 4, 14, 19, 59, 62, 63], "pdf": [3, 4, 14, 19, 26, 62, 82, 86], "A": [3, 4, 5, 6, 7, 9, 11, 14, 15, 16, 17, 19, 20, 21, 28, 31, 33, 34, 36, 45, 46, 47, 49, 50, 51, 55, 58, 59, 62, 63, 67, 72, 74, 78, 81, 85, 86, 87, 88, 89, 90], "far": [3, 17, 26, 50, 64], "valu": [3, 4, 5, 6, 7, 11, 13, 14, 15, 17, 19, 20, 26, 27, 30, 31, 33, 34, 35, 38, 45, 46, 47, 50, 51, 53, 59, 62, 63, 64, 65, 67, 70, 73, 74, 75, 78, 79, 82, 83, 86, 87], "mai": [3, 4, 5, 11, 17, 19, 20, 21, 25, 26, 28, 30, 32, 33, 34, 35, 36, 38, 44, 45, 47, 48, 49, 50, 51, 52, 55, 58, 60, 62, 63, 64, 65, 67, 68, 72, 74, 75, 76, 78, 79, 82, 84, 86, 88], "diverg": [3, 15, 17, 30, 46, 47, 59, 63], "input": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 26, 27, 28, 33, 35, 38, 39, 40, 45, 46, 47, 48, 50, 51, 53, 55, 62, 63, 65, 67, 68, 73, 74, 77, 78, 79, 82, 86, 87, 88], "mechan": [3, 4, 14, 15, 17, 19, 22, 25, 28, 29, 30, 31, 42, 49, 51, 64, 67, 70, 74, 78, 79, 83, 86, 90], "100": [3, 11, 14, 17, 22, 23, 26, 38, 44, 49, 50, 67, 68, 73, 78, 79, 82, 83, 84, 86, 87], "confid": [3, 11, 17, 74, 75, 79, 82, 86], "must": [3, 4, 5, 6, 7, 11, 14, 15, 16, 19, 20, 21, 25, 26, 28, 33, 44, 51, 53, 62, 63, 67, 75, 77, 82, 88], "within": [3, 15, 17, 19, 21, 25, 46, 51, 59, 62, 75, 82, 83, 86, 87], "argument": [3, 4, 6, 7, 14, 15, 16, 17, 19, 20, 21, 24, 26, 27, 28, 38, 39, 40, 44, 50, 51, 53, 59, 62, 63, 66, 67, 88], "data": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 19, 20, 21, 22, 23, 26, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 63, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 81, 82, 83, 85, 86, 87, 88, 89, 90], "rais": [3, 4, 6, 7, 11, 13, 14, 15, 16, 17, 19, 20, 23, 26, 33, 44], "typeerror": [3, 4, 6, 7, 14, 15, 16, 17, 19, 26, 67], "an": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 62, 63, 66, 67, 68, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89], "": [3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 19, 22, 25, 26, 27, 28, 31, 34, 42, 45, 46, 47, 50, 53, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90], "differ": [3, 4, 5, 6, 7, 11, 14, 15, 16, 17, 19, 21, 26, 28, 31, 33, 34, 38, 42, 44, 45, 46, 50, 51, 53, 58, 59, 62, 63, 64, 68, 73, 74, 75, 78, 79, 82, 83, 86, 88, 89], "expect": [3, 4, 5, 6, 7, 11, 14, 15, 16, 19, 22, 25, 26, 28, 30, 33, 47, 48, 50, 62, 67, 68, 75, 83, 84, 86, 87, 88], "fail": [3, 4, 6, 7, 11, 14, 15, 16, 17, 19, 20, 22, 26, 38, 51, 53, 67, 84, 86], "error": [3, 4, 6, 7, 14, 15, 16, 17, 19, 20, 26, 33, 38, 39, 40, 44, 47, 48, 49, 50, 53, 59, 62, 63, 68, 70, 74, 75, 77, 82, 83], "librari": [3, 4, 6, 7, 11, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 30, 31, 32, 34, 36, 38, 42, 46, 47, 50, 51, 53, 55, 58, 59, 60, 61, 62, 63, 65, 67, 69, 70, 72, 73, 74, 75, 76, 78, 79, 81, 82, 84, 88, 89, 90], "laplacian": [3, 64, 74, 79, 82, 84], "return": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 26, 28, 30, 31, 32, 34, 38, 44, 47, 49, 53, 62, 63, 64, 65, 67, 68, 72, 73, 75, 77, 82, 83, 86, 87, 88], "meet": [3, 34, 67, 79], "requir": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 28, 30, 32, 33, 38, 40, 46, 50, 51, 56, 58, 59, 62, 64, 67, 73, 74, 76, 78], "given": [3, 4, 5, 6, 11, 15, 17, 19, 20, 21, 34, 38, 42, 53, 58, 65, 67, 68, 73, 74, 75, 76, 79, 82, 84, 86, 88], "estim": [3, 11, 14, 19, 21, 27, 28, 34, 42, 48, 51, 65, 67, 68, 72, 74, 75, 79, 83, 84, 86, 87, 90], "p": [3, 10, 14, 19, 28, 73, 83], "y": [3, 13, 14, 15, 16, 26, 40, 41, 64, 68, 73, 75, 86], "ge": [3, 15, 16, 47, 62, 82], "where": [3, 4, 5, 11, 13, 14, 15, 19, 21, 22, 25, 26, 36, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 62, 63, 64, 67, 68, 73, 74, 75, 76, 78, 82, 83, 84, 86, 87], "x": [3, 4, 10, 13, 14, 15, 16, 17, 19, 26, 28, 31, 36, 47, 64, 65, 68, 73, 75, 82, 87, 88], "z": [3, 16, 86], "sim": [3, 15, 68], "mathcal": 3, "l": [3, 10, 31, 36, 38, 48, 50, 51, 82, 88], "_": [3, 13, 15, 28, 31, 44, 49, 54, 73, 78, 83, 87], "That": [3, 15, 21, 24, 26, 27, 48, 59, 81, 82], "i": [3, 4, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 86, 87, 88, 89, 90], "laplac": [3, 4, 11, 14, 17, 22, 23, 27, 34, 38, 42, 44, 46, 55, 67, 70, 74, 75, 78, 79, 82, 83, 86, 90], "random": [3, 4, 14, 19, 31, 45, 46, 47, 49, 50, 72, 73, 78, 81, 82, 86, 87], "variabl": [3, 54, 68, 73, 76, 82, 87], "distribut": [3, 5, 11, 14, 15, 17, 19, 44, 45, 46, 47, 53, 63, 64, 68, 73, 74, 76, 78, 79, 84, 86, 88], "float": [3, 4, 5, 7, 10, 11, 13, 14, 17, 19, 20, 21, 22, 24, 25, 30, 31, 35, 38, 39, 40, 46, 47, 48, 49, 51, 53, 55, 59, 62, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 82, 83, 84, 86, 87, 88, 90], "can": [3, 4, 5, 6, 7, 11, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88], "take": [3, 6, 14, 17, 19, 21, 22, 25, 33, 34, 36, 42, 46, 47, 48, 50, 51, 53, 56, 58, 59, 60, 63, 64, 65, 67, 68, 74, 75, 86, 87], "floor": 3, "without": [3, 13, 25, 58, 59, 62, 67, 68, 75, 82, 84, 88], "affect": [3, 14, 74, 82, 87], "coverag": [3, 90], "probabl": [3, 4, 14, 15, 28, 38, 45, 46, 47, 49, 63, 64, 75, 82, 83], "summar": [3, 11, 34, 38, 42, 44, 46, 74, 75], "oncefram": [3, 8, 11, 14, 59], "threshold": [3, 4, 11, 14, 65, 75, 78], "configur": [3, 11, 26, 50, 51, 59, 62, 63, 76], "censor": [3, 11, 31, 65], "small": [3, 11, 19, 26, 28, 31, 34, 42, 47, 49, 50, 53, 63, 64, 65, 68, 75, 78, 82, 86], "sensit": [3, 5, 11, 14, 17, 19, 20, 26, 27, 28, 34, 38, 45, 46, 47, 48, 49, 50, 51, 53, 62, 64, 67, 68, 73, 74, 75, 76, 78, 88, 90], "partit": [3, 11, 14, 16, 73, 74, 76, 77, 78], "column": [3, 5, 7, 9, 10, 11, 14, 19, 29, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 67, 68, 74, 75, 76, 83, 84, 86, 87], "includ": [3, 9, 11, 19, 24, 25, 27, 34, 35, 44, 51, 54, 55, 59, 60, 62, 64, 65, 66, 70, 74, 75, 76, 78, 81, 82, 84], "contain": [3, 5, 7, 8, 9, 11, 14, 17, 20, 22, 26, 28, 33, 38, 39, 40, 45, 46, 47, 59, 62, 63, 65, 67, 68, 73, 74, 75, 77, 78, 79, 82, 83, 86, 87, 88], "cutoff": [3, 11], "respect": [3, 5, 11, 15, 17, 19, 26, 34, 45, 51, 55, 63, 65, 82, 88], "count": [3, 11, 14, 17, 19, 21, 26, 27, 38, 42, 46, 47, 48, 49, 51, 55, 64, 65, 66, 68, 75, 76, 78, 82, 83, 84, 87], "being": [3, 11, 17, 24, 31, 38, 53, 55, 59, 66, 71, 75, 83, 84], "featur": [3, 4, 6, 7, 13, 14, 15, 16, 17, 19, 25, 57, 58, 59, 63, 68, 70, 76], "contrib": [3, 4, 6, 7, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 28, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 58, 59, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 83, 84, 86, 87, 88], "comput": [3, 4, 5, 6, 11, 13, 14, 16, 17, 19, 20, 22, 26, 28, 30, 32, 37, 38, 40, 44, 45, 46, 47, 48, 50, 51, 52, 55, 62, 64, 65, 67, 68, 74, 75, 78, 81, 82, 86, 87, 88, 90], "which": [3, 4, 5, 6, 7, 11, 14, 17, 19, 21, 27, 28, 33, 41, 46, 47, 49, 50, 51, 53, 54, 55, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 78, 81, 82, 83, 86, 87, 88], "want": [3, 11, 17, 21, 22, 28, 31, 51, 53, 55, 58, 59, 60, 62, 63, 64, 65, 67, 68, 74, 75, 76, 81, 83, 86, 87], "read": [3, 38, 40, 46, 47, 56, 59, 62, 63, 74, 75], "option": [3, 4, 5, 7, 8, 11, 13, 14, 17, 19, 51, 56, 59, 62, 67, 70, 74, 84], "us": [3, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 89], "first": [3, 4, 6, 9, 11, 14, 17, 19, 20, 21, 22, 26, 28, 31, 34, 44, 47, 48, 50, 51, 53, 58, 59, 60, 62, 63, 64, 67, 68, 70, 73, 74, 78, 82, 83, 84, 86, 87, 88], "creat": [3, 5, 7, 13, 14, 17, 19, 22, 30, 31, 32, 44, 45, 46, 47, 54, 59, 60, 62, 63, 64, 66, 67, 74, 75, 78, 84, 86, 87], "api": [3, 11, 14, 17, 21, 22, 23, 30, 32, 37, 38, 44, 45, 47, 51, 53, 54, 55, 61, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 88, 89, 90], "pl": [3, 11, 14, 33, 34, 36, 38, 39, 40, 41, 42, 44, 64, 74, 75, 77], "lf": [3, 14, 64], "lazyfram": [3, 7, 11, 14, 19, 33, 34, 38, 44], "schema": [3, 14, 38], "int32": [3, 11, 14, 33], "b": [3, 14, 17, 19, 20, 26, 28, 33, 36, 47, 51, 62, 63, 64, 73, 82, 87, 88], "string": [3, 5, 7, 15, 16, 19, 20, 21, 36, 37, 38, 39, 41, 43, 44, 51, 52, 55, 63, 65, 67, 75, 77, 83, 84], "lf_domain": [3, 14], "i32": [3, 5, 14, 17, 20, 21, 22, 26, 47, 50, 51, 55, 62, 67], "str": [3, 4, 5, 6, 7, 11, 13, 14, 15, 16, 17, 19, 20, 21, 26, 32, 33, 40, 41, 44, 49, 51, 55, 63, 65, 67, 83, 84], "max_partition_length": [3, 7, 11, 14, 36, 38, 39, 64, 74, 75, 77], "1000": [3, 11, 17, 28, 33, 49, 50, 64, 65, 67, 68, 83, 86], "mea": [3, 17, 22, 30, 45, 49, 72, 73], "m": [3, 4, 5, 7, 11, 14, 15, 17, 18, 19, 21, 22, 26, 28, 30, 31, 32, 41, 48, 49, 53, 54, 55, 59, 63, 64, 65, 67, 68, 70, 73, 78, 82, 83, 84, 86, 87, 88], "select": [3, 4, 9, 11, 14, 29, 34, 36, 38, 39, 41, 42, 44, 49, 56, 67, 74, 76, 83, 84, 86], "len": [3, 11, 19, 28, 31, 33, 34, 38, 39, 40, 41, 42, 44, 49, 64, 65, 68, 73, 74, 75, 77, 82, 84, 86, 87], "col": [3, 11, 14, 34, 36, 38, 39, 40, 41, 44, 64, 74, 75, 77], "sum": [3, 4, 11, 14, 17, 19, 21, 22, 23, 26, 28, 31, 34, 36, 38, 48, 49, 51, 64, 66, 68, 75, 76, 77, 82, 87], "global_scal": [3, 11, 14], "extract": [3, 11, 73], "util": [3, 5, 14, 17, 19, 20, 22, 24, 26, 30, 31, 42, 46, 47, 49, 53, 60, 64, 65, 67, 68, 69, 74, 75, 76, 78, 79, 83, 87], "inform": [3, 5, 9, 11, 20, 21, 22, 25, 26, 33, 37, 38, 45, 47, 49, 50, 51, 64, 65, 67, 68, 73, 74, 75, 76, 77, 82, 83, 84, 86, 87], "about": [3, 5, 6, 11, 35, 44, 45, 46, 51, 55, 56, 62, 63, 64, 67, 73, 74, 75, 77, 78, 82, 83, 84, 86, 87, 88, 89], "each": [3, 4, 5, 7, 10, 11, 13, 14, 17, 19, 21, 26, 27, 28, 31, 32, 36, 38, 42, 45, 46, 47, 49, 50, 51, 53, 55, 59, 62, 63, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 86, 87, 88], "aggreg": [3, 5, 11, 19, 26, 27, 31, 33, 35, 37, 38, 39, 43, 44, 45, 47, 65, 67, 68, 74, 75, 77, 83, 88, 90], "result": [3, 5, 9, 11, 14, 15, 17, 19, 21, 22, 26, 28, 30, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 47, 48, 49, 50, 51, 59, 62, 63, 65, 67, 68, 73, 74, 75, 78, 84, 86, 88], "frame": [3, 11, 24, 38, 42, 44, 74, 75], "shape": [3, 11, 14, 25, 33, 34, 36, 38, 39, 40, 41, 42, 44, 51, 64, 72, 74, 75, 77, 86, 87], "2": [3, 4, 5, 10, 11, 13, 14, 15, 17, 21, 22, 26, 28, 30, 32, 33, 34, 36, 38, 40, 42, 47, 48, 50, 51, 53, 62, 63, 64, 65, 67, 68, 72, 74, 75, 76, 77, 79, 82, 83, 84, 86, 87, 88], "4": [3, 14, 17, 19, 21, 26, 28, 30, 31, 32, 34, 38, 39, 44, 50, 64, 65, 68, 72, 74, 75, 76, 77, 82, 83, 84, 86, 87], "f64": [3, 4, 5, 7, 11, 14, 19, 20, 22, 26, 44, 47, 50, 51, 55, 67, 70, 73, 78, 88], "length": [3, 11, 14, 38, 42, 44, 46, 48, 50, 51, 64, 67, 68, 74, 76, 83, 86, 87], "integ": [3, 11, 14, 17, 19, 20, 21, 22, 34, 38, 42, 44, 46, 47, 48, 51, 53, 55, 62, 67, 74, 75], "pass": [3, 5, 6, 11, 17, 20, 21, 24, 26, 38, 47, 48, 51, 53, 59, 67, 68, 70, 73, 74, 75, 77, 83, 86, 88], "05": [3, 11, 17, 42, 67, 68, 74, 75, 78, 83, 86], "5": [3, 11, 14, 15, 17, 19, 21, 22, 23, 26, 34, 36, 38, 41, 42, 46, 47, 48, 49, 50, 53, 54, 63, 64, 65, 67, 68, 74, 75, 76, 82, 84, 86, 87, 88], "3": [3, 4, 5, 14, 17, 21, 26, 28, 30, 31, 32, 33, 34, 38, 39, 41, 42, 47, 50, 51, 59, 63, 64, 65, 67, 68, 74, 75, 76, 77, 82, 84, 86, 87, 88], "375618": 3, "method": [4, 5, 9, 10, 11, 12, 13, 14, 19, 29, 33, 36, 44, 47, 62, 64, 73, 75, 76, 82, 83], "access": [4, 6, 9, 10, 11, 12, 13, 14, 19, 21, 25, 26, 28, 48, 49, 50, 59, 60, 62, 63, 67, 72, 75, 76, 81, 84, 86, 87, 88, 90], "c": [4, 14, 17, 18, 21, 22, 28, 31, 33, 48, 51, 53, 59, 63, 67, 68, 70, 73, 78, 87], "construct": [4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 27, 28, 30, 31, 32, 38, 44, 46, 47, 49, 50, 63, 70, 74, 76, 77, 81, 82, 88], "output": [4, 5, 6, 11, 13, 14, 17, 19, 21, 22, 24, 26, 27, 28, 30, 34, 35, 38, 45, 46, 47, 48, 51, 53, 55, 59, 62, 63, 64, 67, 73, 74, 75, 78, 81, 82, 88], "\u03b4": [4, 5, 21, 22, 64, 67, 75], "cast": [4, 19, 27, 40, 49, 55, 63, 74, 75, 77, 83, 84], "composit": [4, 46, 48, 63, 64, 78, 86], "measurement0": 4, "measurement1": 4, "when": [4, 5, 11, 13, 15, 17, 19, 20, 21, 25, 26, 27, 31, 33, 34, 38, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 58, 59, 62, 63, 65, 67, 72, 74, 75, 78, 79, 82, 87, 88], "equival": [4, 14, 17, 19, 22, 26, 28, 34, 47, 63, 68, 74, 82, 87, 88], "properti": [4, 5, 11, 21, 24, 25, 30, 32, 45, 46, 47, 50, 59, 62, 74, 75, 76, 77, 82], "sequenti": [4, 5, 19, 22, 50, 51, 78], "appli": [4, 5, 7, 11, 14, 17, 19, 23, 26, 28, 35, 38, 41, 50, 60, 64, 67, 70, 74, 75, 77, 78, 79, 81, 82, 86, 87, 88], "same": [4, 5, 7, 17, 19, 21, 22, 25, 26, 28, 31, 33, 34, 38, 42, 47, 48, 49, 50, 51, 53, 59, 62, 63, 65, 67, 68, 74, 75, 77, 81, 82, 83, 88], "dataset": [4, 5, 11, 14, 15, 17, 19, 21, 22, 26, 27, 28, 31, 34, 36, 38, 45, 46, 47, 49, 53, 65, 66, 67, 69, 72, 73, 74, 75, 77, 81, 83, 86, 87, 88], "basic": [4, 49, 82, 88], "linear": [4, 19, 74, 86], "usag": [4, 17, 33, 38, 53, 62, 67, 70, 87], "noninteract": 4, "specifi": [4, 5, 11, 14, 19, 20, 23, 24, 25, 26, 27, 34, 42, 44, 46, 47, 56, 59, 62, 63, 67, 68, 70, 73, 74, 75, 77, 78, 82, 88], "up": [4, 14, 17, 21, 24, 33, 53, 58, 59, 62, 63, 67, 68, 73, 74, 75, 76, 78, 82, 83, 84, 86, 88], "front": [4, 21, 63, 68], "interact": [4, 21, 22, 25, 46, 59, 62, 84], "via": [4, 5, 17, 24, 26, 28, 30, 31, 32, 33, 36, 40, 47, 50, 54, 55, 60, 63, 68, 74, 82, 86, 87, 88, 90], "vector": [4, 5, 13, 14, 19, 27, 31, 42, 46, 47, 48, 50, 51, 64, 65, 67, 73, 78, 82, 84, 86, 88], "compos": [4, 22, 63, 67, 73], "transformation0": 4, "outer": [4, 22], "inner": [4, 5, 7, 11, 15, 22], "postprocess1": 4, "repres": [4, 5, 10, 19, 22, 26, 28, 33, 47, 51, 68, 73, 74, 76, 77, 82, 83, 88], "non": [4, 11, 14, 15, 16, 17, 19, 21, 22, 35, 38, 47, 51, 72, 78, 88, 90], "postprocess": [4, 15, 19, 21, 22, 26, 48, 49, 51, 65, 67, 68, 73], "postprocessor": [4, 6, 19, 29, 49], "transformation1": 4, "smoothedmaxdiverg": [4, 22, 27, 47], "curv": [4, 15, 17, 22, 67, 84], "population_s": [4, 22], "amplifi": [4, 22, 67], "amplif": [4, 62], "subsampl": 4, "doe": [4, 11, 14, 19, 33, 34, 35, 40, 47, 48, 51, 54, 60, 68, 74, 76, 78, 79, 82, 83, 86], "perform": [4, 50, 55, 60, 64, 73, 81, 83, 86, 87], "ani": [4, 5, 7, 11, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 28, 30, 31, 32, 38, 42, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88], "sampl": [4, 9, 11, 13, 14, 17, 19, 22, 26, 28, 45, 49, 50, 51, 53, 67, 68, 73, 74, 75, 76, 82, 83, 86, 87, 88, 90], "It": [4, 5, 11, 14, 17, 22, 23, 29, 31, 46, 47, 51, 55, 59, 60, 62, 63, 65, 73, 75, 76, 78, 82, 83, 86, 88], "have": [4, 11, 14, 17, 18, 19, 21, 22, 24, 25, 26, 28, 31, 33, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 66, 67, 68, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88], "hand": [4, 31, 53, 68, 78, 81, 90], "simpl": [4, 11, 22, 28, 50, 51, 62, 67, 85, 86, 88], "larger": [4, 14, 19, 21, 22, 50, 51, 53, 67, 74, 75, 78, 82, 83, 86, 88], "popul": [4, 11, 22, 28, 68, 74, 75, 83, 86], "dia": [4, 19], "do": [4, 11, 19, 28, 31, 33, 38, 40, 47, 54, 55, 58, 59, 60, 63, 64, 67, 68, 74, 75, 77, 82, 84, 87], "mi": [4, 14, 19, 63, 82], "mo": [4, 14, 17, 19, 55, 63, 65, 82], "match": [4, 17, 19, 21, 22, 27, 51, 59, 63, 67, 88], "honest": [4, 6, 7, 11, 14, 15, 16, 19, 22, 24, 30, 31, 32, 59, 67, 70, 72, 73], "curiou": [4, 6, 7, 11, 14, 15, 16, 19, 22, 24, 30, 31, 32, 59, 67, 70, 72, 73], "why": [4, 6, 7, 14, 15, 16, 17, 19, 21, 60, 62, 75, 88], "guarante": [4, 11, 14, 15, 20, 26, 28, 38, 42, 44, 46, 47, 48, 51, 54, 62, 64, 68, 74, 75, 82, 88], "onli": [4, 5, 6, 7, 11, 14, 15, 17, 19, 22, 23, 25, 26, 27, 28, 30, 33, 35, 36, 38, 40, 42, 44, 47, 49, 51, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 75, 77, 78, 82, 83, 84, 86, 88], "valid": [4, 7, 11, 14, 19, 20, 25, 26, 33, 38, 44, 47, 48, 51, 58, 59, 62, 63, 67, 68, 82, 88], "record": [4, 5, 11, 13, 19, 31, 32, 33, 34, 38, 42, 47, 48, 50, 51, 53, 63, 65, 67, 68, 74, 75, 76, 82, 86, 88], "int": [4, 5, 10, 11, 13, 14, 17, 19, 20, 21, 26, 28, 30, 32, 38, 47, 49, 53, 54, 55, 63, 67, 73, 74, 75, 77, 86, 87], "size": [4, 7, 9, 10, 11, 13, 14, 17, 19, 22, 28, 31, 47, 49, 51, 53, 63, 65, 66, 67, 69, 72, 73, 74, 75, 77, 78, 82, 83, 84, 86, 87], "maxdiverg": [4, 5, 14, 17, 21, 22, 26, 27, 28, 47, 73, 78, 82, 88], "zeroconcentrateddiverg": [4, 5, 14, 22, 26, 27], "citat": [4, 14, 19, 26], "bs16": 4, "concentr": [4, 5, 11, 15, 27, 42, 64, 74, 82, 84], "simplif": 4, "extens": [4, 37, 46, 59, 62], "lower": [4, 11, 17, 19, 23, 29, 33, 38, 42, 64, 68, 70, 72, 73, 82, 83, 88], "bound": [4, 5, 7, 10, 11, 13, 14, 17, 19, 21, 22, 27, 33, 38, 42, 45, 46, 47, 48, 49, 50, 53, 55, 62, 63, 67, 68, 72, 74, 76, 78, 82, 83, 84, 86, 87, 88], "arxiv": [4, 14, 19, 26], "1605": 4, "02065": 4, "subsect": [4, 14, 26, 62], "stop_prob": 4, "privat": [4, 6, 9, 11, 13, 14, 17, 19, 21, 26, 29, 30, 33, 38, 40, 42, 44, 45, 46, 47, 51, 53, 62, 64, 66, 68, 69, 71, 74, 75, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90], "candid": [4, 11, 19, 31, 44, 73, 74], "whose": [4, 11, 20, 24, 25, 59], "score": [4, 11, 14, 19, 31, 73, 74], "abov": [4, 14, 17, 18, 19, 26, 62, 63, 67, 74, 75, 77, 78, 83, 87, 88], "satisfi": [4, 5, 6, 15, 16, 17, 21, 25, 31, 33, 34, 38, 42, 44, 53, 58, 63, 64, 74, 76, 78, 87, 88], "\u03b5": [4, 5, 13, 22, 26, 31, 64, 67, 74, 76, 78], "2\u03b5": 4, "invoc": [4, 17], "time": [4, 6, 7, 14, 19, 21, 22, 25, 26, 27, 32, 33, 36, 38, 42, 51, 53, 54, 58, 59, 60, 67, 68, 71, 72, 73, 74, 75, 76, 82, 84, 86], "below": [4, 11, 21, 22, 25, 31, 41, 47, 51, 56, 59, 62, 67, 68, 74, 75, 82, 83, 84], "algorithm": [4, 6, 14, 19, 25, 26, 27, 28, 45, 46, 49, 50, 51, 53, 58, 62, 73, 74, 75, 81, 88, 90], "termin": [4, 49], "noth": 4, "should": [4, 11, 14, 15, 17, 19, 23, 26, 33, 45, 46, 47, 48, 51, 55, 56, 59, 60, 62, 66, 68, 75, 76, 78, 81, 82, 83, 84, 88], "make": [4, 5, 11, 14, 17, 19, 20, 21, 22, 25, 26, 30, 31, 32, 34, 38, 42, 44, 46, 47, 49, 51, 53, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 81, 82, 83, 84, 86, 87, 88], "form": [4, 5, 14, 19, 28, 30, 32, 47, 49, 55, 60, 63, 74, 77, 78, 82, 88], "write": [4, 17, 21, 26, 28, 31, 46, 48, 49, 50, 51, 54, 59, 60, 62, 63, 70, 72, 75, 87, 88], "custom": [4, 28, 32], "scorer": 4, "TO": [4, 6, 14, 19, 30, 51, 87], "extrinsicobject": [4, 6, 14, 20], "ensur": [4, 9, 11, 13, 14, 19, 25, 38, 39, 44, 47, 51, 56, 64, 73, 74, 75, 76, 77, 78, 82, 83, 88], "left": [4, 15, 19, 38, 39, 49, 75, 82], "arbitrari": [4, 22, 37, 45, 46, 50], "held": 4, "liu": 4, "talwar": 4, "stoc": 4, "2019": 4, "support": [4, 5, 8, 11, 14, 19, 21, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 49, 51, 59, 63, 64, 76, 77, 78, 81, 82, 88], "element": [4, 7, 11, 14, 16, 19, 21, 23, 25, 26, 28, 31, 34, 35, 46, 49, 50, 51, 55, 59, 63, 64, 65, 67, 73, 82, 83, 84, 86, 88], "di": [4, 63, 82], "select_private_candid": 4, "tupl": [4, 5, 11, 13, 15, 17, 19, 20, 22, 26, 47, 67, 68, 74, 86, 88], "stop": 4, "earli": [4, 25, 62], "iter": [4, 20, 25, 31, 58, 63, 68], "immedi": [4, 19], "greater": [4, 5, 11, 19, 42, 47, 48, 49, 50, 51, 53, 60, 65, 67, 68, 75, 82, 86, 87], "than": [4, 5, 11, 14, 15, 17, 19, 21, 23, 26, 28, 29, 45, 47, 50, 51, 53, 58, 62, 64, 65, 66, 67, 68, 74, 75, 76, 78, 79, 82, 83, 84, 86, 87, 88], "23": [4, 20, 28, 33, 65, 79, 87], "space": [4, 5, 14, 17, 19, 21, 26, 33, 50, 51, 53, 63, 67, 70, 71, 86], "demonstr": [4, 21, 22, 31, 36, 38, 63, 64, 68, 70, 74, 75, 79, 80, 85, 86, 87, 90], "purpos": [4, 11, 47, 62, 67, 82], "np": [4, 14, 26, 28, 49, 64, 68, 72, 73, 82, 83, 84, 86, 87], "m_mock": 4, "lambda": [4, 15, 17, 31, 49, 53, 54, 64, 65, 67, 68, 73, 78, 83, 86, 87], "loc": [4, 82], "d_in": [4, 5, 6, 14, 17, 19, 21, 22, 26, 28, 30, 31, 32, 45, 47, 48, 49, 50, 51, 53, 63, 65, 67, 68, 78, 82, 86, 88], "m_private_select": 4, "20": [4, 11, 31, 38, 49, 50, 65, 67, 68, 74, 77, 82, 86, 87], "assert": [4, 14, 17, 22, 28, 33, 40, 46, 47, 50, 67, 87], "isinst": [4, 31], "d_mid": [4, 5, 21, 78], "base": [4, 11, 13, 17, 19, 20, 21, 38, 42, 46, 47, 49, 51, 55, 64, 74, 78, 81, 82, 83, 87], "answer": [4, 14, 17, 21, 28, 34, 42, 49, 50, 64, 68, 76, 86, 87], "previou": [4, 21, 28, 50, 53, 67, 74, 75, 77, 82, 84, 88], "concurr": [4, 21], "allow": [4, 5, 11, 17, 21, 22, 23, 24, 26, 31, 33, 36, 38, 40, 44, 46, 51, 59, 64, 75, 77, 82, 83], "spawn": [4, 5, 21], "multipl": [4, 11, 17, 22, 32, 36, 48, 58, 62, 67, 73, 75, 76, 78, 81, 82, 87], "interleav": 4, "your": [4, 11, 15, 16, 17, 19, 22, 23, 24, 25, 27, 30, 31, 32, 38, 42, 47, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 82, 90], "amongst": [4, 78], "them": [4, 11, 25, 32, 33, 44, 45, 58, 67, 73, 75, 82, 83, 87], "indic": [4, 6, 14, 19, 26, 33, 38, 51, 53, 55, 62, 63, 67, 86], "distanc": [4, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 31, 42, 45, 46, 50, 51, 53, 55, 62, 63, 64, 67, 70, 73, 78, 88], "maximum": [4, 7, 19, 47, 50, 74, 82, 83, 88], "adjac": [4, 5, 14, 15, 17, 19, 47, 50, 62, 63, 88], "expenditur": [4, 5, 13, 48, 67, 86, 87, 88], "constructor": [4, 5, 14, 17, 19, 20, 21, 22, 24, 26, 27, 28, 47, 48, 49, 51, 53, 54, 55, 59, 60, 62, 65, 67, 68, 72, 84], "delai": [4, 14, 19, 88], "applic": [4, 14, 19, 25, 46, 60, 61, 64, 65, 74, 75, 76, 77, 81, 88], "class": [5, 11, 13, 17, 18, 20, 45, 47, 54, 60, 67], "d_out": [5, 6, 14, 17, 19, 21, 22, 45, 47, 49, 51, 53, 65, 67, 68, 78, 82, 86], "space_overrid": 5, "coordin": 5, "instanc": [5, 6, 7, 10, 11, 13, 15, 16, 17, 19, 26, 45, 47, 49, 55, 73, 77, 82, 88], "recommend": [5, 14, 33, 36, 59, 74, 75, 78, 81], "instead": [5, 11, 17, 19, 20, 26, 34, 38, 42, 44, 45, 46, 49, 51, 59, 64, 65, 67, 72, 74, 75, 82, 86, 88], "one": [5, 11, 14, 15, 17, 19, 20, 31, 34, 36, 42, 46, 47, 48, 50, 51, 53, 56, 59, 62, 63, 64, 65, 67, 68, 74, 75, 76, 78, 82, 84, 86, 87, 88], "execut": [5, 6, 11, 17, 21, 22, 27, 28, 44, 62, 63, 86], "track": [5, 33, 76, 81], "upper": [5, 11, 14, 17, 19, 21, 33, 38, 45, 46, 47, 53, 74, 76, 82, 83, 88], "sequenc": [5, 11, 13, 20, 36], "loss": [5, 14, 19, 26, 28, 34, 42, 44, 46, 68, 74, 75, 76, 82, 87, 88], "sent": 5, "overal": [5, 21, 42, 84], "filter": [5, 11, 34, 35, 39, 73, 74, 75, 76, 87], "static": [5, 20, 46, 63], "privacy_unit": [5, 11, 23, 33, 34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 76, 77, 78], "privacy_loss": [5, 11, 23, 33, 34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 76, 77, 78], "split_evenly_ov": [5, 11, 23, 33, 34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 76, 77, 78], "split_by_weight": 5, "margin": [5, 8, 11, 34, 36, 38, 39, 42, 64, 74, 75, 77], "weight": [5, 14, 21, 49], "assumpt": [5, 42, 68, 88], "structur": [5, 27, 42, 47, 49, 59, 60], "public": [5, 9, 11, 20, 38, 50, 51, 65, 67, 68, 74, 75, 76, 86, 87, 88], "mutual": 5, "exclus": [5, 19, 74], "analyz": [5, 19, 59, 76, 81], "unit": [5, 13, 15, 17, 26, 28, 33, 42, 45, 47, 60, 76, 77, 81, 88], "number": [5, 7, 10, 11, 13, 14, 15, 17, 18, 19, 25, 31, 34, 38, 39, 40, 42, 46, 47, 49, 50, 51, 53, 58, 62, 65, 67, 68, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90], "part": [5, 11, 33, 35, 51, 58, 62, 63, 73, 75, 81, 82], "evenli": [5, 74, 78, 86], "list": [5, 7, 11, 17, 19, 20, 26, 27, 31, 32, 38, 44, 47, 49, 50, 51, 55, 57, 58, 59, 63, 65, 66, 67, 68, 73, 74, 75, 81, 87, 88, 89], "intermedi": [5, 22, 27, 47, 50, 51, 73, 82], "mutablemap": 5, "dictionari": 5, "kei": [5, 7, 11, 14, 19, 27, 34, 38, 63, 64, 65, 67, 76, 77, 78, 83, 84], "group": [5, 7, 8, 11, 14, 27, 29, 33, 34, 35, 38, 39, 41, 49, 58, 69, 74, 76], "describ": [5, 11, 13, 14, 19, 26, 28, 37, 45, 46, 47, 50, 55, 59, 64, 74, 75, 76, 77, 82, 83, 88], "known": [5, 11, 15, 19, 21, 25, 28, 46, 51, 65, 67, 74, 82, 84, 87], "kwarg": [5, 20], "ha": [5, 14, 17, 19, 20, 21, 22, 25, 26, 28, 30, 33, 34, 38, 42, 44, 47, 51, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 78, 81, 82, 83, 84, 86, 87, 88], "been": [5, 11, 21, 25, 26, 34, 38, 62, 63, 64, 67, 75, 84], "next": [5, 21, 31, 47, 49, 50, 58, 59, 65, 68, 70, 73, 74, 78, 83, 84, 87], "otherwis": [5, 20, 28, 53, 62, 64, 77], "directli": [5, 11, 44, 46, 47, 51, 70, 74, 76, 82, 83], "lazyframequeri": [5, 8, 11, 44], "f": [5, 11, 14, 15, 19, 26, 28, 31, 36, 38, 47, 68, 73, 74, 79, 82, 86, 87, 88], "chain": [5, 7, 14, 17, 19, 20, 27, 31, 45, 46, 47, 51, 52, 53, 63, 66, 67, 70, 73, 82], "miss": [5, 19, 60, 62, 75], "numer": [5, 11, 17, 19, 26, 33, 38, 47, 50, 51, 53, 64, 67, 68, 74], "solv": [5, 17, 28, 47, 53, 67, 73, 82, 87], "call": [5, 20, 21, 22, 26, 27, 44, 45, 47, 48, 50, 54, 62, 63, 68, 70, 73, 74, 78, 81, 82, 83, 88], "closest": [5, 17], "stabil": [5, 7, 17, 19, 22, 24, 27, 30, 32, 45, 46, 50, 51, 54, 59, 62, 63, 65, 88], "constraint": [5, 7, 11, 17, 21, 88], "discov": [5, 17, 53], "assign": [5, 19, 33, 58], "attribut": [5, 17, 31, 86], "callabl": [5, 17], "classmethod": [5, 20], "_wrap_releas": 5, "initi": [5, 25, 42, 47, 59, 61, 74, 81, 84], "howev": [5, 19, 21, 26, 34, 38, 45, 47, 49, 50, 51, 64, 73, 74, 75, 82, 84, 87], "stand": [5, 48, 59, 63], "alon": 5, "help": [5, 17, 26, 46, 47, 49, 50, 55, 58, 60, 63, 66, 70, 75, 80, 82, 88], "build": [5, 6, 14, 17, 20, 25, 36, 39, 47, 50, 51, 59, 61, 62, 63, 68, 75, 77, 82, 86], "submit": [5, 21, 28, 59, 87], "intern": [5, 6, 14, 19, 20, 21, 26, 33, 50, 54, 60, 63, 72, 74], "default": [5, 10, 13, 14, 19, 20, 26, 27, 47, 50, 51, 55, 58, 59, 63, 64, 67, 70, 73, 74, 75, 76, 83], "split": [5, 19, 50, 51, 67, 73, 84, 86, 87], "zcdp": [5, 11, 21, 22, 42], "convers": [5, 38, 39, 40, 57, 75, 77], "approx": [5, 21, 83], "wrap_releas": 5, "prior": [5, 21, 47, 51, 68, 74, 78, 82], "either": [5, 11, 14, 17, 19, 21, 28, 47, 51, 53, 59, 60, 62, 63, 68, 79, 86], "allow_transform": 5, "fals": [5, 7, 11, 13, 14, 16, 17, 19, 20, 33, 34, 38, 40, 47, 48, 49, 82, 84, 86], "bool": [5, 7, 11, 13, 14, 16, 17, 19, 20, 26, 27, 28, 34, 47, 51, 55, 86, 87], "true": [5, 6, 7, 11, 13, 14, 16, 17, 19, 20, 26, 28, 31, 34, 36, 38, 39, 40, 41, 42, 47, 49, 54, 59, 62, 64, 65, 68, 73, 74, 75, 77, 79, 83, 84, 86, 87], "respons": [5, 14, 56, 74, 75, 78, 86], "accept": [5, 21, 26, 27, 47, 53, 55, 56, 63, 64, 71, 80, 88], "limit": [5, 14, 24, 33, 50, 51, 64, 67, 75, 78, 79, 86, 87], "set": [5, 7, 9, 11, 14, 15, 16, 19, 20, 21, 22, 26, 27, 28, 31, 33, 35, 38, 39, 40, 42, 45, 46, 47, 49, 51, 53, 55, 58, 59, 60, 62, 63, 64, 65, 67, 73, 74, 75, 77, 82, 83, 84, 86, 88, 90], "express": [5, 7, 11, 14, 17, 19, 20, 26, 28, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 51, 74, 75, 77, 81, 82, 88], "vectordomain": [5, 7, 14, 17, 19, 21, 27, 47, 51, 55, 63, 73], "atomdomain": [5, 7, 14, 17, 19, 21, 22, 26, 27, 28, 47, 51, 55, 63, 70, 73, 88], "As": [5, 25, 28, 46, 47, 48, 49, 51, 63, 64, 67, 82, 84, 86, 87, 88], "well": [5, 15, 17, 21, 25, 26, 28, 33, 46, 47, 53, 59, 62, 63, 67, 68, 73, 74, 81, 82, 83, 86, 88], "underli": [5, 17, 33, 38, 40, 45, 51, 68, 73, 83, 88], "syntax": [5, 22, 24, 59, 62, 74], "vec": [5, 14, 19, 20, 26, 51, 55, 63, 67, 83, 84], "rang": [5, 11, 19, 28, 31, 38, 44, 49, 50, 53, 64, 65, 68, 73, 74, 75, 78, 81, 83, 84, 86, 87], "primit": [5, 14, 59, 88], "dict": [5, 28, 84], "mapdomain": [5, 7, 14, 19, 27, 51, 63], "key_domain": [5, 7], "value_domain": [5, 7], "optiondomain": [5, 7, 19, 51], "complex": [5, 64, 90], "traceback": [5, 20, 21, 22, 54], "most": [5, 11, 14, 17, 18, 20, 21, 22, 26, 30, 31, 32, 33, 34, 42, 44, 47, 50, 51, 53, 54, 55, 59, 63, 64, 66, 67, 75, 76, 78, 82, 87, 88], "recent": [5, 20, 21, 22, 54], "last": [5, 19, 20, 21, 22, 54, 62, 63, 82, 87], "ffi": [5, 59, 60, 63], "extrinsicdomain": 5, "altern": 5, "note": [5, 11, 15, 22, 48, 49, 54, 58, 59, 68, 74, 83, 87, 88], "violat": [5, 7, 24, 25, 38, 59, 75, 78], "rho": [5, 11, 15, 21, 26, 27, 42, 64, 67, 82], "consist": [5, 14, 19, 26, 46, 47, 48, 49, 62, 63, 65, 67, 73, 74, 81, 82, 83, 87, 88], "1e": [5, 15, 17, 21, 22, 28, 33, 38, 39, 40, 41, 42, 47, 65, 67, 75, 77, 87], "9": [5, 14, 15, 21, 26, 34, 36, 38, 50, 59, 64, 65, 67, 68, 73, 74, 75, 76, 78, 82, 83, 84, 86, 87], "09": 5, "pure": [5, 7, 8, 11, 14, 15, 19, 21, 22, 34, 42, 46, 47, 64, 78], "zero": [5, 10, 11, 15, 19, 26, 27, 34, 42, 50, 53, 62, 64, 72, 74, 82, 86, 87], "\u03c1": [5, 21, 22], "shorthand": [5, 11, 19, 22, 63], "symmetricdist": [5, 16, 17, 19, 21, 27, 47, 50, 51, 55, 63, 73, 78, 82], "verbos": [5, 21, 66], "control": [5, 46, 50, 51, 73, 74, 76], "contribut": [5, 11, 23, 29, 31, 33, 34, 36, 38, 39, 40, 41, 47, 50, 56, 64, 67, 71, 74, 75, 76, 77, 78, 81, 82, 88], "chang": [5, 11, 13, 17, 22, 25, 31, 34, 36, 40, 42, 44, 47, 48, 50, 51, 53, 55, 58, 59, 63, 73, 74, 77, 82, 83], "absolut": [5, 19, 26, 27, 47, 50, 59, 62, 64, 82, 88], "l1": [5, 26, 51, 64, 79], "l2": [5, 17, 26, 27, 51, 64, 79], "order": [5, 7, 11, 15, 19, 21, 22, 33, 47, 50, 62, 65, 67, 75, 77, 82, 84, 86, 88], "u": [5, 7, 9, 21, 25, 26, 28, 34, 48, 49, 50, 51, 56, 58, 60, 63, 66, 67, 68, 72, 74, 75, 81, 82, 87, 88, 90], "l1distanc": [5, 14, 16, 19, 20, 27, 51, 55, 63, 65, 82], "greatest": [5, 11, 15, 42, 47, 51, 53, 67, 76, 82, 87, 88], "microdata": [5, 9, 67, 69, 72, 76, 86, 87], "influenc": [5, 32, 42, 47, 49, 50, 51, 65, 67, 75, 76, 82, 88], "scalar": [5, 19, 27, 38, 51, 82, 88], "insertdeletedist": [5, 16, 19, 50, 51, 63], "hammingdist": [5, 16, 19, 51, 63], "changeonedist": [5, 16, 19, 51, 63, 82], "field": [6, 13, 29, 45, 58, 75], "ti": [6, 51], "eval": 6, "suppli": [6, 20, 25, 87], "distance_in": 6, "distance_out": 6, "relat": [6, 17, 22, 45, 46, 47, 51, 53, 57, 60, 63, 77, 82, 88], "retriev": [6, 7, 15, 16, 17, 19, 33, 38, 41, 62, 72, 74, 86], "term": [6, 14, 17, 19, 22, 26, 27, 28, 33, 38, 47, 50, 51, 55, 63, 67, 68, 76, 78, 82, 88], "defin": [6, 14, 15, 17, 19, 21, 26, 28, 30, 31, 32, 45, 46, 47, 51, 62, 63, 64, 65, 68, 70, 78, 82, 88], "callback": [6, 14, 15, 19], "post": [6, 14, 28, 73, 82], "processor": 6, "two": [6, 7, 11, 14, 15, 16, 19, 21, 22, 26, 33, 34, 42, 45, 46, 47, 50, 53, 62, 63, 64, 65, 70, 73, 75, 78, 82, 87, 88], "criteria": [6, 31], "These": [6, 8, 20, 22, 25, 27, 33, 34, 35, 39, 44, 45, 47, 50, 51, 54, 55, 62, 63, 66, 74, 82, 86, 88], "invari": [6, 74, 76, 77, 78], "necessari": [6, 17, 22, 27, 38, 42, 50, 53, 62, 67, 76, 79], "show": [6, 26, 33, 50, 60, 62, 64, 65, 68, 73, 74, 75, 79, 82, 84, 86, 87], "correct": [6, 14, 19, 24, 25, 28, 47, 48, 59, 62, 83, 87], "other": [6, 11, 17, 22, 30, 31, 34, 42, 45, 46, 47, 48, 49, 51, 53, 55, 58, 59, 60, 62, 63, 72, 74, 75, 76, 77, 79, 81, 82, 86, 89], "global": [6, 45, 47, 70, 74, 76], "state": [6, 21, 51, 54, 81], "system": [6, 20, 25, 73, 82], "clock": 6, "reveal": [6, 9, 33, 51, 68, 78, 82], "elaps": 6, "escal": 6, "side": [6, 14, 17, 19, 25, 27, 33, 58], "channel": [6, 25, 27], "vulner": [6, 24, 25, 59], "direct": [6, 17, 49, 53, 59, 61, 81], "secondli": 6, "independ": [6, 19, 33, 38, 64, 73, 81], "except": [6, 14, 17, 19, 23, 26, 33, 38, 40, 53, 54, 66, 67, 82], "both": [6, 11, 17, 19, 21, 33, 34, 38, 42, 45, 47, 50, 53, 59, 62, 63, 64, 68, 70, 74, 81, 82, 83, 86], "cancel": 6, "potenti": [6, 7, 11, 19, 25, 33, 38, 46, 51, 65, 74, 78], "avoid": [6, 21, 38, 39, 40, 50, 67, 72, 75, 77], "transit": 6, "q": [6, 55, 86], "self": [6, 11, 17, 20, 45, 62], "extern": [6, 62], "nullabl": [7, 14], "atom": [7, 10, 19, 20, 26, 48, 51, 55, 63], "max_weight": [7, 14], "bitvectordomain": [7, 14], "posit": [7, 19, 42, 50, 51, 53, 62, 73, 82, 86], "bit": [7, 14, 20, 47, 50, 51, 55, 62, 87, 90], "categori": [7, 14, 17, 19, 27, 28, 33, 49, 51, 65, 84], "categoricaldomain": 7, "seri": [7, 11, 33, 38, 42, 51, 73, 87], "time_unit": [7, 40], "time_zon": 7, "datetimedomain": 7, "zone": [7, 33], "found": [7, 11, 19, 26, 38, 59, 67, 76, 77, 84, 88], "pola": 7, "timezon": 7, "One": [7, 14, 19, 38, 49, 62, 74, 75, 81, 82], "n": [7, 22, 28, 31, 34, 40, 49, 50, 51, 53, 62, 65, 67, 68, 78, 81, 83, 84, 86, 87], "correspond": [7, 8, 11, 13, 15, 17, 47, 63, 75, 76, 78], "nano": 7, "micro": 7, "millisecond": [7, 33, 41], "debug": [7, 15, 16, 17, 59, 62], "stringifi": [7, 15, 16], "lazyframedomain": [7, 14, 19], "hashmap": [7, 14, 19, 65], "val": [7, 17, 83], "membership": [7, 17, 85, 89], "element_domain": 7, "d": [7, 14, 15, 16, 19, 26, 27, 28, 41, 42, 47, 51, 55, 58, 59, 63, 82, 86, 87], "seriesdomain": 7, "identifi": [7, 11, 17, 46, 51, 60, 62, 86, 87], "userdomain": 7, "equal": [7, 14, 15, 16, 19, 22, 28, 47, 68, 87], "uniqu": [7, 11, 19, 26, 31, 60, 65, 74, 75, 87], "In": [7, 11, 14, 15, 18, 19, 21, 22, 26, 27, 28, 32, 33, 34, 35, 37, 38, 40, 42, 47, 48, 49, 50, 51, 53, 55, 58, 59, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 88], "addit": [7, 11, 14, 17, 18, 19, 31, 33, 34, 38, 40, 44, 45, 46, 47, 48, 50, 51, 55, 59, 60, 68, 74, 76, 77, 78, 79, 82, 88], "sound": [7, 62], "its": [7, 11, 19, 20, 21, 25, 33, 40, 42, 46, 47, 49, 55, 64, 73, 81, 82, 84, 88], "descript": [7, 14, 15, 16, 20, 22, 24, 58, 59, 75], "test": [7, 14, 58, 63, 67, 83, 86], "max_num_partit": [7, 11, 75], "max_partition_contribut": [7, 11, 42], "max_influenced_partit": [7, 11], "public_info": [7, 11, 14, 64, 74, 75, 77], "wildexprdomain": [7, 14, 19], "frame_domain": 7, "get_california_pums_path": [8, 9, 65, 67, 68, 83, 84], "get_france_lfs_path": [8, 9, 34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 77], "array2_domain": [8, 10, 13, 73], "make_np_clamp": [8, 10], "dpexpr": [8, 11, 37, 44], "lazygroupbyqueri": [8, 11], "dp_len": [8, 11], "decomposit": [8, 12, 72], "tool": [8, 9, 47, 60, 62, 80, 81, 88, 90], "yet": [8, 25, 41, 42, 62, 63, 74, 78], "bind": [8, 46, 59, 63, 81], "some": [8, 19, 25, 26, 28, 29, 38, 41, 44, 45, 46, 47, 51, 53, 54, 55, 58, 59, 62, 63, 65, 66, 67, 68, 74, 81, 82, 83, 85, 88], "depend": [8, 15, 24, 25, 33, 38, 40, 44, 45, 47, 51, 55, 56, 59, 62, 64, 67, 68, 70, 74, 76, 77, 78], "namespac": [8, 11, 37, 44], "path": [9, 18, 54, 59, 62], "csv": [9, 51, 84, 86, 87], "deriv": [9, 21, 28, 53, 59, 60, 79], "pum": [9, 67, 86, 87], "file": [9, 19, 51, 59, 60, 62, 63, 86], "censu": [9, 14, 67, 75, 86, 87], "header": [9, 62], "row": [9, 10, 11, 13, 14, 22, 31, 33, 34, 35, 38, 39, 50, 51, 63, 67, 68, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88], "ag": [9, 11, 39, 65, 67, 68, 75, 76, 83, 84, 87], "sex": [9, 34, 39, 65, 67, 68, 75, 76, 83, 84, 87], "educ": [9, 65, 67, 68, 81, 83, 84, 87, 90], "race": [9, 65, 67, 68, 83, 84], "incom": [9, 17, 44, 65, 67, 68, 81, 83, 84], "marri": [9, 65, 67, 68, 83, 84, 87], "eu": [9, 64], "labor": [9, 64], "forc": [9, 38, 42, 74, 75, 76], "survei": [9, 28, 42, 74, 75, 76, 86, 87], "code": [9, 20, 21, 22, 25, 27, 29, 30, 32, 33, 42, 45, 51, 55, 58, 59, 62, 63, 64, 65, 67, 70, 73, 74, 76, 82, 83, 84, 88], "develop": [9, 25, 58, 60, 61, 62, 76], "work": [9, 17, 21, 25, 33, 36, 38, 42, 43, 46, 50, 51, 53, 55, 56, 58, 59, 60, 63, 64, 66, 69, 72, 73, 74, 75, 77, 82, 83, 86, 88], "like": [9, 11, 14, 20, 21, 25, 26, 28, 33, 34, 38, 39, 44, 47, 51, 53, 55, 58, 59, 60, 62, 63, 64, 67, 72, 74, 76, 78, 82, 83, 86, 87, 88], "could": [9, 31, 32, 34, 45, 51, 55, 62, 63, 64, 67, 68, 72, 74, 75, 77, 78, 82, 83], "scientif": 9, "believ": [9, 83, 84], "would": [9, 33, 38, 47, 49, 51, 60, 67, 68, 74, 75, 76, 77, 82, 83, 84, 88], "good": [9, 76, 84], "inadvertantli": 9, "person": [9, 78, 82, 84], "To": [9, 11, 19, 34, 44, 47, 50, 53, 59, 62, 63, 74, 77, 78, 79, 82, 86], "reduc": [9, 11, 18, 19, 34, 42, 50, 59, 64, 68, 74, 75], "download": 9, "tutori": [9, 13, 64, 73, 76], "ve": [9, 21, 22, 25, 55, 60, 63, 64, 67, 68, 70, 74, 82, 87, 88], "preprocess": [9, 22, 33, 34, 38, 45, 48, 51, 65, 68, 74, 75, 79, 83, 84], "singl": [9, 17, 21, 37, 38, 40, 50, 55, 58, 62, 64, 76, 78, 81, 82, 88], "countri": 9, "franc": [9, 74, 75, 76], "drop": [9, 19, 25, 34, 35, 38, 50, 51, 74, 82], "unus": 9, "subset": [9, 19, 35, 37, 62, 68, 82, 87], "concaten": 9, "ll": [9, 14, 21, 22, 25, 28, 31, 34, 38, 39, 40, 44, 45, 46, 50, 51, 53, 58, 59, 63, 64, 67, 70, 72, 74, 75, 77, 78, 86, 87, 88], "present": [9, 27, 42, 73, 74, 75], "run": [9, 14, 17, 21, 23, 25, 28, 31, 38, 44, 53, 59, 63, 64, 67, 68, 70, 73, 82, 83, 86], "matter": [9, 49], "full": [9, 11, 18, 59, 75, 76, 82], "instal": [10, 11, 12, 13, 59, 70, 76], "pip": [10, 11, 12, 13, 59, 70, 76], "norm": [10, 13, 49, 64], "num_column": [10, 13, 72, 73], "dimension": [10, 42, 64, 86, 87], "arrai": [10, 14, 19, 28, 33, 55, 73, 86, 87], "liter": [10, 11, 17, 55], "design": [10, 11, 46, 60, 74, 81, 90], "center": [10, 26, 82, 88], "region": [10, 53, 82], "assum": [10, 17, 19, 25, 33, 44, 45, 62, 63, 68, 74, 78, 82, 84, 86, 87], "runtimetypedescriptor": [10, 20, 26], "clamp": [10, 13, 14, 17, 19, 23, 47, 55, 67, 68, 78, 82, 83], "alreadi": [10, 25, 38, 43, 51, 59, 60, 62, 63, 67, 72, 74, 77, 78, 82, 87], "add": [11, 14, 19, 26, 33, 37, 42, 46, 50, 51, 59, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 81, 82, 87], "datafram": [11, 14, 19, 26, 31, 38, 43, 49, 50, 51, 64, 67, 68, 75, 76, 82, 83, 84, 86, 87], "expr": [11, 14, 19], "regist": 11, "plan": [11, 14, 44, 60, 66], "specif": [11, 20, 26, 45, 46, 53, 59, 60, 62, 64, 74, 75, 76, 79, 82, 88], "here": [11, 17, 27, 45, 46, 59, 60, 62, 67, 68, 74, 75, 78, 84, 87, 88], "mani": [11, 25, 28, 31, 34, 38, 39, 40, 42, 51, 53, 55, 58, 59, 60, 63, 64, 68, 74, 75, 76, 77, 82, 83, 86], "typic": [11, 28, 30, 32, 33, 44, 46, 47, 51, 53, 55, 62, 65, 69, 82, 88], "object": [11, 46, 52, 54, 64], "null": [11, 19, 33, 35, 47, 51, 63, 65, 67, 74, 83, 86, 88], "shortcut": [11, 18], "exact": [11, 26, 68, 74, 82, 83, 84, 87, 88], "fill": [11, 19, 20, 21, 50, 62, 67, 68, 74, 83], "visit": 11, "collect": [11, 14, 21, 28, 33, 34, 36, 38, 39, 40, 41, 42, 44, 51, 53, 63, 64, 68, 74, 75, 76, 77, 82, 86], "u32": [11, 17, 20, 44, 55, 62], "ad": [11, 34, 42, 49, 50, 51, 55, 58, 59, 60, 63, 64, 74, 77, 82, 83, 87], "three": [11, 17, 18, 21, 31, 33, 62, 63, 74, 75, 78, 87], "standard_devi": [11, 14, 26], "sqrt": [11, 14, 26, 42, 64, 86, 87], "mean": [11, 13, 15, 17, 19, 22, 26, 27, 33, 34, 38, 42, 46, 47, 49, 50, 51, 59, 63, 66, 68, 72, 75, 76, 77, 78, 82, 83, 84, 86, 87, 88], "amount": [11, 42, 68, 75, 78, 82, 86, 87], "determin": [11, 14, 17, 21, 26, 28, 47, 50, 53, 63, 78, 86, 87, 88], "clip": [11, 17, 33, 53, 74, 75, 79, 82, 83, 86, 88], "denomin": [11, 68], "fill_nul": [11, 33, 36, 38, 44, 74, 75, 77], "config": 11, "float_precis": 11, "just": [11, 21, 23, 28, 31, 38, 42, 45, 49, 50, 53, 58, 59, 67, 68, 70, 72, 74, 75, 76, 82, 87], "prevent": [11, 23, 74, 87], "doctest": 11, "separ": [11, 19, 27, 41, 48, 50, 51, 59, 65, 67, 74, 75, 83, 84], "ratio": [11, 68, 82], "median": [11, 19, 34, 44, 73, 76], "calibr": [11, 14, 19, 42, 51, 67, 75, 78, 88, 90], "entropi": [11, 87], "quantil": [11, 19, 34, 76, 78, 90], "much": [11, 33, 34, 38, 42, 47, 48, 67, 68, 74, 75, 82, 83, 86, 88], "10": [11, 14, 17, 21, 22, 23, 26, 30, 31, 33, 38, 40, 44, 46, 47, 48, 50, 51, 53, 54, 63, 64, 65, 68, 73, 74, 75, 76, 82, 86, 87, 88], "30": [11, 33, 42, 68, 75, 86], "40": [11, 38, 39, 41, 67, 68, 74, 77, 86, 87], "50": [11, 14, 31, 49, 67, 68, 75, 78, 83, 86], "60": [11, 38, 65, 68, 74, 77, 86, 87], "70": [11, 49, 68, 86], "80": [11, 38, 68, 74, 77, 86], "90": [11, 68, 86, 87], "i64": [11, 14, 20, 26, 55], "likelihood": [11, 53, 68], "closer": [11, 42, 63, 68], "n_uniqu": [11, 34, 74], "address": 11, "chosen": [11, 49, 51, 82, 90], "standard_dev": 11, "null_count": [11, 34, 74], "unknown": [11, 19, 27, 51, 65, 66, 69, 74, 78, 83], "consid": [11, 15, 20, 25, 28, 33, 38, 39, 47, 48, 50, 53, 62, 65, 67, 71, 75, 77, 81, 83, 84, 86, 87], "boolean": [11, 14, 17, 19, 28, 37, 43, 47, 53, 77, 86, 87], "nulliti": [11, 19, 33, 51], "choos": [11, 19, 22, 27, 31, 42, 47, 49, 51, 56, 58, 62, 67, 73, 74, 78], "25": [11, 49, 64, 73, 74, 82], "quartil": [11, 74], "actual": [11, 26, 28, 38, 47, 53, 62, 64, 74, 83, 87], "impli": [11, 16, 17, 75, 77, 82], "sever": [11, 21, 22, 42, 48, 58, 62, 66, 74], "oper": [11, 25, 26, 37, 38, 43, 45, 46, 48, 50, 51, 70, 83], "due": [11, 19, 25, 47, 50, 53, 68, 74, 75, 83], "lf_plan": 11, "mimic": [11, 55, 62], "few": [11, 21, 52, 59, 67, 68, 73, 75, 76, 87], "predic": [11, 17, 35, 39, 41, 47, 53, 62, 86, 87], "discard": [11, 75, 77], "relev": [11, 25, 46, 88], "group_bi": [11, 14, 33, 34, 38, 39, 40, 41, 42, 64, 75, 77], "maintain_ord": 11, "named_bi": 11, "current": [11, 23, 25, 27, 28, 36, 40, 54, 65, 67, 70, 76, 77, 79, 82, 84], "join": [11, 57, 59, 64, 67, 75, 81, 84], "left_on": 11, "right_on": 11, "suffix": 11, "_right": 11, "join_nul": 11, "coalesc": 11, "allow_parallel": 11, "force_parallel": 11, "logic": [11, 62, 88], "named_expr": 11, "statement": [11, 18, 46, 79, 82, 83], "don": [11, 22, 25, 31, 44, 46, 47, 49, 50, 59, 62, 63, 64, 67, 68, 75, 82, 87, 88], "select_seq": 11, "sort": [11, 14, 28, 38, 39, 40, 41, 75, 77, 82], "more_bi": 11, "descend": 11, "nulls_last": 11, "multithread": 11, "denot": [11, 15, 26, 28, 47, 48, 55, 62, 67, 78, 82], "subtract": [11, 62], "95": [11, 14, 17, 26, 74, 75, 79, 86], "convict": 11, "dtype": [11, 14, 33, 38, 41], "ignor": [11, 13, 14, 22, 49, 50, 62, 63, 67, 68, 82, 84], "union": [11, 17, 20, 26, 76, 82], "attr": 11, "6": [11, 17, 21, 22, 26, 28, 34, 38, 41, 42, 47, 64, 65, 67, 68, 74, 75, 84, 86, 87], "429605": 11, "interpret": [11, 59, 63, 68, 79, 82], "def": [11, 14, 17, 21, 28, 30, 31, 32, 38, 49, 62, 64, 65, 67, 68, 72, 73, 82, 83, 86, 87], "interpret_accuraci": 11, "with_column": [11, 34, 38, 39, 40, 41, 64, 74, 75, 77], "with_columns_seq": 11, "with_kei": [11, 34, 38, 75], "explicit": [11, 17, 38, 63, 66, 76], "lgb_plan": 11, "lazygroupbi": 11, "agg": [11, 14, 33, 34, 38, 39, 40, 41, 42, 64, 75, 77], "named_agg": 11, "alias": 11, "what": [11, 31, 44, 46, 47, 51, 55, 58, 60, 63, 67, 78, 82, 84, 87, 88, 89], "publicli": [11, 68, 78], "might": [11, 21, 47, 62, 74, 83, 87], "find": [11, 15, 17, 19, 21, 28, 38, 47, 51, 52, 53, 60, 62, 65, 67, 73, 79, 80, 82, 83, 87, 88], "tabl": [11, 19, 26, 74, 75], "Be": [11, 47, 59, 67, 75, 78], "awar": [11, 25, 42, 58, 75, 81], "aspect": [11, 46, 62, 75], "mark": [11, 62, 63, 70, 75], "subject": [11, 17, 21, 25, 75, 82], "protect": [11, 21, 27, 34, 46, 50, 68, 74, 75, 76, 78, 86, 90], "so": [11, 15, 19, 21, 22, 28, 29, 31, 34, 36, 38, 39, 40, 42, 47, 48, 49, 51, 53, 54, 55, 58, 59, 60, 63, 64, 67, 68, 74, 75, 77, 82, 83, 87, 88], "conserv": 11, "individu": [11, 14, 22, 27, 28, 31, 34, 36, 38, 40, 42, 47, 51, 53, 56, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 81, 82, 84, 86, 87, 88], "distinct": [11, 18, 19, 82, 86], "significantli": [11, 42, 64, 74, 75, 78], "know": [11, 17, 21, 23, 25, 26, 28, 31, 44, 46, 60, 65, 66, 67, 68, 74, 75, 78, 81, 82, 83, 84, 86, 88], "veri": [11, 27, 42, 46, 49, 51, 63, 65, 66, 68, 74, 75, 82, 83, 86, 87, 88], "loos": 11, "total": [11, 14, 23, 28, 34, 47, 48, 49, 67, 74, 75, 76, 84, 86], "issu": [11, 25, 58, 76, 84], "paper": [11, 14, 19, 26, 46, 60], "widespread": [11, 19], "underestim": [11, 19, 50, 51, 68], "onc": [11, 17, 21, 22, 47, 55, 58, 59, 60, 70, 76, 86], "those": [11, 30, 32, 38, 54, 58, 63, 74, 77, 86, 88], "evalu": [11, 14, 21, 45, 46, 47, 53, 63, 67, 83, 86, 87, 88], "against": [11, 19, 25, 27, 50, 58, 65, 87], "repeatedli": [11, 68], "exhaust": [11, 21], "lazi": [11, 74, 75], "circumv": 11, "consum": [11, 68], "entir": [11, 19, 21, 22, 68, 78, 88], "alloc": [11, 72, 74, 75], "budget": [11, 17, 21, 23, 44, 53, 64, 65, 67, 68, 72, 74, 75, 78, 84, 86, 90], "remain": [11, 19, 25, 46, 50, 70, 75, 77], "advertis": [11, 88], "becaus": [11, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 40, 42, 45, 46, 47, 48, 50, 51, 53, 59, 62, 63, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 82, 86], "ever": [11, 28, 30, 42, 74, 75, 77, 84], "analyst": [11, 21, 68, 83, 87], "observ": [11, 68, 74, 75, 82, 84], "extend": [11, 21, 44, 62, 67, 84], "shuffl": [11, 73, 75, 86], "enabl": [11, 14, 17, 22, 24, 59, 62, 66, 70, 76], "pca": [12, 13, 69, 71, 78], "pcaepsilon": [12, 13], "make_private_pca": [12, 13], "scikit": [12, 13, 59, 72], "learn": [12, 13, 24, 55, 59, 64, 72], "organ": [12, 17, 59, 81], "follow": [12, 15, 17, 19, 22, 24, 25, 26, 27, 28, 33, 34, 37, 38, 42, 47, 49, 50, 51, 55, 58, 59, 63, 64, 66, 70, 73, 74, 75, 78, 79, 82, 83, 84, 86, 88], "our": [13, 14, 18, 25, 26, 28, 31, 32, 58, 59, 62, 64, 67, 68, 73, 74, 76, 78, 82, 83, 84, 86, 87], "diffenti": 13, "row_norm": [13, 72], "n_sampl": [13, 72], "n_featur": [13, 72], "n_compon": [13, 72], "n_chang": 13, "whiten": 13, "wrapper": [13, 70], "try": [13, 20, 24, 26, 31, 33, 40, 42, 50, 53, 59, 67, 81], "importerror": 13, "detail": [13, 17, 21, 25, 26, 46, 47, 48, 51, 53, 59, 62, 74, 83, 84, 89], "mirror": 13, "components_": [13, 72], "multipli": [13, 14, 19, 50, 51, 88], "squar": [13, 19, 26, 42, 73, 87], "root": [13, 21, 26, 59], "divid": [13, 48, 49, 51, 74, 75, 81], "singular": 13, "uncorrel": 13, "compon": [13, 25, 46, 58, 62, 72, 88], "wise": 13, "varianc": [13, 19, 48, 67, 68, 75, 78], "fit": [13, 72, 73], "model": [13, 22, 25, 27, 28, 30, 32, 45, 46, 48, 50, 64, 67, 69, 72], "train": 13, "eigval": 13, "eigvec": 13, "namedtupl": 13, "per": [13, 14, 28, 31, 42, 68, 76, 87], "alia": [13, 27, 34, 36, 55, 64, 74], "unit_epsilon": 13, "num_compon": 13, "right": [13, 15, 19, 31, 38, 39, 56, 58, 64, 75, 82], "eigenvector": [13, 72], "vt": 13, "bitvec": 14, "frequenc": [14, 27], "k": [14, 17, 19, 26, 28, 47, 51, 53, 64, 65, 82, 86, 87, 88], "yfrac": 14, "frac": [14, 15, 28, 68, 82], "bitvector": 14, "flip": [14, 28, 86], "encod": [14, 33, 38, 54, 75], "total_limit": 14, "value_limit": 14, "size_factor": 14, "project": [14, 25, 56, 58, 59, 81, 86, 90], "spars": [14, 31], "o": [14, 49, 50, 51, 55, 59, 68], "process": [14, 21, 23, 24, 25, 26, 28, 33, 38, 47, 48, 49, 50, 60, 61, 63, 64, 66, 67, 68, 70, 72, 73, 78, 81, 82, 84, 88], "beta": [14, 73], "There": [14, 25, 26, 46, 47, 48, 51, 52, 53, 55, 59, 60, 63, 64, 68, 81, 82, 86], "memori": [14, 33, 51, 81], "trade": [14, 21, 60, 68], "off": [14, 21, 28, 38, 51, 60, 64, 68, 75, 76], "suffici": [14, 26, 47, 59, 65, 74], "larg": [14, 17, 26, 27, 38, 42, 49, 50, 53, 58, 62, 65, 67, 74, 75, 78, 82, 86, 87], "hash": [14, 62, 86, 87], "collis": 14, "alp21": 14, "low": [14, 63, 64, 68, 70, 81, 86], "optim": [14, 17, 31, 59, 73, 90], "fast": [14, 26, 73], "ab": [14, 19, 28, 64, 82], "2106": 14, "10068": 14, "ci": [14, 59, 60], "\u03b2": 14, "step": [14, 50, 53, 59, 73, 78], "qi": [14, 27], "inputmetr": [14, 26], "granular": [14, 31], "print": [14, 17, 21, 22, 23, 26, 28, 31, 48, 50, 65, 67, 68, 72, 82, 83, 84, 86, 87, 88], "Or": [14, 47, 67], "readabl": 14, "restrict": [14, 19, 38, 47, 50, 51, 62, 63, 88], "constant": [14, 17, 19, 27, 30, 48, 50, 55, 62, 67, 68, 78, 83, 84, 87], "grs12": [14, 19, 26], "univers": [14, 19, 26, 70, 73, 90], "maxim": [14, 19, 26, 31, 82], "stanford": [14, 19, 26], "edu": [14, 19, 26, 86], "tim": [14, 19, 26], "priv": [14, 19, 26], "geometr": [14, 26, 90], "done": [14, 15, 26, 28, 88], "cks20": [14, 26], "2004": [14, 26, 74], "00010": [14, 26], "over": [14, 15, 19, 21, 26, 28, 36, 42, 47, 50, 51, 63, 68, 74, 75, 76, 82, 83, 86], "1074": [14, 26], "propos": 14, "computation": 14, "effici": [14, 50, 51, 73], "looser": [14, 22, 30, 32, 67], "smallest": [14, 17, 46, 47, 53, 55, 63, 73, 75, 82], "tk": [14, 19, 27, 59], "tv": [14, 19, 27, 65], "exclud": [14, 33, 36, 53, 74, 76], "less": [14, 15, 19, 34, 35, 42, 49, 53, 64, 65, 68, 70, 74, 75, 76, 78, 82, 84], "minimum": [14, 50, 59], "govern": [14, 22, 78, 81], "exprplan": 14, "neighbor": [14, 17, 19, 26, 27, 45, 46, 47, 50, 51, 65, 78, 88], "tune": [14, 80], "abl": [14, 24, 45, 59, 66, 74, 83], "tradeoff": [14, 48, 80], "insid": [14, 21, 60, 62, 63], "still": [14, 17, 21, 25, 26, 28, 34, 47, 48, 49, 50, 53, 58, 62, 67, 68, 72, 75, 82, 83, 84, 86, 87, 88], "empti": [14, 20, 44, 74, 75], "imagin": [14, 31, 62, 83], "elementari": 14, "school": 14, "pet": 14, "grade": 14, "pet_count": 14, "need": [14, 17, 18, 19, 22, 27, 38, 45, 46, 47, 49, 50, 51, 53, 54, 59, 60, 62, 63, 64, 67, 72, 73, 74, 77, 82, 84, 86, 87, 88], "lf_domain_with_margin": 14, "With": [14, 42, 64, 76], "place": [14, 20, 59, 60, 63, 87], "plugin": [14, 24, 31, 54, 59, 68, 73], "now": [14, 21, 22, 32, 42, 44, 49, 50, 59, 62, 63, 65, 67, 68, 73, 74, 75, 78, 82, 83, 84, 86, 88], "piec": [14, 22, 60, 63], "dp_sum_pets_by_grad": 14, "introduc": [14, 19, 46, 49, 53, 68, 74, 75, 79, 82, 88], "df": [14, 64, 67, 68, 75, 76, 83, 84], "from_record": [14, 68], "No": [14, 20, 76, 82], "kindergarten": 14, "grader": 14, "second": [14, 21, 34, 41, 47, 59, 62, 63, 67, 73, 82, 86], "chicken": 14, "orient": 14, "prob": [14, 28], "categor": [14, 19, 28, 38, 44, 51], "discretedist": [14, 16, 27, 28], "randomized_respons": [14, 28], "outcom": [14, 62, 65, 68, 74, 75, 81, 84], "num_categori": 14, "random_str": 14, "99": [14, 17, 39, 74, 75, 76], "constant_tim": 14, "rappor": 14, "aggregat": 14, "preserv": [14, 21, 46, 50, 64, 73, 74, 77, 90], "ordin": 14, "1407": 14, "6981": 14, "randomized_response_bitvec": 14, "whether": [14, 15, 17, 27, 34, 53, 56, 58, 81], "bernoulli": 14, "sampler": [14, 26], "extrem": [14, 53, 75], "slow": 14, "m_rr": 14, "8006676684558611": 14, "formula": [14, 28, 68, 82], "ln": [14, 15, 28], "prepar": [14, 38, 41, 42, 69, 74, 75, 76], "byte": 14, "packbit": 14, "array_equ": [14, 87], "8": [14, 15, 17, 21, 22, 26, 38, 47, 50, 53, 55, 65, 68, 73, 74, 75, 82, 83, 84, 86, 87, 88], "uint8": [14, 33], "roundtrip": 14, "mech": 14, "frombuff": 14, "tobyt": 14, "compar": [14, 46, 47, 65, 73, 82, 86, 87], "unpackbit": 14, "slower": 14, "random_bool": 14, "index": [14, 19, 67, 68, 73], "highest": [14, 17], "tia": [14, 19, 48, 49, 51, 55, 63], "usiz": [14, 19, 20, 49, 51, 73], "linfdist": [14, 16, 19, 73], "gumbel_max": 14, "higher": [14, 17, 47, 59, 64, 68, 73], "max": [14, 15, 17, 30, 31, 46, 47, 48, 50, 51, 62, 68, 73, 74, 78, 82, 88], "min": [14, 26, 50, 68, 73, 78, 82], "select_index": 14, "privacy_map": [14, 30, 45, 63, 88], "everi": [14, 15, 19, 29, 47, 81, 82, 87], "pair": [14, 15, 19, 46, 47, 62, 67, 73, 82, 88], "associ": [14, 17, 19, 47, 50, 82, 83], "close": [14, 15, 17, 19, 45, 46, 47, 50, 62, 65, 68], "effect": [14, 19, 25, 33, 42, 50, 74, 81, 86, 87], "anydomain": 14, "anyobject": 14, "anymetr": 14, "anymeasur": 14, "const_funct": 14, "_arg": [14, 30], "42": [14, 67, 68, 86], "_d_in": 14, "user_measur": 14, "pm": 15, "quantifi": [15, 45, 67, 78], "smaller": [15, 38, 42, 47, 62, 64, 67, 68, 74, 75], "product": [15, 58, 74, 86, 87], "cdot": [15, 26, 28, 48, 82, 88], "commonli": [15, 35, 42, 44, 47, 63, 75], "notion": [15, 46], "possibl": [15, 17, 25, 28, 45, 46, 47, 53, 58, 62, 63, 68, 75, 82, 84, 88], "whenev": 15, "choic": [15, 26, 28, 50, 55, 58, 74, 78, 82, 86, 88], "exist": [15, 19, 51, 60, 62, 65, 73, 75, 81, 86], "event": 15, "e": [15, 26, 28, 46, 59, 62, 64, 82, 83, 84, 88], "pr": [15, 58, 59, 62, 64, 82], "d_": [15, 28, 48, 50, 82, 88], "mathrm": [15, 28, 82], "_e": 15, "condit": [15, 34, 68, 88], "until": [15, 25, 49, 65, 68], "neg": [15, 16, 19, 28, 34, 50, 51, 53, 62, 78, 82], "smooth": [15, 26, 47], "d_infti": 15, "max_": [15, 82], "subseteq": [15, 82], "textrm": 15, "supp": [15, 82], "big": 15, "dfrac": 15, "leq": [15, 82], "profil": [15, 17, 22, 29, 67, 75], "monoton": [15, 16, 17, 19, 31, 50, 51, 53], "decreas": [15, 68, 75, 87], "reject": [15, 33, 36], "nan": [15, 19, 33, 35, 47], "ep": [15, 67, 87], "els": [15, 19, 20, 38, 84], "enough": [15, 46, 75], "satur": [15, 19, 50], "499": 15, "invert": [15, 73], "suitabl": [15, 21, 53, 75, 88], "insuffici": [15, 21], "infinit": [15, 16, 35, 62, 82, 83], "inf": [15, 38, 77], "r\u00e9nyi": 15, "rdp": 15, "infti": 15, "d_alpha": 15, "mathbb": [15, 82], "userdiverg": 15, "essenti": [15, 22, 34, 42, 62, 69, 76], "beyond": [15, 22], "meaning": [15, 38, 39, 75, 77], "fuction": 16, "absolutedist": [16, 17, 19, 26, 27, 47, 51, 55, 63, 70, 82, 88], "l2distanc": [16, 17, 19, 27, 51, 55, 82], "partitiondist": 16, "userdist": 16, "pseudo": [16, 58, 86, 87], "symmetri": 16, "le": [16, 82, 88], "triangl": [16, 82], "inequ": [16, 62], "program": [17, 24, 25, 45, 59, 62, 63, 64, 70, 82, 88, 90], "framework": [17, 23, 24, 25, 47, 62, 63, 66, 70, 78, 81, 88, 89], "top": [17, 24, 26, 86], "lp_anydomain": 17, "section": [17, 19, 21, 22, 26, 27, 47, 50, 51, 58, 59, 62, 63, 66, 67, 69, 73, 74, 75, 76, 77, 79, 80, 82, 83, 85, 88, 89], "lp_anyfunct": 17, "lp_anymeasur": 17, "interfac": [17, 20, 21, 25, 50, 59, 60, 62, 63, 81, 86, 87], "__call__": 17, "101": 17, "concis": [17, 88], "tran": [17, 32, 45], "similar": [17, 19, 42, 47, 51, 59, 60, 62, 63, 64, 66, 68, 72, 73, 82, 86, 88], "integr": [17, 19, 26, 50, 58, 60, 62, 74, 75, 81, 82], "lp_anymetr": 17, "variant": [17, 40, 62], "messag": [17, 26, 48, 62, 63, 68], "gener": [17, 20, 25, 28, 42, 46, 51, 53, 57, 59, 62, 63, 64, 66, 68, 72, 74, 78, 79, 82, 83, 86, 87], "updat": [17, 21, 38, 44, 59, 62, 63, 84], "errorvari": 17, "stack": [17, 24, 58, 73, 87], "trace": [17, 24, 86], "give": [17, 24, 27, 46, 47, 48, 51, 53, 60, 63, 74, 82, 86, 87, 88], "vice": 17, "versa": 17, "query_typ": 17, "lp_anytransform": 17, "toa": [17, 19, 32, 49, 51, 63, 65, 67, 83, 84], "n2": 17, "n3": 17, "were": [17, 19, 22, 26, 45, 47, 50, 51, 53, 65, 74, 75, 76, 78, 82, 84, 87], "stabl": [17, 19, 27, 31, 34, 37, 45, 47, 49, 51, 60, 62, 63, 65, 68, 76, 82], "apart": [17, 38], "ouput": 17, "return_sign": 17, "decis": [17, 53], "boundari": [17, 53], "conduct": [17, 38, 53, 67, 68, 75, 86, 87], "exponenti": [17, 49, 90], "search": [17, 47, 52, 59, 67], "unari": 17, "awai": [17, 53, 68], "inferr": 17, "invalid": [17, 19, 53, 75, 77], "valueerror": [17, 20], "cannot": [17, 19, 20, 30, 32, 38, 39, 40, 42, 68, 75, 76, 77, 81, 82, 83], "remov": [17, 31, 33, 40, 46, 47, 48, 50, 51, 58, 74, 75, 77, 78, 82, 88], "histogram": [17, 19, 27, 33, 55, 66, 69, 78, 82], "emit": [17, 22, 26, 37, 45, 46, 62, 67, 84, 88], "dp_mean": [17, 67, 68, 78, 83, 84], "5235561269546629": 17, "make_chain": 17, "tightli": [17, 47], "said": [17, 81], "complet": [17, 19, 21, 25, 26, 28, 48, 49, 50, 51, 56, 58, 60, 63, 70, 72, 87, 88], "parameter": [17, 55], "nearest": [17, 19, 26, 50, 62, 74, 87], "major": [17, 25, 81, 83], "pre": 17, "produc": [17, 22, 26, 46, 51, 62, 83, 88, 90], "alwai": [17, 38, 42, 46, 47, 53, 55, 60, 62, 64, 75, 83, 88], "doubl": [17, 26, 47, 55], "discrete_laplac": 17, "widest": 17, "admiss": 17, "10_000": [17, 26, 50, 72, 84], "ideal": [17, 19, 25, 47, 49, 62, 78], "make_fixed_laplac": 17, "polici": [17, 81], "research": [17, 21, 25, 60, 76, 81], "accur": [17, 53, 64, 68, 87], "symmetr": [17, 19, 27, 46, 47, 50, 51, 73, 82, 88], "500": [17, 23, 49], "000": [17, 67, 76], "out": [17, 19, 20, 21, 25, 50, 53, 54, 59, 62, 63, 65, 67, 72, 73, 75, 82, 84, 86, 88], "necessary_scal": 17, "data_s": [17, 68, 83], "500_000": 17, "admit": [17, 28], "1000000": 17, "1498": 17, "dp_json": 17, "disallow": [17, 44], "binari": [17, 33, 38, 39, 47, 54, 59, 63, 67], "band": [17, 53], "Will": 17, "attempt": [17, 53, 59, 62, 63, 87], "recov": 17, "throw": [17, 38, 40, 47, 53, 63], "ok": [17, 62, 70], "li": 17, "dp_obj": [17, 54], "notebook": [18, 22, 26, 27, 46, 48, 49, 50, 51, 60, 62, 63, 64, 66, 67, 68, 72, 74, 79, 82, 83, 84, 86, 87, 88, 90], "begin": [18, 25, 28, 58, 62, 64, 81, 84], "after": [18, 19, 49, 51, 59, 62, 63, 67, 70, 77, 82, 83, 84, 88], "Its": 18, "deterministicli": 19, "size_guess": [19, 49], "branching_factor": [19, 49], "minim": [19, 53, 64, 87], "cdf": [19, 82], "ari": [19, 51], "tree": 19, "qyl13": 19, "understand": [19, 25, 46, 47, 54, 64, 73, 81, 88, 89], "hierarch": 19, "www": 19, "vldb": 19, "pvldb": 19, "vol6": 19, "p1954": 19, "qardaji": 19, "guess": [19, 49, 51, 68], "leaf_count": [19, 49], "expand": [19, 29, 60], "branch": [19, 49], "children": [19, 49, 87], "ta": [19, 51, 55], "leaf": [19, 49], "node": [19, 49, 78], "factor": [19, 42, 49, 78, 83], "shallow": 19, "size_limit": [19, 50], "pairwis": [19, 50, 51], "advantag": [19, 34, 63, 66, 67, 86, 87], "better": [19, 42, 49, 59, 64, 74], "establish": [19, 38, 67, 68, 82, 83, 88], "summat": [19, 50, 51], "item": [19, 28, 62, 65, 74], "f32": [19, 20, 26, 50, 51, 55, 62], "half": [19, 34, 86, 87], "precis": [19, 20, 26, 46, 47, 50, 55, 62, 64, 78, 82], "csvw22": 19, "2207": 19, "10635": 19, "dmns06": 19, "analysi": [19, 26, 28, 32, 42, 47, 50, 55, 64, 66, 68, 69, 72, 75, 76, 78, 83, 90], "peopl": [19, 60, 61, 64, 68, 75], "csail": 19, "mit": 19, "asmith": 19, "tcc": 19, "final": [19, 31, 49, 58, 63, 73, 75, 81], "keep": [19, 21, 33, 50, 67, 68, 73, 80, 82, 83, 86], "overflow": [19, 47, 50, 51, 53, 62, 74], "impos": 19, "overestim": [19, 68], "share": [19, 21, 33, 38, 45, 50, 51, 54, 59, 67, 75, 82, 87], "sign": [19, 47, 50, 51, 53, 55, 56, 58, 62], "failur": [19, 44], "handl": [19, 28, 47, 51, 54, 58, 65, 67, 68, 74], "noisi": [19, 26, 28, 31, 49, 68, 74, 75, 82, 84, 88], "summari": [19, 51, 74, 75, 90], "cumul": [19, 49], "datum": [19, 51], "let": [19, 25, 42, 45, 46, 47, 62, 63, 64, 66, 67, 68, 70, 73, 74, 75, 81, 82, 87], "inclus": 19, "layer": [19, 83], "balanc": [19, 75], "implicitli": [19, 51, 63], "store": [19, 21, 33, 47, 62, 84], "breadth": 19, "leav": 19, "even": [19, 24, 30, 35, 38, 39, 42, 47, 50, 53, 59, 60, 67, 73, 74, 75, 82], "adjust": [19, 22, 26, 28, 49, 50, 67, 74, 76, 86, 87], "apport": 19, "rel": [19, 34, 62, 64, 74, 75, 83, 86], "hrms09": 19, "boost": 19, "through": [19, 20, 25, 29, 46, 60, 66, 70, 75, 76, 81, 84, 88], "0904": 19, "0942": 19, "bv17": 19, "finit": [19, 26, 50, 82, 88, 90], "1709": 19, "05396": 19, "null_categori": [19, 49], "appear": [19, 33, 58, 63, 64], "end": [19, 23, 26, 28, 51, 58, 62, 63, 65, 68, 86], "col_nam": [19, 65, 67, 83, 84], "dataframedomain": [19, 63], "hashabl": [19, 51], "deprec": 19, "sinc": [19, 21, 22, 28, 33, 34, 35, 42, 47, 48, 50, 53, 62, 63, 68, 74, 75, 76, 78, 82, 86, 87, 88], "version": [19, 25, 27, 54, 59, 62, 70, 76], "column_nam": 19, "imput": [19, 33, 44, 67, 68, 74, 75, 83], "edg": [19, 28, 38, 49, 51, 53, 78, 89], "bin": [19, 31, 38, 49, 51, 59, 75, 77], "increas": [19, 26, 36, 42, 46, 50, 51, 64, 68, 73, 75, 82, 84, 86, 87], "fall": 19, "infin": [19, 31, 62, 82], "ident": [19, 22, 62, 66], "warn": [19, 33, 84], "won": [19, 31, 50, 64, 67, 74, 75], "chainabl": 19, "wherea": [19, 42, 47, 64, 77], "replac": [19, 38, 49, 63, 67, 82, 83, 84], "uniformli": 19, "treat": [19, 55, 68], "manipul": [19, 20, 33, 37, 40, 41, 43, 44, 50, 84], "round": [19, 26, 50, 62, 65, 82, 83, 86, 87], "unbound": [19, 50, 51, 82, 88], "op": [19, 20], "enforc": [19, 38, 39, 63, 67, 70, 75], "boundedmetr": 19, "unboundedmetr": 19, "unord": 19, "permut": 19, "orderedmetr": 19, "quantile_score_candid": 19, "tighter": [19, 47, 68, 78, 84], "bin_edg": 19, "interpol": [19, 49], "wa": [19, 22, 28, 47, 50, 67, 74, 75, 76, 81, 82, 84, 87], "befor": [19, 21, 28, 31, 32, 38, 43, 44, 45, 49, 51, 53, 56, 59, 60, 63, 64, 67, 68, 74, 75, 82, 87], "truncat": [19, 48, 50, 51, 53, 84], "downcast": 19, "load": [19, 31, 51, 54, 59, 65, 67, 85], "token": 19, "line": [19, 21, 49, 59, 62, 63, 68, 75], "exprdomain": 19, "indicator_column": 19, "keep_column": 19, "deviat": 19, "ssd": 19, "unorderedmetr": 19, "stability_map": [19, 31, 32, 45, 63, 73], "runtim": [19, 26, 33], "ddof": 19, "dhk15": 19, "social": [19, 75], "scienc": [19, 73, 81], "hona": 19, "kr": 19, "doraziohonakerkingprivaci": 19, "degre": 19, "freedom": 19, "bridg": 20, "reli": [20, 24, 42, 59], "secur": [20, 57, 59, 60, 75, 81], "natur": [20, 64, 87], "fine": [20, 74, 84], "grain": 20, "thei": [20, 21, 22, 24, 25, 32, 35, 42, 45, 46, 47, 49, 51, 59, 62, 63, 68, 73, 82, 84, 88], "gap": [20, 26, 62], "normal": [20, 42, 73, 87], "public_exampl": 20, "py_object": 20, "recogn": [20, 62], "subtyp": 20, "type_nam": 20, "hint": [20, 60], "std": 20, "plaintext": 20, "depth": [20, 50, 55, 62], "_genericalia": [20, 26], "genericalia": [20, 26], "accord": [20, 33, 38, 42, 50, 51, 76, 88], "keyword": 20, "inherit": 20, "getitem": 20, "stdlib": 20, "throughout": [20, 38, 55, 74, 75], "particularli": [20, 39, 55, 60, 64], "unspecifi": 20, "u8": [20, 47, 55], "u16": [20, 55], "u64": [20, 55], "i8": [20, 55], "i16": [20, 55], "vet": [21, 24, 25, 26, 28, 48, 49, 50, 59, 62, 67, 70, 72, 84, 88], "opt": [21, 25, 26, 28, 48, 49, 50, 58, 67, 70, 72, 84, 88], "contact": [21, 26, 28, 48, 49, 50, 56, 61, 72, 88], "thank": [21, 26, 28, 48, 49, 50, 56, 72, 88], "count_mea": [21, 48], "sum_mea": 21, "notic": [21, 22, 26, 27, 34, 47, 51, 62, 63, 67, 68, 74, 82, 84, 87, 88], "togeth": [21, 22, 42, 46, 47, 50, 51, 63, 67, 70, 73, 75, 82, 88], "batch": [21, 75], "mean_fraction_mea": 21, "int_dataset": 21, "7": [21, 26, 33, 34, 38, 39, 40, 41, 42, 47, 50, 65, 67, 68, 73, 74, 75, 77, 82, 84, 86, 87, 88], "dp_sum": [21, 48, 67, 88], "dp_count": [21, 48, 67, 68, 78], "simpli": [21, 26, 28, 38, 42, 47, 53, 68, 84, 88], "constitu": [21, 22, 46, 68], "relax": [21, 50, 64, 75], "view": [21, 24, 58, 78], "anoth": [21, 46, 47, 48, 50, 55, 60, 62, 63, 67, 75, 77, 82], "gain": [21, 42, 68], "discuss": [21, 22, 26, 27, 44, 47, 64, 67, 74, 78, 82], "later": [21, 24, 58, 59, 63, 67, 82], "case": [21, 22, 26, 28, 29, 38, 42, 44, 47, 48, 50, 51, 53, 54, 58, 60, 62, 63, 64, 67, 68, 73, 74, 76, 78, 82, 84, 86, 88, 89], "explicitli": [21, 25, 26, 34, 42, 55, 63, 75, 78], "consumpt": [21, 88], "sc_mea": 21, "sc_qbl": 21, "machin": [21, 64], "similarli": [21, 22, 26, 28, 49, 51, 53, 63, 67, 75, 82, 88], "prove": [21, 29, 62, 82], "hold": [21, 47, 49, 50, 62, 82, 83, 88], "lock": 21, "freez": 21, "previous": [21, 82], "arriv": 21, "artifact": [21, 62], "unfortun": [21, 33, 50, 74, 75, 82], "doesn": [21, 47, 50, 51, 53, 67, 77, 84, 86], "necessarili": [21, 47, 50, 82], "further": [21, 22, 26, 33, 42, 51, 64, 73, 75, 82, 86, 88], "hope": 21, "plain": 21, "old": [21, 75, 76], "str_space": 21, "str_sc_mea": 21, "str_sc_qbl": 21, "repeat": [21, 42], "mind": [21, 33, 42, 60, 67, 68, 75, 82, 86], "max_contribut": [21, 49, 88], "sum_tran": [21, 22, 50], "snip": [21, 30, 32, 62, 63], "adp_sc_qbl": 21, "\u03c1_1": 21, "\u03c1_2": 21, "scale_weight": 21, "w": [21, 86], "make_zcdp_sc": 21, "approxdp": [21, 22], "zcdp_compositor_scal": 21, "zcdp_compositor": 21, "child": [21, 76], "zcdp_sc_qbl": 21, "rho_1": 21, "rho_2": 21, "0734": 21, "0146": 21, "make_zcdp_sum_queri": 21, "dg_scale": 21, "At": [21, 38, 59, 62, 86, 87], "becom": [21, 24, 26, 42, 50, 59, 62, 68, 74, 86], "adp_count_mea": 21, "adp": 21, "refus": 21, "failedfunct": 21, "conclus": 21, "chainer": [22, 47], "increment": 22, "longer": [22, 31, 59, 75, 77], "pipelin": [22, 51, 73], "stitch": 22, "make_chain_mm": 22, "onto": 22, "conform": [22, 51, 82], "lap_mea": 22, "noisy_sum": 22, "investig": 22, "practic": [22, 33, 47, 50, 70, 74, 76, 82, 84, 86, 88], "frequent": [22, 78], "written": [22, 42, 51, 62], "automat": [22, 38, 40, 42, 60, 63, 67, 82], "noisy_sum_mea": 22, "success": [22, 31, 58], "bounded_sum": [22, 47, 88], "base_dl": 22, "subtl": 22, "capabl": 22, "domainmismatch": 22, "github": [22, 57, 58, 59, 60, 67], "com": [22, 59, 67, 86, 87], "297": 22, "noisy_sum_tran": 22, "come": [22, 26, 53, 58, 67, 74, 76, 82, 86], "intend": [22, 25, 46, 51, 71, 74, 89], "preprocessor": [22, 67, 84], "fixedsmoothedmaxdiverg": 22, "thorough": [22, 47, 76, 88], "explan": [22, 51, 55, 63, 87], "meas_puredp": 22, "meas_fixed_approxdp": 22, "meas_zcdp": 22, "meas_approxdp": 22, "11": [22, 40, 50, 65, 67, 68, 73, 74, 75, 82, 84, 86], "688596249354896": 22, "13": [22, 26, 49, 63, 65, 74, 75, 82, 87], "3861046488579": 22, "08": 22, "permiss": [22, 53, 55, 56, 63], "trust": [22, 30, 32, 67], "arbitrarili": [22, 67, 82], "standard": [22, 50, 68], "03": 22, "97": [22, 83, 86], "theoret": [22, 82, 83], "captur": [22, 26, 46, 47, 62, 82, 88], "had": [22, 47, 68, 76, 82], "4941": 22, "efficaci": 22, "improv": [22, 25, 42, 58, 73, 78], "rather": [23, 45, 58], "sum_queri": 23, "dp_sum_queri": 23, "down": [24, 63, 68, 74, 75], "pictur": 24, "complement": 24, "bottom": [24, 59, 86], "edit": [24, 51, 59, 62], "cargo": [24, 59, 63, 70, 76], "toml": [24, 59, 70, 76], "adversari": [24, 59, 62, 74, 86, 87], "someth": [24, 54, 59], "promis": [24, 26, 48, 59, 83, 88], "comprehens": [24, 59], "histori": [25, 62], "aim": 25, "commun": [25, 28, 29, 59, 60, 62, 68, 76, 81, 86, 87, 90], "trustworthi": 25, "deploi": 25, "progress": 25, "impact": [25, 55, 74], "real": [25, 31, 44, 66, 75, 76, 82, 86, 90], "arithmet": [25, 38, 50, 51, 62, 88], "common": [25, 33, 34, 38, 42, 51, 55, 59, 61, 64, 75, 78, 82], "literatur": [25, 68], "Their": 25, "discrep": 25, "ongo": [25, 83], "clearli": [25, 30, 74, 75], "distinguish": [25, 82, 86], "ones": [25, 60], "concret": [25, 47, 63], "faithfulli": 25, "attack": [25, 60, 68, 89], "harden": 25, "thing": [25, 46, 59, 62], "cach": 25, "etc": [25, 51], "who": [25, 28, 60, 76, 84], "obtain": [25, 82, 83, 86, 87], "outsid": [25, 37, 50, 74, 86], "carefulli": [25, 51, 56, 62, 81], "implic": 25, "critic": [25, 47], "formal": 25, "undergo": [25, 59], "verifi": [25, 30, 32, 46], "characterist": [25, 45, 46], "involv": [25, 61, 62, 63, 64, 75], "mathemat": [25, 46, 47, 66, 81, 88], "underwai": [25, 67, 70, 84], "uncov": 25, "bug": [25, 57, 62], "flag": [25, 58, 59], "unvet": 25, "conceptu": [25, 46, 69, 81], "basi": [25, 30, 32], "foremost": 25, "among": [25, 27, 75, 82, 87], "concept": [25, 55, 63, 82], "prototyp": [25, 29], "fulli": [25, 28], "flesh": 25, "roadmap": 25, "wait": [25, 67], "flux": 25, "lot": 25, "backward": 25, "incompat": [25, 59], "wai": [25, 33, 34, 42, 44, 45, 46, 47, 50, 51, 58, 60, 62, 63, 75, 78, 80, 82, 83, 84], "flexibl": [25, 45, 46, 70, 88], "evolv": 25, "appreci": 25, "feedback": [25, 58, 60], "offer": [25, 82], "across": [25, 74, 75, 76, 78], "strive": 25, "high": [25, 27, 46, 51, 64, 75, 82, 83], "encount": [25, 47, 59, 60], "variat": [26, 34, 67, 74, 78, 82], "ubiquit": [26, 88], "ecosystem": [26, 88], "five": [26, 82, 88], "mu": [26, 64, 88], "importantli": [26, 88], "permit": [26, 28, 68, 88], "quantiti": [26, 34, 62, 68, 74, 88], "base_lap": [26, 88], "8418214435677124": 26, "analog": 26, "gauss": 26, "322023365796082": 26, "125": 26, "base_gauss": 26, "analogu": 26, "continu": [26, 62], "while": [26, 30, 34, 36, 38, 40, 42, 46, 47, 49, 50, 51, 54, 58, 63, 68, 73, 74, 75, 82, 86], "base_discrete_lap": 26, "discretelaplac": 26, "base_discrete_gauss": 26, "discretegaussian": 26, "cover": [26, 34, 46, 50, 51, 77], "thu": [26, 62, 64, 68, 75, 82, 86, 88], "again": [26, 62, 67, 76], "base_lap_vec": 26, "wrong": 26, "often": [26, 47, 58, 82, 83], "page": [26, 37, 56, 59, 70, 88], "info": [26, 56, 57, 62, 75, 86, 88], "lt": [26, 50, 67, 87], "gt": [26, 39, 50, 67, 87], "249922018362259": 26, "5557446543831857": 26, "620935690993615": 26, "appropri": [26, 50, 64, 73, 76, 88], "lp": 26, "reflect": [26, 54, 58], "relationship": [26, 46, 50, 64, 73, 82, 83, 87], "qo": [26, 55], "forwardref": 26, "39": [26, 59, 65, 67, 76, 84, 87], "latest": [26, 59, 62], "py": 26, "ref": 26, "rtype": 26, "calcul": [26, 46, 50, 64, 68, 73, 74, 83, 88], "base_gauss_vec": 26, "414": 26, "999698": 26, "By": [26, 45, 62, 64, 74, 82, 86], "64": [26, 47, 55], "32": [26, 47, 54, 55, 62, 65, 67], "ration": [26, 62], "represent": [26, 33, 38, 47, 50, 51, 62, 63], "therefor": [26, 38, 42, 44, 50, 51, 64, 67, 74, 75, 82, 88], "tight": [26, 74], "truli": [26, 74], "subnorm": 26, "faster": [26, 33, 59], "penalti": [26, 50], "subsequ": [26, 74], "plot": [26, 49, 50, 64, 65, 68, 73, 82, 84, 86, 87], "matplotlib": [26, 49, 64, 65, 68, 73, 82, 86, 87], "pyplot": [26, 49, 64, 65, 68, 73, 82, 86, 87], "plt": [26, 49, 64, 65, 68, 73, 82, 86, 87], "num_sampl": 26, "fig": [26, 65, 68], "ax": [26, 42, 65, 68, 84, 87], "subplot": [26, 68], "nrow": 26, "ncol": 26, "figsiz": [26, 64], "subplots_adjust": 26, "axi": [26, 68, 72, 73, 86, 87], "zip": [26, 28, 38, 68], "return_count": 26, "bar": [26, 50, 64, 65, 68, 75], "set_xtick": 26, "set_titl": 26, "set_ylabel": 26, "densiti": [26, 49, 64, 82], "suptitl": 26, "increasingli": 26, "approach": [26, 46, 48, 49, 65, 74, 75, 84, 87, 88, 89], "penal": 26, "behavior": [26, 44, 46, 53, 60, 62, 68, 74, 77, 87], "1073": 26, "\u03b5_penalti": 26, "k_i": 26, "panda": [26, 31, 49, 50, 68, 83, 86, 87], "pd": [26, 31, 49, 50, 68, 83, 86, 87], "set_index": 26, "000000e": 26, "00": [26, 33, 76, 87], "940656e": 26, "324": 26, "888609e": 26, "31": [26, 65, 67, 84, 86], "01": [26, 40, 41, 74, 76], "overview": [27, 51, 59, 69, 90], "defint": 27, "exposit": [27, 67], "local": [27, 28, 54, 59, 70, 76], "meant": 28, "devic": [28, 78], "central": 28, "server": [28, 54, 59], "stronger": 28, "privileg": 28, "network": 28, "character": [28, 46, 62], "six": [28, 42, 88], "wedg": 28, "_bernoulli": 28, "rr_bool_mea": 28, "75": [28, 49, 73, 74, 86], "alice_survey_respons": 28, "0986": 28, "rr_mea": 28, "197": 28, "proport": [28, 42, 74], "respond": [28, 42, 68, 75], "num_respons": 28, "true_prob": 28, "private_bool_respons": 28, "binomi": 28, "append": [28, 68, 84, 86, 87], "naive_proport": 28, "naiv": [28, 82], "bia": [28, 53, 68, 74, 75, 79, 87], "rr": 28, "unbias": [28, 68], "x_i": [28, 88], "y_i": 28, "texttt": [28, 62], "_bool": 28, "_mea": 28, "align": [28, 38, 39, 62, 73, 75, 77], "distil": 28, "debias_randomized_response_bool": 28, "mean_releas": [28, 67], "estimated_bool_proport": 28, "suffer": [28, 76], "private_cat_respons": 28, "counter": [28, 68, 82, 87], "naive_cat_proport": 28, "cat": [28, 78], "de": 28, "th": 28, "c_k": 28, "law": 28, "sum_": 28, "j": [28, 73, 84], "ne": [28, 39], "c_j": 28, "Then": [28, 50, 59, 70, 82], "raw": [28, 49, 83, 86, 87], "pk": 28, "debias_randomized_respons": 28, "estimated_cat_proport": 28, "bias": [28, 68], "estimated_bool_count": 28, "estimated_cat_count": 28, "astyp": [28, 31, 73, 86, 87], "wide": 29, "own": [29, 30, 31, 32, 50, 53, 54, 55, 58, 60, 61, 81, 82, 88, 90], "itself": [29, 47, 51, 53, 59, 68], "machineri": 29, "usual": [29, 38, 63, 68, 76, 77], "easier": [29, 46, 48, 53, 58, 65, 70, 75, 82, 86], "idea": [29, 59, 88], "barrier": 29, "broader": [29, 86], "translat": [29, 42, 51, 63, 66, 83], "mock": [30, 32, 44, 88], "make_base_const": 30, "interchang": [30, 32, 51, 55], "deni": 30, "incorpor": [30, 56, 68, 83], "world": [31, 66, 74, 90], "problem": [31, 53, 59, 60, 66, 86, 89], "yourself": [31, 56, 60, 74, 75], "look": [31, 42, 45, 47, 59, 60, 63, 67, 75, 81, 83, 86], "too": [31, 75], "uniform": [31, 72], "divers": 31, "On": [31, 47, 53, 58, 65, 68, 78, 81, 90], "appeal": 31, "report": [31, 57, 62], "gumbel": 31, "make_grouping_cols_scor": 31, "min_bin_contribut": 31, "assess": [31, 69], "rough": 31, "heurist": [31, 49, 53], "least": [31, 49, 62, 67, 73, 78, 83, 87, 90], "groupbi": [31, 87], "pandasdomain": 31, "make_select_grouping_col": 31, "min_bin_s": 31, "idx": 31, "row_count": 31, "col_count": 31, "private_data": 31, "too_uniform_": 31, "randint": [31, 78, 86, 87], "too_diverse_": 31, "just_right_": 31, "itertool": 31, "powerset": 31, "recip": 31, "duplic": [31, 32], "from_iter": 31, "m_select_gcol": 31, "89": 31, "dp_selected_grouping_column": 31, "make_repeat": 32, "mix": 32, "contigu": 33, "arrow": 33, "bitmap": 33, "lack": 33, "certain": [33, 40, 44, 74, 88], "simplest": [33, 74, 84], "uint32": [33, 38], "uint64": 33, "int8": 33, "int16": 33, "int64": 33, "uint16": 33, "acquir": 33, "although": [33, 44, 66], "lost": [33, 87], "upon": [33, 40], "float32": 33, "float64": [33, 73], "presenc": [33, 38, 42, 59], "fill_nan": [33, 38], "slowest": 33, "label": [33, 36, 38, 51, 62, 64, 65, 68, 73, 75, 82, 87], "to_phys": [33, 38], "forbid": 33, "trigger": [33, 63], "remap": 33, "cut": [33, 62, 77], "latter": [33, 35], "context_categor": 33, "unreach": [33, 40], "err": [33, 40, 62, 67], "kind": [33, 47, 49, 51, 53, 74, 75, 82], "date": [33, 38, 62, 75], "datetim": [33, 38, 41], "nanosecond": [33, 40, 41], "microsecond": [33, 41], "ingest": 33, "2000": [33, 68, 86], "hour": [33, 36, 38, 41, 74, 75, 76, 77], "2020": 33, "1500": 33, "2010": [33, 75], "timelentimeu3212": 33, "00100301": 33, "00100023": 33, "001000": 33, "dt": [33, 41], "tell": [34, 42, 47, 67, 81, 88], "recreat": [34, 74], "tabular": [34, 43, 69, 74], "introduct": [34, 62, 63, 69, 74, 89], "scan_csv": [34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 77], "ignore_error": [34, 36, 38, 39, 40, 41, 42, 64, 74, 75, 77], "36": [34, 36, 38, 39, 40, 41, 42, 64, 67, 74, 75, 76, 77, 84], "query_len_vari": 34, "hwusual": [34, 38, 39, 74, 75, 76, 77], "columnaggregatedistributionscalestrstrstrf64": [34, 38, 74, 75], "quot": [34, 38, 42, 59, 64, 74, 75, 77], "360": [34, 74], "detect": 34, "sexlenhwusuali64u32u32195762950472103723104234": 34, "unlik": [34, 53], "query_n_uniqu": 34, "180": [34, 42, 74], "hwusualu320": 34, "unsign": [34, 47, 55, 62], "happen": [34, 51, 53, 84], "query_count": 34, "complementari": 34, "query_counts_via_group": 34, "is_nul": [34, 35], "hwusual_is_nul": 34, "hwusual_is_nulllenboolu32false197918true1297": 34, "is_not_nul": 35, "is_finit": 35, "is_not_finit": 35, "is_nan": 35, "is_not_nan": 35, "four": [35, 45, 51, 63], "negat": 35, "not_": 35, "bitwis": 35, "simultan": [36, 87], "methodx": 36, "alphabet": 36, "joint": [36, 74, 86], "single_expr": 36, "abcd": 36, "split_expr": 36, "60_000_000": [36, 38, 39, 64, 74, 75, 77], "methodamethodbmethodcmethoddmethodei64i64i64i64i6417044841699390170288617032321705356": 36, "tempor": [37, 38, 40, 43, 44], "mixtur": [38, 39, 40, 75, 77], "correctli": [38, 68], "drawback": [38, 49], "void": 38, "inexact": [38, 51, 88], "hundr": 38, "thousand": [38, 86], "domin": [38, 87], "843177": 38, "046991": 38, "14400": [38, 74], "insert": [38, 49], "anywher": 38, "broken": 38, "phase": 38, "break": [38, 62, 63, 75, 77], "98": [38, 75, 76, 77, 86], "hwusuallencatu32": [38, 77], "6546": 38, "53980": 38, "15430": 38, "119890": 38, "spend": [38, 68, 75], "cut_label": 38, "left_clos": 38, "bl": 38, "br": 38, "144": [38, 75], "288": 38, "6216": 38, "54219": 38, "15574": 38, "2448": 38, "120004": 38, "Not": [38, 64, 74, 76], "confus": [38, 60], "complic": [38, 49], "hwactual": 38, "sure": [38, 59, 70], "hwusuallenu32u3203661629225400231530842492506119904": 38, "conjunct": [39, 67], "comparison": [39, 74, 87], "link": [39, 47, 58, 59, 60, 62, 88], "and_": 39, "over_40": 39, "sexover_40leni64boolu321false180451true228832false158382true21500": 39, "to_dat": [40, 41], "to_datetim": 40, "to_tim": 40, "year": [40, 41, 42, 65, 75, 76], "format": [40, 41, 44, 54, 62, 63, 68, 73, 83, 84], "yearlendateu322004": 40, "01165102005": 40, "01164482006": 40, "01161082007": 40, "01168022008": 40, "01167572009": 40, "01198462010": 40, "01240612011": 40, "01248422012": 40, "01248342013": 40, "0123316": 40, "lead": [40, 58, 62, 64, 68, 75, 87], "situat": [40, 47, 50, 51, 56, 67, 68, 86], "unstabl": 40, "reason": [40, 44, 45, 50, 53, 60, 63, 67, 74, 75, 76, 82, 83, 84], "lf_date": 41, "concat_str": 41, "refyear": 41, "quarter": [41, 42, 74, 75, 76], "lit": 41, "iso_year": 41, "month": [41, 76, 78], "week": [41, 76], "weekdai": 41, "dai": 41, "ordinal_dai": 41, "minut": 41, "seen": [41, 63, 75], "yearmonthleni32i8u322004342092004641792004941232004124061200534136": 41, "hellip": 41, "20121264242013363002013659052013956182013125702": 41, "benefit": [42, 46], "easili": [42, 84], "switch": 42, "labour": [42, 74, 75, 76], "perturb": [42, 47, 51, 53, 74, 82], "query_num_respons": [42, 74], "columnaggregatedistributionscaleaccuracystrstrstrf64f64": [42, 74, 75], "0354": 42, "long": [42, 47, 51, 60], "isn": [42, 62, 74, 86], "simplifi": [42, 50], "weaker": 42, "afford": [42, 78], "l_1": 42, "l_2": 42, "euclidean": [42, 64], "along": [42, 53], "taxicab": 42, "intuit": [42, 50, 67, 82, 86], "sens": [42, 62, 67, 82, 84], "travel": 42, "corner": 42, "crow": 42, "fli": 42, "opposit": 42, "grow": [42, 50], "slowli": 42, "v": [42, 43, 50, 59, 63, 65, 82], "worst": [42, 50, 51, 74, 78], "hide": [42, 81, 84], "attract": 42, "occur": [42, 59, 72], "quarterli": [42, 75, 76], "cadenc": [42, 76], "littl": [42, 50, 74], "knowledg": [42, 51, 67, 74, 78, 82], "context_margin": 42, "columnaggregatedistributionscaleaccuracythresholdstrstrstrf64f64u32": [42, 75], "060": 42, "0184": 42, "contrast": [42, 45, 59, 68, 87], "made": [42, 47, 53, 58, 59, 67, 74, 82, 84], "01133": 42, "fold": 42, "reduct": 42, "dimens": [42, 64], "explain": [42, 47, 49, 59, 66, 74, 77], "haven": 43, "review": [43, 55, 58, 81], "dive": [43, 50, 88], "materi": [43, 90], "think": [44, 62, 82], "realiti": 44, "somewhat": [44, 79], "mandatori": 44, "focus": [45, 58], "regardless": [45, 75], "arrang": 45, "determinist": [45, 46, 82], "sai": [45, 47, 50, 60, 82, 83, 84], "snippet": [45, 70, 79], "familiar": [45, 51, 55, 60, 62, 63, 74, 82, 84], "talk": [45, 60], "assembl": 46, "highli": [46, 78], "softwar": [46, 58], "faith": 46, "rigor": [46, 81, 82], "highlight": [46, 63], "acquaint": [46, 74], "motiv": [46, 86, 87], "encourag": 46, "illustr": [46, 64, 78, 82], "safe": [46, 50, 53], "g": [46, 83], "constrain": [46, 63], "glue": 46, "everyth": [46, 59], "possibli": [46, 63], "interdepend": 46, "built": [46, 59, 67, 68, 81], "programm": 46, "greatli": 46, "whole": [46, 74], "straightforward": 47, "f64_atom_domain": 47, "127": 47, "i32_bounded_domain": 47, "bool_vector_domain": 47, "bool_vector_2_domain": 47, "serv": [47, 73], "cap": 47, "fewest": 47, "bundl": 47, "midwai": 47, "effort": [47, 60, 81], "provabl": 47, "put": [47, 67], "clamper": [47, 51], "in_symmetric_dist": 47, "reus": [47, 67, 74, 75], "treatment": 47, "d_x": 47, "d_y": 47, "shown": [47, 63, 68, 74, 82], "whatev": [47, 59, 67], "epsilon_1": 47, "delta_1": 47, "incompar": 47, "epsilon_2": 47, "delta_2": 47, "neither": [47, 76], "nor": [47, 76], "tightest": [47, 53, 65], "speak": [47, 51, 53, 78, 82, 87], "surpris": 47, "never": [47, 55, 63, 82], "bisect": 47, "care": [47, 67, 78, 88], "sb_mean_tran": 48, "divis": [48, 68], "0000000000000169": 48, "particular": [48, 51, 55, 63, 64, 76, 81, 86, 88], "ten": 48, "resiz": [48, 67, 78, 83], "mean_mea": 48, "dp_fraction_mea": 48, "goe": [48, 58, 88], "techniqu": [49, 64, 74, 86, 87], "129": 49, "best": [49, 51, 58, 64, 70, 73, 74, 81], "seaborn": [49, 64, 68, 84], "sn": [49, 64, 68, 84], "displot": 49, "kde": [49, 84], "130": 49, "true_quantil": 49, "tolist": [49, 68], "342567934782284": 49, "46163987459231": 49, "27": 49, "466767771051295": 49, "131": 49, "procedur": [49, 53, 68, 83], "land": 49, "scan": 49, "132": 49, "quart_alpha": 49, "make_hist_quantil": 49, "num_bin": 49, "linspac": [49, 64, 73], "num": [49, 64], "bin_nam": 49, "make_from_scal": 49, "omit": 49, "realli": 49, "hist_quartiles_mea": 49, "33": [49, 65, 67], "411111111111111": 49, "29": [49, 86], "875": 49, "difficult": 49, "fewer": [49, 51, 67, 68, 83], "reach": [49, 50, 54, 72], "wider": 49, "slightli": [49, 50, 51, 75, 76, 82], "tend": [49, 53, 74], "recurs": 49, "parent": 49, "modif": [49, 68], "log_b": 49, "magnitud": [49, 50, 51, 53, 62, 75], "hyperparamet": 49, "133": 49, "1_500": 49, "lipschitz": 49, "134": 49, "make_tree_quantil": 49, "tree_quartiles_mea": 49, "0371403927139795": 49, "146207218782838": 49, "26": 49, "037387422664267": 49, "mention": [49, 62, 78], "earlier": [49, 68], "135": 49, "average_error": 49, "num_trial": [49, 86, 87], "hist_quantiles_mea": 49, "tree_quantiles_mea": 49, "sample_error": 49, "linalg": [49, 87], "hist_err": 49, "tree_err": 49, "nb": 49, "250": 49, "750": 49, "1_000": [49, 68, 73, 83, 84], "3_000": 49, "minor": 49, "visual": [49, 50, 68, 75, 87], "136": 49, "make_distribution_count": 49, "hist": 49, "xlabel": [49, 64, 65, 68, 73, 82, 84, 86, 87], "ylabel": [49, 50, 64, 65, 68, 73, 82, 86, 87], "deep": [50, 55, 90], "easi": [50, 55, 62, 72, 81], "widen": 50, "shift": [50, 53, 73, 82], "regim": [50, 53], "stair": 50, "titl": [50, 58, 62, 64, 65, 73, 86, 87], "sized_bounded_sum": 50, "width": [50, 64, 65], "ieee": 50, "754": 50, "00000000004426": 50, "hit": 50, "snag": 50, "million": [50, 74], "caus": [50, 51], "regress": [50, 60, 90], "degrad": 50, "00000009313226": 50, "unchang": 50, "save": 50, "unaffect": 50, "bake": 50, "00000000000295": 50, "vari": [50, 59, 74, 76, 78, 83, 86, 87], "isol": 50, "10_000_000": 50, "log_2": [50, 51], "abil": 50, "sqlite": 50, "mysql": 50, "exhibit": [50, 87], "akin": 50, "bewar": 50, "quickli": [50, 87], "strategi": [50, 51, 75], "0x107fd06d0": 50, "moment": [50, 58], "18": [50, 65, 74, 86, 87], "1234": 50, "0x133763240": 50, "compromis": 51, "codebook": [51, 75], "expertis": 51, "proper": [51, 56, 75], "peek": 51, "caster": [51, 67, 84], "tricki": 51, "manner": 51, "propag": 51, "fed": 51, "bypass": 51, "da": 51, "relabel": 51, "word": [51, 58, 63, 82], "finder": 51, "binner": 51, "15": [51, 65, 74, 75, 76, 82, 86], "indici": 51, "2342": 51, "2k": 51, "sizeddomain": 51, "target": [51, 53, 59, 68, 74, 79, 84, 87], "taken": 51, "downstream": 51, "Such": [51, 86], "make_sized_bounded_covari": 51, "loader": 51, "deeper": 51, "addition": [51, 74], "mantissa": 51, "manag": 52, "aid": 53, "primari": [53, 64], "secondari": 53, "oftentim": 53, "act": 53, "power": [53, 73, 86], "7071067811865477": 53, "unnecessari": 53, "largest": 53, "414213562373095": 53, "353553389770093": 53, "locat": [53, 59, 60], "unkown": 53, "thrown": 53, "eight": 53, "16": [53, 55, 74], "logarithm": 53, "explor": [53, 83, 88], "offset": 53, "cross": 53, "intersect": 53, "luckili": [53, 67], "outright": 53, "malform": 53, "claim": [53, 58, 60], "persist": 54, "client": [54, 59], "__function__": 54, "json": 54, "discourag": 54, "new_obj": 54, "serializ": 54, "trivial_user_domain": 54, "embed": [54, 60], "overridden": 54, "opendp_polars_lib_path": [54, 59], "environ": [54, 61, 62, 63, 70], "strict": 55, "implicit": [55, 62], "fact": [55, 74, 76], "canon": [55, 83], "annot": [55, 63], "pattern": [55, 59, 70, 82], "modifi": 55, "i128": 55, "u128": 55, "docstr": [55, 60, 67], "aren": 55, "submiss": 56, "compani": [56, 78], "instruct": [56, 58], "question": [56, 60, 62, 63, 83], "cla": 56, "behalf": 56, "request": [57, 59, 62, 75, 76], "send": [57, 63], "email": 57, "slack": [57, 72], "mail": 57, "anticip": [58, 59, 84], "bot": [58, 62], "autom": 58, "verif": 58, "statu": [58, 64, 68, 75, 76, 87], "tag": 58, "head": 58, "codebas": 58, "fork": [58, 59], "short": [58, 63, 90], "verb": 58, "123": [58, 70, 86], "typo": 58, "readm": [58, 59], "retitl": 58, "script": [58, 59], "changelog": 58, "open": [58, 59, 60], "sometim": [58, 65, 68], "backlog": 58, "narrowli": 58, "But": [58, 64], "bigger": 58, "prerequisit": 58, "obviou": 58, "cours": [58, 90], "straight": 58, "main": [58, 70, 76, 86, 87], "partner": 58, "experi": [58, 59, 78], "graphit": 58, "team": 58, "engin": 58, "regular": 58, "disabl": [58, 87], "confirm": 58, "patient": 58, "credit": [58, 75], "crate": [58, 59, 62], "io": 58, "pypi": [58, 70], "task": 59, "tackl": [59, 60], "languag": [59, 62], "repositori": [59, 62], "directori": [59, 62, 70], "git": [59, 62], "cd": 59, "ssh": 59, "toolchain": 59, "rustup": 59, "subdirectori": 59, "compil": [59, 62, 63, 70], "platform": [59, 81], "untrust": 59, "foreign": 59, "then_": [59, 67, 88], "make_": [59, 63, 88], "openssl": 59, "mode": 59, "opendp_test_releas": 59, "loop": 59, "regener": 59, "virtual": 59, "conda": 59, "python3": 59, "venv": 59, "dev": [59, 70], "activ": 59, "txt": 59, "command": [59, 63], "reinstal": 59, "folder": [59, 63], "restart": [59, 63], "kernel": [59, 63], "oserror": 59, "dlopen": 59, "mach": 59, "architectur": 59, "rustc": 59, "vv": 59, "mac": 59, "m1": 59, "x86_64": 59, "suit": [59, 64], "pytest": [59, 60], "gone": 59, "bunch": 59, "57": [59, 86], "02": [59, 86], "forget": 59, "quick": [59, 63, 67, 69, 87], "websit": 59, "sphinx": [59, 60], "export": 59, "opendp_lib_dir": 59, "realpath": 59, "maco": 59, "gui": 59, "tcl": 59, "smoothest": 59, "brew": 59, "harfbuzz": 59, "fribidi": 59, "libgit2": 59, "xquartz": 59, "devtool": 59, "rcpptoml": 59, "lintr": 59, "load_al": 59, "recompil": 59, "r_stage": 59, "sh": 59, "amp": 59, "rscript": 59, "restor": 59, "manual": 59, "cmd": 59, "opendp_": 59, "tar": 59, "gz": 59, "cran": 59, "roxygen": 59, "man": 59, "comment": [59, 60, 63, 75], "pkgdown": 59, "render": [59, 77], "md": 59, "latex": 59, "templat": 59, "precondit": 59, "pseudocod": 59, "postcondit": 59, "workflow": [59, 69, 73], "overrid": 59, "stale": 59, "_lib": 59, "lib_path": 59, "opendp_headless": 59, "opendp_sphinx_port": 59, "opendp_sphinx_uri": 59, "host": 59, "uri": 59, "port": 59, "localhost": 59, "site": [59, 60, 62], "opendp_rustdoc_port": 59, "opendp_rustdoc_uri": 59, "rustdoc": [59, 60, 62], "intellij": 59, "sublim": 59, "comfort": 59, "panel": 59, "live": 59, "workshop": [59, 62], "cp": 59, "vscode": [59, 62], "codewithm": 59, "attach": 59, "red": [59, 68, 73], "banner": 59, "welcom": 60, "guidelin": 60, "usabl": 60, "opportun": 60, "invest": 60, "chanc": 60, "connect": 60, "board": 60, "ask": [60, 63], "clarifi": 60, "revis": 60, "ownership": 60, "benchmark": 60, "stochast": 60, "tester": 60, "ey": 60, "great": [60, 63, 67], "toward": [61, 62, 67, 68, 82], "focu": [61, 70], "consult": 61, "contributor": 61, "licens": 61, "agreement": 61, "goal": 62, "bodi": [62, 63], "trait": [62, 63], "themselv": 62, "proven": [62, 82], "hoar": 62, "tripl": 62, "esqu": 62, "exploit": 62, "sharpli": 62, "argu": 62, "macro": [62, 63], "infsub": 62, "alertingab": 62, "fallibl": [62, 63, 70], "inf_sub": 62, "alerting_ab": 62, "exactli": [62, 83, 84], "enum": 62, "backtrac": 62, "exit": 62, "derefer": 62, "clone": [62, 63], "tex": 62, "documentclass": 62, "articl": 62, "overleaf": 62, "lib": 62, "sty": 62, "boilerpl": [62, 65], "_distanc": 62, "author": [62, 81, 90], "maketitl": 62, "asofcommit": 62, "f5bb719": 62, "vettingpr": 62, "519": 62, "dot": [62, 68, 86, 87], "commit_hash": 62, "commit": [62, 63, 74], "log": [62, 82, 86], "pretti": 62, "h": 62, "proofwrit": 62, "footnot": 62, "permalink": 62, "pr_number": 62, "pull": [62, 67, 75], "docsr": 62, "validtransform": 62, "input_argu": 62, "function_nam": 62, "validmeasur": 62, "shell": 62, "escap": 62, "pdflatex": 62, "synctex": 62, "nonstopmod": 62, "aux": 62, "advic": 62, "intent": [62, 67, 88], "1i32": 62, "2i32": 62, "bignum": 62, "strictli": [62, 63], "lstlist": 62, "escapechar": 62, "leverag": [62, 86, 87], "met": 62, "trivial": [62, 82, 83, 86], "text": 62, "stuck": 62, "abus": 62, "widget": 62, "book": 63, "surfac": 63, "default_cast_tran": 63, "struct": 63, "chapter": [63, 64], "pub": [63, 87], "stability_rel": 63, "stabilityrel": 63, "partialeq": 63, "closur": 63, "456": 63, "ship": 63, "behav": 63, "stabilitymap": 63, "did": [63, 75, 76, 83, 84], "compat": [63, 76, 88], "ultim": [63, 70], "input_domain_1": 63, "output_domain_1": 63, "input_domain_2": 63, "output_domain_2": 63, "function_1": 63, "function_2": 63, "input_metric_1": 63, "output_metric_1": 63, "input_metric_2": 63, "output_metric_2": 63, "stability_relation_1": 63, "stability_relation_2": 63, "prefix": 63, "checknul": 63, "roundcast": 63, "datasetmetr": 63, "metricspac": 63, "move": [63, 68, 82, 83], "round_cast": 63, "unwrap_or_default": 63, "new_from_const": 63, "signatur": 63, "colon": 63, "claus": 63, "cloneabl": 63, "anonym": 63, "privacymap": 63, "carri": [63, 82], "properli": 63, "button": 63, "gitignor": 63, "scratch": 63, "decor": 63, "bootstrap": 63, "hesit": 63, "room": 63, "accompani": 63, "plai": 63, "nice": 63, "rustfmt": 63, "meaningfulli": 63, "set_them": 64, "style": 64, "darkgrid": 64, "glanc": 64, "graph": [64, 75, 78, 82, 84, 86], "empir": [64, 83, 84], "laplace_pdf": 64, "exp": 64, "gaussian_pdf": 64, "pi": 64, "cont_support": 64, "legend": [64, 65, 68, 73, 75, 82, 87], "methodologi": 64, "diagram": 64, "lighter": 64, "tail": 64, "strong": 64, "multidimension": 64, "crucial": [64, 82], "averag": [64, 68, 74, 84, 87], "exchang": 64, "ilostat": [64, 75, 76], "labor_status_cod": 64, "na": 64, "emploi": [64, 75, 87], "pai": [64, 75, 76], "laid": 64, "actual_valu": 64, "map_el": 64, "ilostatactualstru32": 64, "76009": 64, "36085": 64, "bu": 64, "8057": 64, "pa": 64, "79849": 64, "rememb": [64, 73, 75, 88], "laplace_valu": 64, "ilostatlaplac": 64, "noisestru32": 64, "76064": 64, "35799": 64, "79765": 64, "8118": 64, "todo": 64, "fuller": 64, "gaussian_valu": 64, "ilostatgaussian": 64, "36130": 64, "75911": 64, "79944": 64, "8055": 64, "noise_valu": 64, "all_valu": 64, "ilostatactuallaplac": 64, "noisegaussian": 64, "noisestru32u32u32": 64, "360853579936130": 64, "760097606475911": 64, "798497976579944": 64, "805781188055": 64, "bar_width": 64, "r1": 64, "to_list": 64, "r2": 64, "r3": 64, "chart": 64, "figur": [64, 65, 86], "color": [64, 68, 73], "tab": 64, "blue": [64, 68, 73, 82], "edgecolor": [64, 84], "grei": 64, "orang": [64, 82], "green": 64, "fontweight": 64, "bold": 64, "xtick": 64, "rotat": 64, "45": [64, 67, 68], "tight_layout": 64, "quit": [64, 74, 83], "special": [64, 88], "accomplish": [64, 75], "block": [65, 82], "max_influ": [65, 67, 84, 87], "read_text": [65, 67, 83, 84], "plot_histogram": 65, "sensitive_count": 65, "released_count": 65, "ticker": 65, "add_ax": 65, "ylim": [65, 86], "225": 65, "tick_spac": 65, "xaxi": 65, "set_major_loc": 65, "multipleloc": 65, "xlim": 65, "noisy_histogram": 65, "14": [65, 74, 75, 82, 86], "38": [65, 67, 68], "17": [65, 74], "24": 65, "21": [65, 82, 86, 87], "51": [65, 67, 86], "201": 65, "165": 65, "76": 65, "178": 65, "54": [65, 67, 84], "34": [65, 67, 75, 84], "22": [65, 82, 87], "59": [65, 67, 84], "166": 65, "make_laplace_threshold_budget": 65, "1e8": 65, "postprocessed_count": 65, "as_arrai": 65, "160": 65, "56": [65, 87], "77": 65, "introductori": 66, "solut": [66, 68, 87], "focuss": 66, "nearli": [66, 74, 87], "smartnois": [66, 81], "sql": [66, 81], "synthes": 66, "synthet": 66, "dpcreator": 66, "web": 66, "app": 66, "brief": 67, "bureau": [67, 75, 86, 87], "demograph": 67, "age_bound": [67, 68, 83], "income_bound": [67, 84], "150_000": 67, "examin": [67, 75, 81, 84], "grab": 67, "income_preprocessor": [67, 84], "sake": 67, "35": [67, 74], "17000": [67, 84], "9100": [67, 84], "37000": [67, 84], "strip": 67, "37": [67, 86], "cast_str_int": 67, "asid": [67, 82], "almost": 67, "anyth": 67, "suppos": 67, "NOT": [67, 82], "count_respons": 67, "realist": [67, 83], "41": [67, 75, 86], "count_releas": [67, 84], "bounded_income_sum": 67, "told": 67, "my": 67, "43": [67, 68, 86], "discovered_scal": 67, "succinctli": 67, "44": [67, 86], "30633527": 67, "mean_age_preprocessor": 67, "startswith": 67, "298": 67, "46": [67, 86], "float_age_bound": 67, "48": [67, 68, 82, 86], "dp_varianc": 67, "154334857855616": 67, "pareto": 67, "49": [67, 86], "app_dp_vari": 67, "6194085342284823": 67, "fixed_app_dp_vari": 67, "07": 67, "make_dp_vari": 67, "dp_var": 67, "dp_variance_lte_budget": 67, "lte": 67, "52": [67, 86], "30419934": 67, "75968544038662": 67, "53": [67, 86], "1000000000004568": 67, "100_000": [67, 72, 84], "017036863236176553": 67, "leak": [68, 74, 90], "rare": [68, 84], "diseas": 68, "var_nam": [68, 83], "120": 68, "age_prior": 68, "genfromtxt": 68, "delimit": 68, "briefli": 68, "41546783313125": 68, "truthfulli": 68, "ballpark": 68, "dp_count_releas": 68, "999": 68, "make_mean_measur": 68, "target_s": 68, "dp_mean_releas": 68, "518070978540095": 68, "moreov": 68, "wherebi": 68, "went": 68, "therebi": 68, "intention": 68, "receiv": 68, "lower_n": 68, "200": [68, 76, 86], "real_n": 68, "higher_n": 68, "81880656946988": 68, "49853735856283": 68, "50278188564646": 68, "simul": [68, 83, 84, 85], "helper": 68, "functool": [68, 86], "lru_cach": [68, 86], "maxsiz": [68, 86], "make_count_with": 68, "10000": [68, 72], "make_mean_with": 68, "mean_chain": 68, "make_sum_with": 68, "bounded_age_sum": 68, "n_simul": 68, "history_count": 68, "history_mean": 68, "count_chain": 68, "true_mean_ag": 68, "light": 68, "circl": [68, 82], "fillstyl": 68, "cornflowerblu": 68, "compute_expected_mean": 68, "expected_count": 68, "expected_mean": 68, "dark": 68, "indigo": 68, "linestyl": 68, "tomato": 68, "dash": 68, "unknow": 68, "tick": 68, "n_rang": 68, "2001": 68, "boxplot": 68, "axhlin": 68, "thankfulli": 68, "simpler": [68, 70], "plug": [68, 79], "agre": 68, "asymmetr": [68, 82], "history_plugin": 68, "history_res": 68, "robust": [68, 73, 82, 86], "resize_count": 68, "plugin_count": 68, "plugin_sum": 68, "resize_mean": 68, "kdeplot": 68, "linewidth": [68, 84], "forestgreen": 68, "leg": 68, "around": [68, 70, 75, 84, 87], "quickstart": 69, "dure": [70, 76], "launch": 70, "repo": 70, "init": 70, "pin": 70, "unless": 70, "laplace_mechan": 70, "dp_valu": 70, "println": 70, "aka": 70, "futur": 71, "sample_microdata": 72, "num_row": 72, "cov": 72, "sample_covari": 72, "multivariate_norm": 72, "num_featur": 72, "covari": 72, "matrix": [72, 73, 87], "example_dataset": 72, "introspect": 72, "singular_values_": 72, "tailor": 72, "eigenvalu": 72, "slope": 73, "ordinari": 73, "outlier": 73, "skew": 73, "heteroskedast": 73, "wikipedia": 73, "virgina": 73, "statlab": 73, "25th": 73, "75th": 73, "chose": [73, 76], "nuanc": 73, "midpoint": 73, "undefin": 73, "compute_points_on_percentil": 73, "copi": [73, 76], "p1": 73, "p2": 73, "array_split": 73, "dx": 73, "dy": 73, "x_bar": 73, "y_bar": 73, "make_theil_sen_percentil": 73, "cost": 73, "vstack": 73, "b_in": 73, "discrete_scor": 73, "median_quantil": 73, "select_index_measur": 73, "m_median": 73, "coeffici": 73, "intercept": 73, "make_private_theil_sen": 73, "mostli": [73, 82], "coef": 73, "line_x": 73, "line_i": 73, "scatter": [73, 75], "valuabl": 73, "foundat": [73, 76], "span": [74, 75, 82], "eager": 74, "0539": 74, "731115": 74, "math": 74, "interv": [74, 75, 79, 82], "0829": 74, "429939": 74, "justifi": 74, "200215": 74, "instabl": 74, "biggest": 74, "surmis": 74, "bank": 74, "inconsequenti": 74, "undermin": 74, "query_work_hour": [74, 75], "fulfil": 74, "weekli": 74, "043139": 74, "04473": 74, "1440": 74, "hwusuali642964398": 74, "though": [74, 75, 83], "seem": [74, 75], "retrospect": 74, "43k": 74, "imprecis": 74, "28800": 74, "086277": 74, "589474": 74, "01078": 74, "963271": 74, "twice": 74, "hwusuallenmeani64u32f6429742647814038": 74, "063271": 74, "context_bounded_dp": 74, "metadata": 74, "query_mean_work_hour": 74, "terminologi": 74, "7200": 74, "021569": 74, "772352": 74, "0nan": [74, 75], "hwusualf6437": 74, "642692": 74, "recap": 74, "query_median_hour": 74, "gumbelmin": 74, "0null": 74, "hwusuali6437": 74, "19": [74, 86, 87], "query_multi_quantil": 74, "3240": 74, "1080": 74, "judg": [74, 75], "quantile0": 74, "quantilei64i64i64353740": 74, "rescal": 74, "hvplot": 75, "card": 75, "catastroph": 75, "identif": 75, "benign": 75, "latanya": 75, "sweenei": 75, "reidentifi": 75, "governor": 75, "massachusett": 75, "healthcar": [75, 81], "disappear": 75, "worker": [75, 76], "query_age_ilostat": 75, "0431": 75, "8845792773": 75, "profit": [75, 76], "young": 75, "adult": 75, "lai": [75, 76], "retir": 75, "youngest": 75, "employ": 75, "rewrit": [75, 88], "clear": 75, "reluct": 75, "absenc": 75, "constitut": 75, "nevertheless": 75, "eurostat": [75, 76], "query_quarterly_count": 75, "884579": 75, "errorbar": 75, "yerr1": 75, "spite": 75, "2008": 75, "declar": 75, "risk": [75, 78, 86], "damag": 75, "lf_preprocess": 75, "gender": 75, "7056": 75, "021138": 75, "386904": 75, "disaggreg": 75, "conceal": [75, 78], "hstack": 75, "sex_str": 75, "male": [75, 76], "femal": [75, 76, 87], "sexsex_strhwusuali64strf642": 75, "2526731": 75, "05379": 75, "signal": [75, 87], "poor": 75, "excess": 75, "mislead": 75, "speedup": 75, "mediat": [75, 76], "1872": 76, "european": 76, "tradit": [76, 83], "disclosur": [76, 86, 87], "recod": 76, "suppress": 76, "variou": [76, 78, 84], "realism": 76, "studi": [76, 90], "famili": 76, "conscript": 76, "compulsori": 76, "militari": 76, "servic": 76, "job": [76, 81], "busi": 76, "he": [76, 84, 86], "she": 76, "absent": 76, "consider": [76, 77, 78], "blank": 76, "abstain": 76, "delet": 76, "del": 76, "seldom": 77, "query_hwusual_bin": 77, "shadow": 77, "6407": 77, "54209": 77, "15472": 77, "119814": 77, "mask": [77, 87], "query_total_hours_work": 77, "hwusuali6412565617": 77, "1l": 78, "broadli": [78, 82, 87], "medium": 78, "id": 78, "household": 78, "varieti": 78, "harm": 78, "ethic": 78, "legal": 78, "oblig": 78, "custodian": 78, "proxi": 78, "customari": [78, 82], "rule": 78, "thumb": 78, "hsu": 78, "et": [78, 86], "al": [78, 86], "elabor": 78, "privacy_measur": 78, "imputed_valu": 78, "maintain": [78, 86, 90], "m_sc": 78, "runif": 78, "100l": 78, "rep": 78, "3l": 78, "count_queri": 78, "0000000000000004": 78, "445721638273584": 78, "confidence_interv": 78, "count_transform": 78, "count_sensit": 78, "count_measur": 78, "mean_queri": 78, "mean_transform": 78, "mean_measur": [78, 84], "compens": 79, "kmr": 79, "unavoid": 79, "020426913849308": 79, "challeng": 80, "navig": 80, "achiev": 81, "inject": 81, "background": [81, 82], "handbook": 81, "administr": [81, 90], "evid": 81, "resourc": [81, 82, 89], "differentialprivaci": 81, "shorter": [81, 88], "co": [81, 90], "architect": [81, 90], "solid": 81, "thread": [81, 88], "safeti": 81, "audit": 81, "corpor": 81, "fairli": 81, "ml": 81, "sdk": 81, "tech": 81, "swiss": 81, "feder": 81, "offic": 81, "loma": 81, "remot": 81, "oblivi": 81, "telecom": 81, "pilot": 81, "antigranular": 81, "openmin": 81, "pysyft": 81, "deploy": [81, 90], "microsoft": 81, "dailymot": 81, "nation": 81, "broadband": [81, 90], "percentag": 81, "databas": [81, 84], "digit": 81, "liveramp": 81, "covid": 81, "christchurch": 81, "fundament": 81, "perspect": 82, "alic": [82, 86], "jane": 82, "john": 82, "jack": 82, "cardin": 82, "multiset": 82, "sym": 82, "sum_x": 82, "u_i": 82, "v_i": 82, "And": 82, "d_symmetricdist": 82, "lose": 82, "symmetric_differ": 82, "indirectli": 82, "stipul": 82, "sim_": 82, "rv": 82, "realiz": [82, 83], "bother": [82, 87], "arang": [82, 86], "rv_m": 82, "scipi": [82, 84], "stat": [82, 84], "plot_pdf": 82, "p_": 82, "prop": 82, "dissimilar": 82, "limits_": 82, "equat": 82, "randomli": [82, 86], "plot_": 82, "draw": [82, 86], "fill_between": 82, "area": 82, "divergence_over_": 82, "pr_mu_in_": 82, "pr_mv_in_": 82, "2276049566440389": 82, "14083816706408814": 82, "4799999999999992": 82, "hypothet": 82, "u_prim": 82, "017594942096975916": 82, "080000000000001": 82, "came": 82, "moreso": 82, "qualifi": 82, "immun": 82, "foral": 82, "quad": 82, "bigl": 82, "bigr": 82, "boldsymbol": 82, "textbf": 82, "induc": 82, "particip": 82, "kept": 82, "formul": 82, "ambigu": 82, "reclaim": 82, "d_ab": 82, "attain": 82, "clamped_sum_0_12": 82, "_sum": 82, "_0": 82, "_12": 82, "conceiv": 82, "_nois": 82, "laplace_nois": 82, "m_": 82, "t_": 82, "t_2": 82, "t_1": 82, "laplace_sum": 82, "takeawai": 82, "encapsul": 82, "abstract": 82, "clamped_sum_0_12_map": 82, "repackag": 82, "laplace_noise_map": 82, "henc": [82, 84], "laplace_sum_map": 82, "nontrivi": 82, "especi": 82, "trip": 83, "phi": 83, "phi_": 83, "uncertainti": 83, "deal": 83, "tild": 83, "drawn": 83, "extent": 83, "plausibl": 83, "pid": 83, "read_csv": [83, 86, 87], "d_mean_ag": 83, "n_sim": [83, 84], "d_tilde_mean_ag": 83, "impute_const": 83, "make_mean_aggreg": 83, "mean_aggreg": 83, "d_tild": 83, "2996": 83, "93": 83, "scenario": 83, "1050": 83, "diagnost": 83, "knew": 83, "predict": 83, "1_050": 83, "d_tilde_mean": 83, "2853": 83, "65": 83, "wors": [83, 87], "perhap": 84, "mitig": [84, 85], "cast_str_float": 84, "6000": 84, "5000": 84, "person_of_interest": 84, "poi": 84, "everyon": 84, "exact_mean": 84, "known_ob": 84, "legitim": 84, "overall_mean": 84, "n_ob": 84, "poi_incom": 84, "certainti": 84, "known_mean": 84, "accordingli": 84, "clamp_and_resize_data": 84, "27660": 84, "389303281972": 84, "29805": 84, "858585858587": 84, "n_queri": 84, "poi_income_est": 84, "estimated_mean": 84, "query_mean": 84, "28913": 84, "242083100424": 84, "59455": 84, "79168995719": 84, "inde": 84, "outstand": 84, "simplefilt": 84, "action": 84, "futurewarn": 84, "distplot": 84, "hist_kw": 84, "black": [84, 87], "differenc": [85, 89], "reconstruct": [85, 89], "sequest": [86, 87], "pose": 86, "dssuv": 86, "traceabl": 86, "american": [86, 87], "ac": [86, 87], "seed": 86, "gist": 86, "membership_attack_fig_1": 86, "reference_sampl": 86, "dwork": 86, "privacytool": 86, "sea": 86, "harvard": [86, 90], "alice_similar": 86, "cosin": 86, "reference_similar": 86, "tau": 86, "membership_attack_fig_2": 86, "eta": 86, "mont": 86, "carlo": 86, "simplic": 86, "githubusercont": [86, 87], "cs208": [86, 87], "spring2022": [86, 87], "fultonpums5sample100": 86, "make_boolean_project": 86, "prime": [86, 87], "691": [86, 87], "desc": [86, 87], "ndarrai": [86, 87], "modulu": [86, 87], "sample_s": 86, "rest": 86, "iloc": 86, "execute_exact_queri": 86, "medic": 86, "trial": 86, "poll": 86, "polit": 86, "parti": 86, "strength": 86, "sequestered_data": 86, "inconclus": 86, "4000": 86, "anita": 86, "simulate_attack": 86, "membership_attack": 86, "reference_s": 86, "num_pred": 86, "rate": [86, 90], "fp_result": 86, "tp_result": 86, "fp": 86, "tp": 86, "start_tim": 86, "plot_fpr_tpr": 86, "fpr": 86, "tpr": 86, "400": 86, "84": 86, "600": 86, "496": 86, "800": 86, "897": 86, "995": 86, "001": 86, "084": 86, "hypothesi": 86, "1200": 86, "1400": 86, "1600": 86, "63": [86, 87], "1800": 86, "67": 86, "2200": 86, "79": 86, "2400": 86, "86": [86, 87], "2600": 86, "2800": 86, "94": 86, "3000": 86, "3200": 86, "3400": 86, "3600": 86, "3800": 86, "execute_dp_queri": 86, "commensur": 86, "find_mea": 86, "num_queri": 86, "epsilon_p": 86, "exact_aggreg": 86, "58": 86, "55": 86, "thwart": 86, "coin": 86, "citizen": 87, "fultonpums5reconstruct": 87, "latino": 87, "asian": 87, "divorc": 87, "militaryservic": 87, "english": 87, "uscitizen": 87, "execute_subsetsums_exact": 87, "resembl": 87, "pred": 87, "reconstruction_attack": 87, "data_pub": 87, "lstsq": 87, "rcond": 87, "scheme": 87, "make_random_pred": 87, "random_pred": 87, "num_citizens_that_matched_random_pred": 87, "random_predicate_mask": 87, "readi": 87, "exact_answ": 87, "reconstructed_target": 87, "perfectli": 87, "citizenship": 87, "execute_subsetsums_round": 87, "execute_subsetsums_nois": 87, "sigma": 87, "execute_subsetsums_sampl": 87, "sub_data": 87, "rmse": 87, "compute_accuracy_reconstruct": 87, "compute_rmse_answ": 87, "evaluate_perform": 87, "interface_nam": 87, "predicates_temp": 87, "spot": 87, "perf": 87, "815": 87, "62": 87, "466": 87, "surprisingli": 87, "evaluate_all_perform": 87, "all_perf": 87, "reset_index": 87, "inplac": 87, "stratifi": 87, "baselin": 87, "defens": 87, "pronounc": 87, "invers": 87, "strang": 87, "axessubplot": 87, "bring": 88, "modular": 88, "bounded_mock_dataset": 88, "forward": 88, "roughli": 88, "mock_dataset": 88, "compound": 88, "breez": 88, "redund": 88, "successor": 88, "pitfal": 89, "primer": 90, "technic": 90, "audienc": 90, "registri": 90, "wizard": 90, "jupyt": 90, "confidenti": 90, "snap": 90, "converg": 90, "gradient": 90, "descent": 90, "feasibl": 90, "analys": 90, "tax": 90}, "objects": {"": [[2, 0, 0, "-", "opendp"]], "opendp": [[3, 0, 0, "-", "accuracy"], [4, 0, 0, "-", "combinators"], [5, 0, 0, "-", "context"], [6, 0, 0, "-", "core"], [7, 0, 0, "-", "domains"], [8, 0, 0, "-", "extras"], [14, 0, 0, "-", "measurements"], [15, 0, 0, "-", "measures"], [16, 0, 0, "-", "metrics"], [17, 0, 0, "-", "mod"], [18, 0, 0, "-", "prelude"], [19, 0, 0, "-", "transformations"], [20, 0, 0, "-", "typing"]], "opendp.accuracy": [[3, 1, 1, "", "accuracy_to_discrete_gaussian_scale"], [3, 1, 1, "", "accuracy_to_discrete_laplacian_scale"], [3, 1, 1, "", "accuracy_to_gaussian_scale"], [3, 1, 1, "", "accuracy_to_laplacian_scale"], [3, 1, 1, "", "discrete_gaussian_scale_to_accuracy"], [3, 1, 1, "", "discrete_laplacian_scale_to_accuracy"], [3, 1, 1, "", "gaussian_scale_to_accuracy"], [3, 1, 1, "", "laplacian_scale_to_accuracy"], [3, 1, 1, "", "summarize_polars_measurement"]], "opendp.combinators": [[4, 1, 1, "", "make_approximate"], [4, 1, 1, "", "make_basic_composition"], [4, 1, 1, "", "make_chain_mt"], [4, 1, 1, "", "make_chain_pm"], [4, 1, 1, "", "make_chain_tt"], [4, 1, 1, "", "make_fix_delta"], [4, 1, 1, "", "make_population_amplification"], [4, 1, 1, "", "make_pureDP_to_zCDP"], [4, 1, 1, "", "make_select_private_candidate"], [4, 1, 1, "", "make_sequential_composition"], [4, 1, 1, "", "make_zCDP_to_approxDP"], [4, 1, 1, "", "then_sequential_composition"]], "opendp.context": [[5, 2, 1, "", "Context"], [5, 2, 1, "", "PartialChain"], [5, 2, 1, "", "Query"], [5, 1, 1, "", "domain_of"], [5, 1, 1, "", "loss_of"], [5, 1, 1, "", "metric_of"], [5, 1, 1, "", "space_of"], [5, 1, 1, "", "unit_of"]], "opendp.context.Context": [[5, 3, 1, "", "accountant"], [5, 4, 1, "", "compositor"], [5, 4, 1, "", "query"], [5, 3, 1, "", "queryable"]], "opendp.context.PartialChain": [[5, 4, 1, "", "fix"], [5, 3, 1, "", "partial"], [5, 4, 1, "", "wrap"]], "opendp.context.Query": [[5, 4, 1, "", "compositor"], [5, 4, 1, "", "new_with"], [5, 4, 1, "", "param"], [5, 4, 1, "", "release"], [5, 4, 1, "", "resolve"]], "opendp.core": [[6, 1, 1, "", "function_eval"], [6, 1, 1, "", "measurement_check"], [6, 1, 1, "", "measurement_function"], [6, 1, 1, "", "measurement_input_carrier_type"], [6, 1, 1, "", "measurement_input_distance_type"], [6, 1, 1, "", "measurement_input_domain"], [6, 1, 1, "", "measurement_input_metric"], [6, 1, 1, "", "measurement_invoke"], [6, 1, 1, "", "measurement_map"], [6, 1, 1, "", "measurement_output_distance_type"], [6, 1, 1, "", "measurement_output_measure"], [6, 1, 1, "", "new_function"], [6, 1, 1, "", "new_queryable"], [6, 1, 1, "", "queryable_eval"], [6, 1, 1, "", "queryable_query_type"], [6, 1, 1, "", "transformation_check"], [6, 1, 1, "", "transformation_function"], [6, 1, 1, "", "transformation_input_carrier_type"], [6, 1, 1, "", "transformation_input_distance_type"], [6, 1, 1, "", "transformation_input_domain"], [6, 1, 1, "", "transformation_input_metric"], [6, 1, 1, "", "transformation_invoke"], [6, 1, 1, "", "transformation_map"], [6, 1, 1, "", "transformation_output_distance_type"], [6, 1, 1, "", "transformation_output_domain"], [6, 1, 1, "", "transformation_output_metric"]], "opendp.domains": [[7, 1, 1, "", "atom_domain"], [7, 1, 1, "", "bitvector_domain"], [7, 1, 1, "", "categorical_domain"], [7, 1, 1, "", "datetime_domain"], [7, 1, 1, "", "domain_carrier_type"], [7, 1, 1, "", "domain_debug"], [7, 1, 1, "", "domain_type"], [7, 1, 1, "", "lazyframe_domain"], [7, 1, 1, "", "map_domain"], [7, 1, 1, "", "member"], [7, 1, 1, "", "option_domain"], [7, 1, 1, "", "series_domain"], [7, 1, 1, "", "user_domain"], [7, 1, 1, "", "vector_domain"], [7, 1, 1, "", "wild_expr_domain"], [7, 1, 1, "", "with_margin"]], "opendp.extras": [[9, 0, 0, "-", "examples"], [10, 0, 0, "-", "numpy"], [11, 0, 0, "-", "polars"], [12, 0, 0, "-", "sklearn"]], "opendp.extras.examples": [[9, 1, 1, "", "get_california_pums_path"], [9, 1, 1, "", "get_france_lfs_path"]], "opendp.extras.numpy": [[10, 1, 1, "", "array2_domain"], [10, 1, 1, "", "make_np_clamp"]], "opendp.extras.polars": [[11, 2, 1, "", "DPExpr"], [11, 2, 1, "", "LazyFrameQuery"], [11, 2, 1, "", "LazyGroupByQuery"], [11, 2, 1, "", "Margin"], [11, 2, 1, "", "OnceFrame"], [11, 1, 1, "", "dp_len"]], "opendp.extras.polars.DPExpr": [[11, 4, 1, "", "count"], [11, 4, 1, "", "gaussian"], [11, 4, 1, "", "laplace"], [11, 4, 1, "", "len"], [11, 4, 1, "", "mean"], [11, 4, 1, "", "median"], [11, 4, 1, "", "n_unique"], [11, 4, 1, "", "noise"], [11, 4, 1, "", "null_count"], [11, 4, 1, "", "quantile"], [11, 4, 1, "", "sum"]], "opendp.extras.polars.LazyFrameQuery": [[11, 4, 1, "", "filter"], [11, 4, 1, "", "group_by"], [11, 4, 1, "", "join"], [11, 4, 1, "", "release"], [11, 4, 1, "", "resolve"], [11, 4, 1, "", "select"], [11, 4, 1, "", "select_seq"], [11, 4, 1, "", "sort"], [11, 4, 1, "", "summarize"], [11, 4, 1, "", "with_columns"], [11, 4, 1, "", "with_columns_seq"], [11, 4, 1, "", "with_keys"]], "opendp.extras.polars.LazyGroupByQuery": [[11, 4, 1, "", "agg"]], "opendp.extras.polars.Margin": [[11, 3, 1, "", "max_influenced_partitions"], [11, 3, 1, "", "max_num_partitions"], [11, 3, 1, "", "max_partition_contributions"], [11, 3, 1, "", "max_partition_length"], [11, 3, 1, "", "public_info"]], "opendp.extras.polars.OnceFrame": [[11, 4, 1, "", "collect"], [11, 4, 1, "", "lazy"]], "opendp.extras.sklearn": [[13, 0, 0, "-", "decomposition"]], "opendp.extras.sklearn.decomposition": [[13, 2, 1, "", "PCA"], [13, 2, 1, "", "PCAEpsilons"], [13, 1, 1, "", "make_private_pca"]], "opendp.extras.sklearn.decomposition.PCA": [[13, 4, 1, "", "fit"], [13, 4, 1, "", "measurement"], [13, 3, 1, "", "n_features"]], "opendp.extras.sklearn.decomposition.PCAEpsilons": [[13, 3, 1, "", "eigvals"], [13, 3, 1, "", "eigvecs"], [13, 3, 1, "", "mean"]], "opendp.measurements": [[14, 1, 1, "", "debias_randomized_response_bitvec"], [14, 1, 1, "", "make_alp_queryable"], [14, 1, 1, "", "make_gaussian"], [14, 1, 1, "", "make_geometric"], [14, 1, 1, "", "make_laplace"], [14, 1, 1, "", "make_laplace_threshold"], [14, 1, 1, "", "make_private_expr"], [14, 1, 1, "", "make_private_lazyframe"], [14, 1, 1, "", "make_randomized_response"], [14, 1, 1, "", "make_randomized_response_bitvec"], [14, 1, 1, "", "make_randomized_response_bool"], [14, 1, 1, "", "make_report_noisy_max_gumbel"], [14, 1, 1, "", "make_user_measurement"], [14, 1, 1, "", "then_alp_queryable"], [14, 1, 1, "", "then_gaussian"], [14, 1, 1, "", "then_geometric"], [14, 1, 1, "", "then_laplace"], [14, 1, 1, "", "then_laplace_threshold"], [14, 1, 1, "", "then_private_expr"], [14, 1, 1, "", "then_private_lazyframe"], [14, 1, 1, "", "then_randomized_response_bitvec"], [14, 1, 1, "", "then_report_noisy_max_gumbel"], [14, 1, 1, "", "then_user_measurement"]], "opendp.measures": [[15, 1, 1, "", "approximate"], [15, 1, 1, "", "fixed_smoothed_max_divergence"], [15, 1, 1, "", "max_divergence"], [15, 1, 1, "", "measure_debug"], [15, 1, 1, "", "measure_distance_type"], [15, 1, 1, "", "measure_type"], [15, 1, 1, "", "new_privacy_profile"], [15, 1, 1, "", "renyi_divergence"], [15, 1, 1, "", "smoothed_max_divergence"], [15, 1, 1, "", "user_divergence"], [15, 1, 1, "", "zero_concentrated_divergence"]], "opendp.metrics": [[16, 1, 1, "", "absolute_distance"], [16, 1, 1, "", "change_one_distance"], [16, 1, 1, "", "discrete_distance"], [16, 1, 1, "", "hamming_distance"], [16, 1, 1, "", "insert_delete_distance"], [16, 1, 1, "", "l1_distance"], [16, 1, 1, "", "l2_distance"], [16, 1, 1, "", "linf_distance"], [16, 1, 1, "", "metric_debug"], [16, 1, 1, "", "metric_distance_type"], [16, 1, 1, "", "metric_type"], [16, 1, 1, "", "partition_distance"], [16, 1, 1, "", "symmetric_distance"], [16, 1, 1, "", "user_distance"]], "opendp.mod": [[17, 2, 1, "", "Domain"], [17, 2, 1, "", "Function"], [17, 2, 1, "", "Measure"], [17, 2, 1, "", "Measurement"], [17, 2, 1, "", "Metric"], [17, 5, 1, "", "OpenDPException"], [17, 2, 1, "", "PrivacyProfile"], [17, 2, 1, "", "Queryable"], [17, 2, 1, "", "Transformation"], [17, 5, 1, "", "UnknownTypeException"], [17, 1, 1, "", "assert_features"], [17, 1, 1, "", "binary_search"], [17, 1, 1, "", "binary_search_chain"], [17, 1, 1, "", "binary_search_param"], [17, 1, 1, "", "deserialize"], [17, 1, 1, "", "disable_features"], [17, 1, 1, "", "enable_features"], [17, 1, 1, "", "exponential_bounds_search"], [17, 1, 1, "", "serialize"]], "opendp.mod.Domain": [[17, 3, 1, "", "carrier_type"], [17, 3, 1, "", "descriptor"], [17, 4, 1, "", "member"], [17, 3, 1, "", "type"]], "opendp.mod.Measure": [[17, 3, 1, "", "distance_type"], [17, 3, 1, "", "type"]], "opendp.mod.Measurement": [[17, 4, 1, "", "check"], [17, 3, 1, "", "function"], [17, 3, 1, "", "input_carrier_type"], [17, 3, 1, "", "input_distance_type"], [17, 3, 1, "", "input_domain"], [17, 3, 1, "", "input_metric"], [17, 3, 1, "", "input_space"], [17, 4, 1, "", "invoke"], [17, 4, 1, "", "map"], [17, 3, 1, "", "output_distance_type"], [17, 3, 1, "", "output_measure"]], "opendp.mod.Metric": [[17, 3, 1, "", "distance_type"], [17, 3, 1, "", "type"]], "opendp.mod.OpenDPException": [[17, 3, 1, "", "raw_traceback"]], "opendp.mod.PrivacyProfile": [[17, 4, 1, "", "delta"], [17, 4, 1, "", "epsilon"]], "opendp.mod.Transformation": [[17, 4, 1, "", "check"], [17, 3, 1, "", "function"], [17, 3, 1, "", "input_carrier_type"], [17, 3, 1, "", "input_distance_type"], [17, 3, 1, "", "input_domain"], [17, 3, 1, "", "input_metric"], [17, 3, 1, "", "input_space"], [17, 4, 1, "", "invoke"], [17, 4, 1, "", "map"], [17, 3, 1, "", "output_distance_type"], [17, 3, 1, "", "output_domain"], [17, 3, 1, "", "output_metric"], [17, 3, 1, "", "output_space"]], "opendp.transformations": [[19, 1, 1, "", "choose_branching_factor"], [19, 1, 1, "", "make_b_ary_tree"], [19, 1, 1, "", "make_bounded_float_checked_sum"], [19, 1, 1, "", "make_bounded_float_ordered_sum"], [19, 1, 1, "", "make_bounded_int_monotonic_sum"], [19, 1, 1, "", "make_bounded_int_ordered_sum"], [19, 1, 1, "", "make_bounded_int_split_sum"], [19, 1, 1, "", "make_cast"], [19, 1, 1, "", "make_cast_default"], [19, 1, 1, "", "make_cast_inherent"], [19, 1, 1, "", "make_cdf"], [19, 1, 1, "", "make_clamp"], [19, 1, 1, "", "make_consistent_b_ary_tree"], [19, 1, 1, "", "make_count"], [19, 1, 1, "", "make_count_by"], [19, 1, 1, "", "make_count_by_categories"], [19, 1, 1, "", "make_count_distinct"], [19, 1, 1, "", "make_create_dataframe"], [19, 1, 1, "", "make_df_cast_default"], [19, 1, 1, "", "make_df_is_equal"], [19, 1, 1, "", "make_drop_null"], [19, 1, 1, "", "make_find"], [19, 1, 1, "", "make_find_bin"], [19, 1, 1, "", "make_identity"], [19, 1, 1, "", "make_impute_constant"], [19, 1, 1, "", "make_impute_uniform_float"], [19, 1, 1, "", "make_index"], [19, 1, 1, "", "make_is_equal"], [19, 1, 1, "", "make_is_null"], [19, 1, 1, "", "make_lipschitz_float_mul"], [19, 1, 1, "", "make_mean"], [19, 1, 1, "", "make_metric_bounded"], [19, 1, 1, "", "make_metric_unbounded"], [19, 1, 1, "", "make_ordered_random"], [19, 1, 1, "", "make_quantile_score_candidates"], [19, 1, 1, "", "make_quantiles_from_counts"], [19, 1, 1, "", "make_resize"], [19, 1, 1, "", "make_select_column"], [19, 1, 1, "", "make_sized_bounded_float_checked_sum"], [19, 1, 1, "", "make_sized_bounded_float_ordered_sum"], [19, 1, 1, "", "make_sized_bounded_int_checked_sum"], [19, 1, 1, "", "make_sized_bounded_int_monotonic_sum"], [19, 1, 1, "", "make_sized_bounded_int_ordered_sum"], [19, 1, 1, "", "make_sized_bounded_int_split_sum"], [19, 1, 1, "", "make_split_dataframe"], [19, 1, 1, "", "make_split_lines"], [19, 1, 1, "", "make_split_records"], [19, 1, 1, "", "make_stable_expr"], [19, 1, 1, "", "make_stable_lazyframe"], [19, 1, 1, "", "make_subset_by"], [19, 1, 1, "", "make_sum"], [19, 1, 1, "", "make_sum_of_squared_deviations"], [19, 1, 1, "", "make_unordered"], [19, 1, 1, "", "make_user_transformation"], [19, 1, 1, "", "make_variance"], [19, 1, 1, "", "then_b_ary_tree"], [19, 1, 1, "", "then_cast"], [19, 1, 1, "", "then_cast_default"], [19, 1, 1, "", "then_cast_inherent"], [19, 1, 1, "", "then_clamp"], [19, 1, 1, "", "then_count"], [19, 1, 1, "", "then_count_by"], [19, 1, 1, "", "then_count_by_categories"], [19, 1, 1, "", "then_count_distinct"], [19, 1, 1, "", "then_df_cast_default"], [19, 1, 1, "", "then_df_is_equal"], [19, 1, 1, "", "then_drop_null"], [19, 1, 1, "", "then_find"], [19, 1, 1, "", "then_find_bin"], [19, 1, 1, "", "then_identity"], [19, 1, 1, "", "then_impute_constant"], [19, 1, 1, "", "then_impute_uniform_float"], [19, 1, 1, "", "then_index"], [19, 1, 1, "", "then_is_equal"], [19, 1, 1, "", "then_is_null"], [19, 1, 1, "", "then_mean"], [19, 1, 1, "", "then_metric_bounded"], [19, 1, 1, "", "then_metric_unbounded"], [19, 1, 1, "", "then_ordered_random"], [19, 1, 1, "", "then_quantile_score_candidates"], [19, 1, 1, "", "then_resize"], [19, 1, 1, "", "then_stable_expr"], [19, 1, 1, "", "then_stable_lazyframe"], [19, 1, 1, "", "then_sum"], [19, 1, 1, "", "then_sum_of_squared_deviations"], [19, 1, 1, "", "then_unordered"], [19, 1, 1, "", "then_variance"]], "opendp.typing": [[20, 2, 1, "", "Carrier"], [20, 2, 1, "", "DomainDescriptor"], [20, 2, 1, "", "RuntimeType"], [20, 2, 1, "", "SensitivityMetric"], [20, 1, 1, "", "get_atom"], [20, 1, 1, "", "get_atom_or_infer"], [20, 1, 1, "", "get_carrier_type"], [20, 1, 1, "", "get_distance_type"], [20, 1, 1, "", "get_first"], [20, 1, 1, "", "get_type"], [20, 1, 1, "", "get_value_type"], [20, 1, 1, "", "parse_or_infer"], [20, 1, 1, "", "pass_through"], [20, 1, 1, "", "set_default_float_type"], [20, 1, 1, "", "set_default_int_type"]], "opendp.typing.RuntimeType": [[20, 3, 1, "", "args"], [20, 4, 1, "", "infer"], [20, 3, 1, "", "origin"], [20, 4, 1, "", "parse"], [20, 4, 1, "", "parse_or_infer"], [20, 4, 1, "", "substitute"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 1, 24, 25, 64, 66], "python": [1, 59], "document": [1, 59, 60], "content": [1, 2, 8, 9, 10, 11, 12, 13, 59], "index": [1, 51], "opendp": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 44, 59, 62, 63, 66, 68, 81, 84, 88], "packag": [2, 8, 9, 10, 11, 12, 13], "subpackag": [2, 8, 12], "submodul": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "accuraci": [3, 79, 83], "combin": [4, 22], "context": [5, 23, 64, 76], "core": [6, 45], "domain": [7, 26, 47], "extra": [8, 9, 10, 11, 12, 13], "exampl": [9, 29, 30, 32, 62, 63, 66, 67, 68, 86, 88], "numpi": 10, "polar": [11, 43, 44], "sklearn": [12, 13], "decomposit": 13, "measur": [14, 15, 22, 27, 30, 45, 47, 63, 67], "metric": [16, 47, 51], "mod": 17, "prelud": 18, "transform": [19, 32, 45, 51, 63, 88], "type": [20, 33, 55], "compositor": [21, 76], "basic": 21, "composit": [21, 22, 67], "sequenti": 21, "chain": [21, 22, 88], "nest": 21, "cast": [22, 38, 51, 67], "amplif": [22, 67], "user": 24, "guid": 24, "featur": [24, 78], "list": [24, 90], "limit": 25, "privaci": [25, 47, 67, 78, 81, 82, 86, 87, 88, 90], "concern": 25, "incomplet": 25, "proof": [25, 60, 62], "miss": 25, "function": [25, 47, 62, 73], "stabil": [25, 47, 82], "softwar": 25, "qualiti": 25, "addit": [26, 27], "nois": [26, 27, 42, 64], "mechan": [26, 27, 73, 88], "distribut": [26, 42, 49, 82], "laplac": [26, 64, 88], "v": [26, 34, 44, 64, 68, 83], "gaussian": [26, 27, 42, 64], "support": [26, 47, 55], "float": [26, 33, 50], "integ": [26, 33, 50], "scalar": 26, "vector": 26, "bit": 26, "depth": 26, "desideratum": 26, "point": [26, 46, 50, 73], "granular": 26, "laplacian": 27, "geometr": 27, "threshold": 27, "random": [27, 28], "respons": [27, 28], "privat": [28, 31, 49, 65, 67, 72, 73], "aggreg": [28, 34, 48, 49, 50, 51, 82], "mean": [28, 48, 67, 74], "count": [28, 34, 67, 74], "plugin": 29, "select": [31, 73, 77], "group": [31, 75], "column": [31, 36, 73, 77], "data": [33, 67, 73, 76, 78, 84], "boolean": [33, 35], "string": [33, 40], "categor": 33, "tempor": [33, 41], "frame": 34, "length": [34, 75], "express": [34, 37], "uniqu": 34, "null": [34, 38], "non": 34, "i": [35, 64, 68, 81, 83], "properti": 35, "Not": 35, "manipul": 38, "clip": 38, "cut": 38, "fill": 38, "nan": 38, "To": [38, 40, 64], "physic": 38, "oper": 39, "strptime": 40, "date": [40, 41], "datetim": 40, "time": [40, 41], "compon": 41, "comparison": 42, "sensit": [42, 82], "max": 42, "partit": [42, 75], "contribut": [42, 58, 60, 61], "structur": [45, 62, 63], "similar": 45, "program": 46, "framework": [46, 82], "summari": [46, 64], "kei": [46, 75], "element": 47, "map": [47, 82], "distanc": [47, 82], "known": [48, 50, 68], "dataset": [48, 50, 51, 68, 76, 82], "size": [48, 50, 68], "unknown": [48, 50, 68], "quantil": [49, 51, 73, 74], "via": [49, 51, 65], "histogram": [49, 65], "b": 49, "ari": 49, "tree": [49, 51], "estim": [49, 73], "sum": [50, 67, 74, 88], "special": 50, "constructor": [50, 63, 88], "imput": 51, "clamp": [51, 88], "order": 51, "bound": [51, 73], "resiz": [51, 68], "util": [52, 80], "paramet": [53, 76, 78], "search": 53, "binari": 53, "exponenti": 53, "serial": 54, "argument": 55, "alias": 55, "contributor": [56, 58], "licens": [56, 58], "agreement": [56, 58], "contact": 57, "process": [58, 59], "creat": [58, 73], "pull": [58, 60], "request": [58, 60], "branch": 58, "philosophi": 58, "vet": 58, "merg": 58, "develop": [59, 63], "environ": 59, "clone": 59, "repo": 59, "rust": [59, 63, 66], "setup": 59, "test": [59, 60], "r": 59, "doc": 59, "releas": 59, "variabl": 59, "tool": 59, "get": [60, 69], "involv": 60, "bug": 60, "report": 60, "code": 60, "resolv": 60, "an": 60, "issu": 60, "add": 60, "review": 60, "initi": [62, 63], "latex": 62, "templat": 62, "precondit": 62, "pseudocod": 62, "postcondit": 62, "loop": 63, "next": [63, 81], "step": 63, "what": [64, 81, 83], "should": 64, "choos": 64, "introduct": [64, 73], "when": [64, 68], "us": [64, 81, 84], "specifi": 64, "compar": 64, "result": 64, "conclus": 64, "make_count_by_categori": 65, "make_count_bi": 65, "make_laplace_threshold": 65, "more": 66, "cookbook": 66, "theori": [66, 89], "applic": 66, "built": 66, "analysi": 67, "work": [67, 68, 76], "csv": 67, "zero": 67, "concentr": 67, "differenti": [67, 72, 73, 81, 86, 87, 88, 90], "popul": 67, "load": [68, 84], "provid": 68, "incorrect": 68, "valu": 68, "other": [68, 78], "approach": 68, "start": 69, "quickstart": 70, "statist": [71, 74], "model": 71, "pca": 72, "linear": 73, "regress": 73, "defin": 73, "1": [73, 78], "alpha": 73, "2": [73, 78], "comput": 73, "percentil": 73, "line": 73, "3": [73, 78], "4": [73, 78], "specif": 73, "5": [73, 78], "make": 73, "6": 73, "theil": 73, "sen": 73, "appli": [73, 90], "synthet": 73, "essenti": 74, "median": 74, "stabl": 75, "explicit": 75, "invari": 75, "tabular": 76, "descript": 76, "overview": [76, 83], "prepar": 77, "microdata": 77, "With": 77, "filter": 77, "typic": 78, "workflow": 78, "identifi": 78, "unit": 78, "set": 78, "loss": 78, "collect": 78, "public": 78, "inform": 78, "mediat": 78, "access": 78, "submit": 78, "dp": [78, 82], "queri": 78, "assess": 80, "welcom": 81, "why": 81, "who": 81, "A": [82, 84], "understand": 82, "between": 82, "adjac": 82, "diverg": 82, "definit": 82, "pitfal": 83, "edg": 83, "case": 83, "confid": 83, "interv": 83, "d": 83, "synopsi": 83, "guarante": 83, "In": 83, "practic": 83, "differenc": 84, "simpl": 84, "attack": [84, 85, 86, 87], "membership": 86, "simul": [86, 87], "reconstruct": 87, "mitig": 87, "The": 88, "retrospect": 88, "partial": 88, "resourc": 90, "foundat": 90, "learn": 90, "about": 90, "paper": 90}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "Python API Documentation": [[1, "python-api-documentation"]], "Contents:": [[1, null], [59, "toctitle"]], "Indexes": [[1, "indexes"]], "opendp package": [[2, "opendp-package"]], "Subpackages": [[2, "subpackages"], [8, "subpackages"], [12, "subpackages"]], "Submodules": [[2, "submodules"]], "Module contents": [[2, "module-opendp"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.numpy"], [11, "module-opendp.extras.polars"], [12, "module-opendp.extras.sklearn"], [13, "module-opendp.extras.sklearn.decomposition"]], "opendp.accuracy module": [[3, "module-opendp.accuracy"]], "opendp.combinators module": [[4, "module-opendp.combinators"]], "opendp.context module": [[5, "module-opendp.context"]], "opendp.core module": [[6, "module-opendp.core"]], "opendp.domains module": [[7, "module-opendp.domains"]], "opendp.extras package": [[8, "opendp-extras-package"]], "opendp.extras.examples package": [[9, "opendp-extras-examples-package"]], "opendp.extras.numpy package": [[10, "opendp-extras-numpy-package"]], "opendp.extras.polars package": [[11, "opendp-extras-polars-package"]], "opendp.extras.sklearn package": [[12, "opendp-extras-sklearn-package"]], "opendp.extras.sklearn.decomposition package": [[13, "opendp-extras-sklearn-decomposition-package"]], "opendp.measurements module": [[14, "module-opendp.measurements"]], "opendp.measures module": [[15, "module-opendp.measures"]], "opendp.metrics module": [[16, "module-opendp.metrics"]], "opendp.mod module": [[17, "module-opendp.mod"]], "opendp.prelude module": [[18, "module-opendp.prelude"]], "opendp.transformations module": [[19, "module-opendp.transformations"]], "opendp.typing module": [[20, "module-opendp.typing"]], "Compositors": [[21, "compositors"]], "Basic Composition": [[21, "basic-composition"]], "Sequential Composition": [[21, "sequential-composition"]], "Chaining": [[21, "chaining"], [22, "chaining"], [88, "chaining"]], "Nesting": [[21, "nesting"]], "Combinators": [[22, "combinators"]], "Composition": [[22, "composition"], [67, "Composition"]], "Measure Casting": [[22, "measure-casting"], [67, "Measure-Casting"]], "Amplification": [[22, "amplification"]], "Context": [[23, "context"]], "API User Guide": [[24, "api-user-guide"]], "Feature Listing": [[24, "feature-listing"]], "Limitations": [[25, "limitations"]], "Privacy Concerns": [[25, "privacy-concerns"]], "Incomplete Privacy Proofs": [[25, "incomplete-privacy-proofs"]], "Missing Functionality": [[25, "missing-functionality"]], "API Stability": [[25, "api-stability"]], "Software Quality": [[25, "software-quality"]], "Additive Noise Mechanisms": [[26, "Additive-Noise-Mechanisms"], [27, "additive-noise-mechanisms"]], "Distribution: Laplace vs. Gaussian": [[26, "Distribution:-Laplace-vs.-Gaussian"]], "Support: Float vs. Integer": [[26, "Support:-Float-vs.-Integer"]], "Domain: Scalar vs. Vector": [[26, "Domain:-Scalar-vs.-Vector"]], "Bit depth": [[26, "Bit-depth"]], "Desideratum: Floating-Point Granularity": [[26, "Desideratum:-Floating-Point-Granularity"]], "Measurements": [[27, "measurements"]], "Laplacian Noise": [[27, "laplacian-noise"]], "Gaussian Noise": [[27, "gaussian-noise"], [42, "Gaussian-Noise"]], "Geometric Noise": [[27, "geometric-noise"]], "Noise Addition with Thresholding": [[27, "noise-addition-with-thresholding"]], "Randomized Response": [[27, "randomized-response"], [28, "randomized-response"]], "Privatization": [[28, "privatization"]], "Aggregation: Mean": [[28, "aggregation-mean"], [48, "aggregation-mean"]], "Aggregation: Count": [[28, "aggregation-count"]], "Plugins": [[29, "plugins"]], "Examples": [[29, "examples"]], "Measurement example": [[30, "measurement-example"]], "Privately Selecting Grouping Columns": [[31, "privately-selecting-grouping-columns"]], "Transformation example": [[32, "transformation-example"]], "Data Types": [[33, "Data-Types"]], "Boolean": [[33, "Boolean"], [35, "Boolean"]], "Integer": [[33, "Integer"]], "Float": [[33, "Float"]], "String": [[33, "String"], [40, "String"]], "Categorical": [[33, "Categorical"]], "Temporal": [[33, "Temporal"], [41, "Temporal"]], "Aggregation": [[34, "Aggregation"]], "Frame Length vs Expression Length": [[34, "Frame-Length-vs-Expression-Length"]], "Unique Counts": [[34, "Unique-Counts"]], "Null and Non-Null Counts": [[34, "Null-and-Non-Null-Counts"]], "Is Property": [[35, "Is-Property"]], "Not": [[35, "Not"]], "Columns": [[36, "Columns"]], "Expressions": [[37, "expressions"]], "Manipulation": [[38, "Manipulation"]], "Cast": [[38, "Cast"]], "Clip": [[38, "Clip"]], "Cut": [[38, "Cut"]], "Fill NaN": [[38, "Fill-NaN"]], "Fill Null": [[38, "Fill-Null"]], "To Physical": [[38, "To-Physical"]], "Operators": [[39, "Operators"]], "Strptime, To Date, To Datetime, To Time": [[40, "Strptime,-To-Date,-To-Datetime,-To-Time"]], "Date/Time Components": [[41, "Date/Time-Components"]], "Distribution Comparison": [[42, "Distribution-Comparison"]], "Sensitivity": [[42, "Sensitivity"]], "Max Partition Contributions": [[42, "Max-Partition-Contributions"]], "Polars": [[43, "polars"]], "Polars vs. OpenDP": [[44, "polars-vs-opendp"]], "Core Structures": [[45, "core-structures"]], "Similarities": [[45, "similarities"]], "Transformation": [[45, "transformation"]], "Measurement": [[45, "measurement"]], "Programming Framework": [[46, "programming-framework"]], "Summary": [[46, "summary"], [64, "Summary"]], "Key Points": [[46, "key-points"]], "Supporting Elements": [[47, "supporting-elements"]], "Function": [[47, "function"]], "Domain": [[47, "domain"]], "Metric": [[47, "metric"]], "Measure": [[47, "measure"]], "Stability/Privacy Map": [[47, "stability-privacy-map"]], "Distance": [[47, "distance"]], "Known Dataset Size": [[48, "known-dataset-size"]], "Unknown Dataset Size": [[48, "unknown-dataset-size"]], "Aggregation: Quantile": [[49, "Aggregation:-Quantile"]], "Quantile via Histogram": [[49, "Quantile-via-Histogram"]], "Quantile via B-ary Tree": [[49, "Quantile-via-B-ary-Tree"]], "Privately Estimating the Distribution": [[49, "Privately-Estimating-the-Distribution"]], "Aggregation: Sum": [[50, "Aggregation:-Sum"]], "Known/Unknown Dataset Size": [[50, "Known/Unknown-Dataset-Size"]], "Floating-Point": [[50, "Floating-Point"]], "Specialized Floating-Point Constructors": [[50, "Specialized-Floating-Point-Constructors"]], "Specialized Integer Constructors": [[50, "Specialized-Integer-Constructors"]], "Transformations": [[51, "transformations"]], "Casting": [[51, "casting"], [67, "Casting"]], "Imputation": [[51, "imputation"]], "Indexing": [[51, "indexing"]], "Clamping": [[51, "clamping"]], "Dataset Ordering": [[51, "dataset-ordering"]], "Bounded Metrics": [[51, "bounded-metrics"]], "Resizing": [[51, "resizing"]], "Aggregators": [[51, "aggregators"]], "Quantiles via Trees": [[51, "quantiles-via-trees"]], "Utilities": [[52, "utilities"]], "Parameter Search": [[53, "parameter-search"]], "Binary Search": [[53, "binary-search"]], "Exponential Search": [[53, "exponential-search"]], "Serialization": [[54, "serialization"]], "Typing": [[55, "typing"]], "Type Argument": [[55, "type-argument"]], "Supported Types": [[55, "supported-types"]], "Type Aliases": [[55, "type-aliases"]], "Contributor License Agreement": [[56, "contributor-license-agreement"], [58, "contributor-license-agreement"]], "Contact": [[57, "contact"]], "Contribution Process": [[58, "contribution-process"]], "Creating a Pull Request": [[58, "creating-a-pull-request"]], "Branch Philosophy": [[58, "branch-philosophy"]], "Vetting Process": [[58, "vetting-process"]], "Merge": [[58, "merge"]], "Development Environment": [[59, "development-environment"]], "Clone the OpenDP Repo": [[59, "clone-the-opendp-repo"]], "Rust Setup": [[59, "rust-setup"]], "Python Setup": [[59, "python-setup"]], "Python Tests": [[59, "python-tests"]], "Python Documentation": [[59, "python-documentation"]], "R Setup": [[59, "r-setup"]], "R Tests": [[59, "r-tests"]], "R Documentation": [[59, "r-documentation"]], "Docs Setup": [[59, "docs-setup"]], "Release Process": [[59, "release-process"]], "Environment Variables": [[59, "environment-variables"]], "Developer Tooling": [[59, "developer-tooling"]], "Getting Involved": [[60, "getting-involved"]], "Bug Reports": [[60, "bug-reports"]], "Code and Proof Contributions": [[60, "code-and-proof-contributions"]], "Resolve an Issue": [[60, "resolve-an-issue"]], "Documentation": [[60, "documentation"]], "Add Tests": [[60, "add-tests"]], "Review Pull Requests": [[60, "review-pull-requests"]], "Contributing": [[61, "contributing"]], "OpenDP Proof Initiation": [[62, "opendp-proof-initiation"]], "Proof Structure": [[62, "proof-structure"]], "Function Example": [[62, "function-example"]], "LaTex Template": [[62, "latex-template"]], "Preconditions": [[62, "preconditions"]], "Pseudocode": [[62, "pseudocode"]], "Postcondition": [[62, "postcondition"]], "Proof": [[62, "proof"]], "OpenDP Rust Initiation": [[63, "opendp-rust-initiation"]], "Transformation Structure": [[63, "transformation-structure"]], "Example Transformation Constructor": [[63, "example-transformation-constructor"]], "Measurement Structure": [[63, "measurement-structure"]], "Developer Loop": [[63, "developer-loop"]], "Next Steps": [[63, "next-steps"]], "What Noise Should I Choose?": [[64, "What-Noise-Should-I-Choose?"]], "Introduction": [[64, "Introduction"], [73, "Introduction"]], "Laplace vs. Gaussian": [[64, "Laplace-vs.-Gaussian"]], "When To Use:": [[64, "When-To-Use:"]], "Specifying Laplace or Gaussian with the Context API": [[64, "Specifying-Laplace-or-Gaussian-with-the-Context-API"]], "Comparing Results": [[64, "Comparing-Results"]], "Conclusion": [[64, "Conclusion"]], "Privatizing Histograms": [[65, "Privatizing-Histograms"]], "Private histogram via make_count_by_categories": [[65, "Private-histogram-via-make_count_by_categories"]], "Private histogram via make_count_by and make_laplace_threshold": [[65, "Private-histogram-via-make_count_by-and-make_laplace_threshold"]], "More Examples": [[66, "more-examples"]], "Cookbook examples": [[66, "cookbook-examples"]], "Theory examples": [[66, "theory-examples"]], "API Examples": [[66, "api-examples"]], "Rust Examples": [[66, "rust-examples"]], "Applications built with OpenDP": [[66, "applications-built-with-opendp"]], "Example Data Analysis": [[67, "Example-Data-Analysis"]], "Working with CSV data": [[67, "Working-with-CSV-data"]], "Private Count": [[67, "Private-Count"]], "Private Sum": [[67, "Private-Sum"]], "Private Mean": [[67, "Private-Mean"]], "Zero-Concentrated Differential Privacy": [[67, "Zero-Concentrated-Differential-Privacy"]], "Population Amplification": [[67, "Population-Amplification"]], "Working with Unknown Dataset Sizes": [[68, "Working-with-Unknown-Dataset-Sizes"]], "Load example dataset": [[68, "Load-example-dataset"]], "When dataset size is known": [[68, "When-dataset-size-is-known"]], "When dataset size is unknown": [[68, "When-dataset-size-is-unknown"]], "Providing incorrect dataset size values": [[68, "Providing-incorrect-dataset-size-values"]], "OpenDP resize vs. other approaches": [[68, "OpenDP-resize-vs.-other-approaches"]], "Getting Started": [[69, "getting-started"]], "Quickstart": [[70, "quickstart"]], "Statistical Modeling": [[71, "statistical-modeling"]], "Differentially Private PCA": [[72, "differentially-private-pca"]], "Linear Regression": [[73, "Linear-Regression"]], "Defining Regression Functions": [[73, "Defining-Regression-Functions"]], "1. Define Alphas": [[73, "1.-Define-Alphas"]], "2. Define a Function to Compute Points on the Percentile Lines": [[73, "2.-Define-a-Function-to-Compute-Points-on-the-Percentile-Lines"]], "3. Define a Function to Compute Differentially Private Percentiles": [[73, "3.-Define-a-Function-to-Compute-Differentially-Private-Percentiles"]], "4. Create a Function to Select a Specific Column": [[73, "4.-Create-a-Function-to-Select-a-Specific-Column"]], "5. Create a Function to Make Private Quantiles in Bounds": [[73, "5.-Create-a-Function-to-Make-Private-Quantiles-in-Bounds"]], "6. Create a Differentially Private Theil-Sen Estimator": [[73, "6.-Create-a-Differentially-Private-Theil-Sen-Estimator"]], "Creating and Applying the Mechanism to Synthetic Data": [[73, "Creating-and-Applying-the-Mechanism-to-Synthetic-Data"]], "Essential Statistics": [[74, "Essential-Statistics"]], "Count": [[74, "Count"]], "Sum": [[74, "Sum"]], "Mean": [[74, "Mean"]], "Median": [[74, "Median"]], "Quantile": [[74, "Quantile"]], "Grouping": [[75, "Grouping"]], "Stable Keys": [[75, "Stable-Keys"]], "Explicit Keys": [[75, "Explicit-Keys"]], "Invariant Keys": [[75, "Invariant-Keys"]], "Invariant Partition Lengths": [[75, "Invariant-Partition-Lengths"]], "Working with Tabular Data": [[76, "working-with-tabular-data"]], "Dataset Description": [[76, "dataset-description"]], "Compositor Overview": [[76, "compositor-overview"]], "Context Parameters": [[76, "context-parameters"]], "Preparing Microdata": [[77, "Preparing-Microdata"]], "With Columns": [[77, "With-Columns"]], "Select": [[77, "Select"]], "Filter": [[77, "Filter"]], "Typical Workflow": [[78, "typical-workflow"]], "1. Identify the Unit of Privacy": [[78, "identify-the-unit-of-privacy"]], "2. Set Privacy Loss Parameters": [[78, "set-privacy-loss-parameters"]], "3. Collect Public Information": [[78, "collect-public-information"]], "4. Mediate Access to Data": [[78, "mediate-access-to-data"]], "5. Submit DP Queries": [[78, "submit-dp-queries"]], "Other features": [[78, "other-features"]], "Accuracy": [[79, "accuracy"]], "Assessing Utility": [[80, "assessing-utility"]], "Welcome": [[81, "welcome"]], "What is differential privacy?": [[81, "what-is-differential-privacy"]], "Why OpenDP?": [[81, "why-opendp"]], "Who is using OpenDP?": [[81, "who-is-using-opendp"]], "What next?": [[81, "what-next"]], "A Framework to Understand DP": [[82, "A-Framework-to-Understand-DP"]], "Distance Between Datasets - Adjacency": [[82, "Distance-Between-Datasets---Adjacency"]], "Distance Between Distributions - Divergence": [[82, "Distance-Between-Distributions---Divergence"]], "Definition of Privacy": [[82, "Definition-of-Privacy"]], "Distance Between Aggregates - Sensitivity": [[82, "Distance-Between-Aggregates---Sensitivity"]], "Definition of Stability": [[82, "Definition-of-Stability"]], "Stability Maps and Privacy Maps": [[82, "Stability-Maps-and-Privacy-Maps"]], "Accuracy: Pitfalls and Edge Cases": [[83, "Accuracy:-Pitfalls-and-Edge-Cases"]], "Overview": [[83, "Overview"]], "Accuracy vs. Confidence Intervals": [[83, "Accuracy-vs.-Confidence-Intervals"]], "What is D?": [[83, "What-is-D?"]], "Synopsis": [[83, "Synopsis"]], "Accuracy Guarantees In Practice": [[83, "Accuracy-Guarantees-In-Practice"]], "Differencing": [[84, "Differencing"]], "Loading the data": [[84, "Loading-the-data"]], "A simple attack": [[84, "A-simple-attack"]], "Using OpenDP": [[84, "Using-OpenDP"]], "Attacks": [[85, "attacks"]], "Membership": [[86, "Membership"]], "Membership Attacks": [[86, "Membership-Attacks"]], "Example": [[86, "Example"]], "Simulations": [[86, "Simulations"], [87, "Simulations"]], "Differential Privacy": [[86, "Differential-Privacy"], [87, "Differential-Privacy"]], "Reconstruction": [[87, "Reconstruction"]], "Reconstruction Attack": [[87, "Reconstruction-Attack"]], "Mitigations": [[87, "Mitigations"]], "Differential Privacy with OpenDP": [[88, "differential-privacy-with-opendp"]], "The Laplace Mechanism": [[88, "the-laplace-mechanism"]], "Transformation Example: Sum": [[88, "transformation-example-sum"]], "Transformation Example: Clamp": [[88, "transformation-example-clamp"]], "Retrospective": [[88, "retrospective"]], "Partial Constructors": [[88, "partial-constructors"]], "Theory": [[89, "theory"]], "Resources List": [[90, "resources-list"]], "Foundations": [[90, "foundations"]], "Applying Differential Privacy": [[90, "applying-differential-privacy"]], "Learning About Differential Privacy": [[90, "learning-about-differential-privacy"]], "Papers": [[90, "papers"]]}, "indexentries": {"module": [[2, "module-opendp"], [3, "module-opendp.accuracy"], [4, "module-opendp.combinators"], [5, "module-opendp.context"], [6, "module-opendp.core"], [7, "module-opendp.domains"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.numpy"], [11, "module-opendp.extras.polars"], [12, "module-opendp.extras.sklearn"], [13, "module-opendp.extras.sklearn.decomposition"], [14, "module-opendp.measurements"], [15, "module-opendp.measures"], [16, "module-opendp.metrics"], [17, "module-opendp.mod"], [18, "module-opendp.prelude"], [19, "module-opendp.transformations"], [20, "module-opendp.typing"]], "opendp": [[2, "module-opendp"]], "accuracy_to_discrete_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_gaussian_scale"]], "accuracy_to_discrete_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_laplacian_scale"]], "accuracy_to_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_gaussian_scale"]], "accuracy_to_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_laplacian_scale"]], "discrete_gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_gaussian_scale_to_accuracy"]], "discrete_laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_laplacian_scale_to_accuracy"]], "gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.gaussian_scale_to_accuracy"]], "laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.laplacian_scale_to_accuracy"]], "opendp.accuracy": [[3, "module-opendp.accuracy"]], "summarize_polars_measurement() (in module opendp.accuracy)": [[3, "opendp.accuracy.summarize_polars_measurement"]], "make_approximate() (in module opendp.combinators)": [[4, "opendp.combinators.make_approximate"]], "make_basic_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_basic_composition"]], "make_chain_mt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_mt"]], "make_chain_pm() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_pm"]], "make_chain_tt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_tt"]], "make_fix_delta() (in module opendp.combinators)": [[4, "opendp.combinators.make_fix_delta"]], "make_population_amplification() (in module opendp.combinators)": [[4, "opendp.combinators.make_population_amplification"]], "make_puredp_to_zcdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_pureDP_to_zCDP"]], "make_select_private_candidate() (in module opendp.combinators)": [[4, "opendp.combinators.make_select_private_candidate"]], "make_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_sequential_composition"]], "make_zcdp_to_approxdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_zCDP_to_approxDP"]], "opendp.combinators": [[4, "module-opendp.combinators"]], "then_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_sequential_composition"]], "context (class in opendp.context)": [[5, "opendp.context.Context"]], "partialchain (class in opendp.context)": [[5, "opendp.context.PartialChain"]], "query (class in opendp.context)": [[5, "opendp.context.Query"]], "accountant (opendp.context.context attribute)": [[5, "opendp.context.Context.accountant"]], "compositor() (opendp.context.context static method)": [[5, "opendp.context.Context.compositor"]], "compositor() (opendp.context.query method)": [[5, "opendp.context.Query.compositor"]], "domain_of() (in module opendp.context)": [[5, "opendp.context.domain_of"]], "fix() (opendp.context.partialchain method)": [[5, "opendp.context.PartialChain.fix"]], "loss_of() (in module opendp.context)": [[5, "opendp.context.loss_of"]], "metric_of() (in module opendp.context)": [[5, "opendp.context.metric_of"]], "new_with() (opendp.context.query method)": [[5, "opendp.context.Query.new_with"]], "opendp.context": [[5, "module-opendp.context"]], "param() (opendp.context.query method)": [[5, "opendp.context.Query.param"]], "partial (opendp.context.partialchain attribute)": [[5, "opendp.context.PartialChain.partial"]], "query() (opendp.context.context method)": [[5, "opendp.context.Context.query"]], "queryable (opendp.context.context attribute)": [[5, "opendp.context.Context.queryable"]], "release() (opendp.context.query method)": [[5, "opendp.context.Query.release"]], "resolve() (opendp.context.query method)": [[5, "opendp.context.Query.resolve"]], "space_of() (in module opendp.context)": [[5, "opendp.context.space_of"]], "unit_of() (in module opendp.context)": [[5, "opendp.context.unit_of"]], "wrap() (opendp.context.partialchain class method)": [[5, "opendp.context.PartialChain.wrap"]], "function_eval() (in module opendp.core)": [[6, "opendp.core.function_eval"]], "measurement_check() (in module opendp.core)": [[6, "opendp.core.measurement_check"]], "measurement_function() (in module opendp.core)": [[6, "opendp.core.measurement_function"]], "measurement_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_carrier_type"]], "measurement_input_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_distance_type"]], "measurement_input_domain() (in module opendp.core)": [[6, "opendp.core.measurement_input_domain"]], "measurement_input_metric() (in module opendp.core)": [[6, "opendp.core.measurement_input_metric"]], "measurement_invoke() (in module opendp.core)": [[6, "opendp.core.measurement_invoke"]], "measurement_map() (in module opendp.core)": [[6, "opendp.core.measurement_map"]], "measurement_output_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_output_distance_type"]], "measurement_output_measure() (in module opendp.core)": [[6, "opendp.core.measurement_output_measure"]], "new_function() (in module opendp.core)": [[6, "opendp.core.new_function"]], "new_queryable() (in module opendp.core)": [[6, "opendp.core.new_queryable"]], "opendp.core": [[6, "module-opendp.core"]], "queryable_eval() (in module opendp.core)": [[6, "opendp.core.queryable_eval"]], "queryable_query_type() (in module opendp.core)": [[6, "opendp.core.queryable_query_type"]], "transformation_check() (in module opendp.core)": [[6, "opendp.core.transformation_check"]], "transformation_function() (in module opendp.core)": [[6, "opendp.core.transformation_function"]], "transformation_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_carrier_type"]], "transformation_input_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_distance_type"]], "transformation_input_domain() (in module opendp.core)": [[6, "opendp.core.transformation_input_domain"]], "transformation_input_metric() (in module opendp.core)": [[6, "opendp.core.transformation_input_metric"]], "transformation_invoke() (in module opendp.core)": [[6, "opendp.core.transformation_invoke"]], "transformation_map() (in module opendp.core)": [[6, "opendp.core.transformation_map"]], "transformation_output_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_output_distance_type"]], "transformation_output_domain() (in module opendp.core)": [[6, "opendp.core.transformation_output_domain"]], "transformation_output_metric() (in module opendp.core)": [[6, "opendp.core.transformation_output_metric"]], "atom_domain() (in module opendp.domains)": [[7, "opendp.domains.atom_domain"]], "bitvector_domain() (in module opendp.domains)": [[7, "opendp.domains.bitvector_domain"]], "categorical_domain() (in module opendp.domains)": [[7, "opendp.domains.categorical_domain"]], "datetime_domain() (in module opendp.domains)": [[7, "opendp.domains.datetime_domain"]], "domain_carrier_type() (in module opendp.domains)": [[7, "opendp.domains.domain_carrier_type"]], "domain_debug() (in module opendp.domains)": [[7, "opendp.domains.domain_debug"]], "domain_type() (in module opendp.domains)": [[7, "opendp.domains.domain_type"]], "lazyframe_domain() (in module opendp.domains)": [[7, "opendp.domains.lazyframe_domain"]], "map_domain() (in module opendp.domains)": [[7, "opendp.domains.map_domain"]], "member() (in module opendp.domains)": [[7, "opendp.domains.member"]], "opendp.domains": [[7, "module-opendp.domains"]], "option_domain() (in module opendp.domains)": [[7, "opendp.domains.option_domain"]], "series_domain() (in module opendp.domains)": [[7, "opendp.domains.series_domain"]], "user_domain() (in module opendp.domains)": [[7, "opendp.domains.user_domain"]], "vector_domain() (in module opendp.domains)": [[7, "opendp.domains.vector_domain"]], "wild_expr_domain() (in module opendp.domains)": [[7, "opendp.domains.wild_expr_domain"]], "with_margin() (in module opendp.domains)": [[7, "opendp.domains.with_margin"]], "opendp.extras": [[8, "module-opendp.extras"]], "get_california_pums_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_california_pums_path"]], "get_france_lfs_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_france_lfs_path"]], "opendp.extras.examples": [[9, "module-opendp.extras.examples"]], "array2_domain() (in module opendp.extras.numpy)": [[10, "opendp.extras.numpy.array2_domain"]], "make_np_clamp() (in module opendp.extras.numpy)": [[10, "opendp.extras.numpy.make_np_clamp"]], "opendp.extras.numpy": [[10, "module-opendp.extras.numpy"]], "dpexpr (class in opendp.extras.polars)": [[11, "opendp.extras.polars.DPExpr"]], "lazyframequery (class in opendp.extras.polars)": [[11, "opendp.extras.polars.LazyFrameQuery"]], "lazygroupbyquery (class in opendp.extras.polars)": [[11, "opendp.extras.polars.LazyGroupByQuery"]], "margin (class in opendp.extras.polars)": [[11, "opendp.extras.polars.Margin"]], "onceframe (class in opendp.extras.polars)": [[11, "opendp.extras.polars.OnceFrame"]], "agg() (opendp.extras.polars.lazygroupbyquery method)": [[11, "opendp.extras.polars.LazyGroupByQuery.agg"]], "collect() (opendp.extras.polars.onceframe method)": [[11, "opendp.extras.polars.OnceFrame.collect"]], "count() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.count"]], "dp_len() (in module opendp.extras.polars)": [[11, "opendp.extras.polars.dp_len"]], "filter() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.filter"]], "gaussian() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.gaussian"]], "group_by() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.group_by"]], "join() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.join"]], "laplace() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.laplace"]], "lazy() (opendp.extras.polars.onceframe method)": [[11, "opendp.extras.polars.OnceFrame.lazy"]], "len() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.len"]], "max_influenced_partitions (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_influenced_partitions"]], "max_num_partitions (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_num_partitions"]], "max_partition_contributions (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_partition_contributions"]], "max_partition_length (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.max_partition_length"]], "mean() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.mean"]], "median() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.median"]], "n_unique() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.n_unique"]], "noise() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.noise"]], "null_count() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.null_count"]], "opendp.extras.polars": [[11, "module-opendp.extras.polars"]], "public_info (opendp.extras.polars.margin attribute)": [[11, "opendp.extras.polars.Margin.public_info"]], "quantile() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.quantile"]], "release() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.release"]], "resolve() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.resolve"]], "select() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.select"]], "select_seq() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.select_seq"]], "sort() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.sort"]], "sum() (opendp.extras.polars.dpexpr method)": [[11, "opendp.extras.polars.DPExpr.sum"]], "summarize() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.summarize"]], "with_columns() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.with_columns"]], "with_columns_seq() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.with_columns_seq"]], "with_keys() (opendp.extras.polars.lazyframequery method)": [[11, "opendp.extras.polars.LazyFrameQuery.with_keys"]], "opendp.extras.sklearn": [[12, "module-opendp.extras.sklearn"]], "pca (class in opendp.extras.sklearn.decomposition)": [[13, "opendp.extras.sklearn.decomposition.PCA"]], "pcaepsilons (class in opendp.extras.sklearn.decomposition)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons"]], "eigvals (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvals"]], "eigvecs (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvecs"]], "fit() (opendp.extras.sklearn.decomposition.pca method)": [[13, "opendp.extras.sklearn.decomposition.PCA.fit"]], "make_private_pca() (in module opendp.extras.sklearn.decomposition)": [[13, "opendp.extras.sklearn.decomposition.make_private_pca"]], "mean (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[13, "opendp.extras.sklearn.decomposition.PCAEpsilons.mean"]], "measurement() (opendp.extras.sklearn.decomposition.pca method)": [[13, "opendp.extras.sklearn.decomposition.PCA.measurement"]], "n_features (opendp.extras.sklearn.decomposition.pca attribute)": [[13, "opendp.extras.sklearn.decomposition.PCA.n_features"]], "opendp.extras.sklearn.decomposition": [[13, "module-opendp.extras.sklearn.decomposition"]], "debias_randomized_response_bitvec() (in module opendp.measurements)": [[14, "opendp.measurements.debias_randomized_response_bitvec"]], "make_alp_queryable() (in module opendp.measurements)": [[14, "opendp.measurements.make_alp_queryable"]], "make_gaussian() (in module opendp.measurements)": [[14, "opendp.measurements.make_gaussian"]], "make_geometric() (in module opendp.measurements)": [[14, "opendp.measurements.make_geometric"]], "make_laplace() (in module opendp.measurements)": [[14, "opendp.measurements.make_laplace"]], "make_laplace_threshold() (in module opendp.measurements)": [[14, "opendp.measurements.make_laplace_threshold"]], "make_private_expr() (in module opendp.measurements)": [[14, "opendp.measurements.make_private_expr"]], "make_private_lazyframe() (in module opendp.measurements)": [[14, "opendp.measurements.make_private_lazyframe"]], "make_randomized_response() (in module opendp.measurements)": [[14, "opendp.measurements.make_randomized_response"]], "make_randomized_response_bitvec() (in module opendp.measurements)": [[14, "opendp.measurements.make_randomized_response_bitvec"]], "make_randomized_response_bool() (in module opendp.measurements)": [[14, "opendp.measurements.make_randomized_response_bool"]], "make_report_noisy_max_gumbel() (in module opendp.measurements)": [[14, "opendp.measurements.make_report_noisy_max_gumbel"]], "make_user_measurement() (in module opendp.measurements)": [[14, "opendp.measurements.make_user_measurement"]], "opendp.measurements": [[14, "module-opendp.measurements"]], "then_alp_queryable() (in module opendp.measurements)": [[14, "opendp.measurements.then_alp_queryable"]], "then_gaussian() (in module opendp.measurements)": [[14, "opendp.measurements.then_gaussian"]], "then_geometric() (in module opendp.measurements)": [[14, "opendp.measurements.then_geometric"]], "then_laplace() (in module opendp.measurements)": [[14, "opendp.measurements.then_laplace"]], "then_laplace_threshold() (in module opendp.measurements)": [[14, "opendp.measurements.then_laplace_threshold"]], "then_private_expr() (in module opendp.measurements)": [[14, "opendp.measurements.then_private_expr"]], "then_private_lazyframe() (in module opendp.measurements)": [[14, "opendp.measurements.then_private_lazyframe"]], "then_randomized_response_bitvec() (in module opendp.measurements)": [[14, "opendp.measurements.then_randomized_response_bitvec"]], "then_report_noisy_max_gumbel() (in module opendp.measurements)": [[14, "opendp.measurements.then_report_noisy_max_gumbel"]], "then_user_measurement() (in module opendp.measurements)": [[14, "opendp.measurements.then_user_measurement"]], "approximate() (in module opendp.measures)": [[15, "opendp.measures.approximate"]], "fixed_smoothed_max_divergence() (in module opendp.measures)": [[15, "opendp.measures.fixed_smoothed_max_divergence"]], "max_divergence() (in module opendp.measures)": [[15, "opendp.measures.max_divergence"]], "measure_debug() (in module opendp.measures)": [[15, "opendp.measures.measure_debug"]], "measure_distance_type() (in module opendp.measures)": [[15, "opendp.measures.measure_distance_type"]], "measure_type() (in module opendp.measures)": [[15, "opendp.measures.measure_type"]], "new_privacy_profile() (in module opendp.measures)": [[15, "opendp.measures.new_privacy_profile"]], "opendp.measures": [[15, "module-opendp.measures"]], "renyi_divergence() (in module opendp.measures)": [[15, "opendp.measures.renyi_divergence"]], "smoothed_max_divergence() (in module opendp.measures)": [[15, "opendp.measures.smoothed_max_divergence"]], "user_divergence() (in module opendp.measures)": [[15, "opendp.measures.user_divergence"]], "zero_concentrated_divergence() (in module opendp.measures)": [[15, "opendp.measures.zero_concentrated_divergence"]], "absolute_distance() (in module opendp.metrics)": [[16, "opendp.metrics.absolute_distance"]], "change_one_distance() (in module opendp.metrics)": [[16, "opendp.metrics.change_one_distance"]], "discrete_distance() (in module opendp.metrics)": [[16, "opendp.metrics.discrete_distance"]], "hamming_distance() (in module opendp.metrics)": [[16, "opendp.metrics.hamming_distance"]], "insert_delete_distance() (in module opendp.metrics)": [[16, "opendp.metrics.insert_delete_distance"]], "l1_distance() (in module opendp.metrics)": [[16, "opendp.metrics.l1_distance"]], "l2_distance() (in module opendp.metrics)": [[16, "opendp.metrics.l2_distance"]], "linf_distance() (in module opendp.metrics)": [[16, "opendp.metrics.linf_distance"]], "metric_debug() (in module opendp.metrics)": [[16, "opendp.metrics.metric_debug"]], "metric_distance_type() (in module opendp.metrics)": [[16, "opendp.metrics.metric_distance_type"]], "metric_type() (in module opendp.metrics)": [[16, "opendp.metrics.metric_type"]], "opendp.metrics": [[16, "module-opendp.metrics"]], "partition_distance() (in module opendp.metrics)": [[16, "opendp.metrics.partition_distance"]], "symmetric_distance() (in module opendp.metrics)": [[16, "opendp.metrics.symmetric_distance"]], "user_distance() (in module opendp.metrics)": [[16, "opendp.metrics.user_distance"]], "domain (class in opendp.mod)": [[17, "opendp.mod.Domain"]], "function (class in opendp.mod)": [[17, "opendp.mod.Function"]], "measure (class in opendp.mod)": [[17, "opendp.mod.Measure"]], "measurement (class in opendp.mod)": [[17, "opendp.mod.Measurement"]], "metric (class in opendp.mod)": [[17, "opendp.mod.Metric"]], "opendpexception": [[17, "opendp.mod.OpenDPException"]], "privacyprofile (class in opendp.mod)": [[17, "opendp.mod.PrivacyProfile"]], "queryable (class in opendp.mod)": [[17, "opendp.mod.Queryable"]], "transformation (class in opendp.mod)": [[17, "opendp.mod.Transformation"]], "unknowntypeexception": [[17, "opendp.mod.UnknownTypeException"]], "assert_features() (in module opendp.mod)": [[17, "opendp.mod.assert_features"]], "binary_search() (in module opendp.mod)": [[17, "opendp.mod.binary_search"]], "binary_search_chain() (in module opendp.mod)": [[17, "opendp.mod.binary_search_chain"]], "binary_search_param() (in module opendp.mod)": [[17, "opendp.mod.binary_search_param"]], "carrier_type (opendp.mod.domain attribute)": [[17, "opendp.mod.Domain.carrier_type"]], "check() (opendp.mod.measurement method)": [[17, "opendp.mod.Measurement.check"]], "check() (opendp.mod.transformation method)": [[17, "opendp.mod.Transformation.check"]], "delta() (opendp.mod.privacyprofile method)": [[17, "opendp.mod.PrivacyProfile.delta"]], "descriptor (opendp.mod.domain attribute)": [[17, "opendp.mod.Domain.descriptor"]], "deserialize() (in module opendp.mod)": [[17, "opendp.mod.deserialize"]], "disable_features() (in module opendp.mod)": [[17, "opendp.mod.disable_features"]], "distance_type (opendp.mod.measure attribute)": [[17, "opendp.mod.Measure.distance_type"]], "distance_type (opendp.mod.metric attribute)": [[17, "opendp.mod.Metric.distance_type"]], "enable_features() (in module opendp.mod)": [[17, "opendp.mod.enable_features"]], "epsilon() (opendp.mod.privacyprofile method)": [[17, "opendp.mod.PrivacyProfile.epsilon"]], "exponential_bounds_search() (in module opendp.mod)": [[17, "opendp.mod.exponential_bounds_search"]], "function (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.function"]], "function (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.function"]], "input_carrier_type (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_carrier_type"]], "input_carrier_type (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_carrier_type"]], "input_distance_type (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_distance_type"]], "input_distance_type (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_distance_type"]], "input_domain (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_domain"]], "input_domain (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_domain"]], "input_metric (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_metric"]], "input_metric (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_metric"]], "input_space (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.input_space"]], "input_space (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.input_space"]], "invoke() (opendp.mod.measurement method)": [[17, "opendp.mod.Measurement.invoke"]], "invoke() (opendp.mod.transformation method)": [[17, "opendp.mod.Transformation.invoke"]], "map() (opendp.mod.measurement method)": [[17, "opendp.mod.Measurement.map"]], "map() (opendp.mod.transformation method)": [[17, "opendp.mod.Transformation.map"]], "member() (opendp.mod.domain method)": [[17, "opendp.mod.Domain.member"]], "opendp.mod": [[17, "module-opendp.mod"]], "output_distance_type (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.output_distance_type"]], "output_distance_type (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_distance_type"]], "output_domain (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_domain"]], "output_measure (opendp.mod.measurement attribute)": [[17, "opendp.mod.Measurement.output_measure"]], "output_metric (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_metric"]], "output_space (opendp.mod.transformation attribute)": [[17, "opendp.mod.Transformation.output_space"]], "raw_traceback (opendp.mod.opendpexception attribute)": [[17, "opendp.mod.OpenDPException.raw_traceback"]], "serialize() (in module opendp.mod)": [[17, "opendp.mod.serialize"]], "type (opendp.mod.domain attribute)": [[17, "opendp.mod.Domain.type"]], "type (opendp.mod.measure attribute)": [[17, "opendp.mod.Measure.type"]], "type (opendp.mod.metric attribute)": [[17, "opendp.mod.Metric.type"]], "opendp.prelude": [[18, "module-opendp.prelude"]], "choose_branching_factor() (in module opendp.transformations)": [[19, "opendp.transformations.choose_branching_factor"]], "make_b_ary_tree() (in module opendp.transformations)": [[19, "opendp.transformations.make_b_ary_tree"]], "make_bounded_float_checked_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_float_checked_sum"]], "make_bounded_float_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_float_ordered_sum"]], "make_bounded_int_monotonic_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_int_monotonic_sum"]], "make_bounded_int_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_int_ordered_sum"]], "make_bounded_int_split_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_bounded_int_split_sum"]], "make_cast() (in module opendp.transformations)": [[19, "opendp.transformations.make_cast"]], "make_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.make_cast_default"]], "make_cast_inherent() (in module opendp.transformations)": [[19, "opendp.transformations.make_cast_inherent"]], "make_cdf() (in module opendp.transformations)": [[19, "opendp.transformations.make_cdf"]], "make_clamp() (in module opendp.transformations)": [[19, "opendp.transformations.make_clamp"]], "make_consistent_b_ary_tree() (in module opendp.transformations)": [[19, "opendp.transformations.make_consistent_b_ary_tree"]], "make_count() (in module opendp.transformations)": [[19, "opendp.transformations.make_count"]], "make_count_by() (in module opendp.transformations)": [[19, "opendp.transformations.make_count_by"]], "make_count_by_categories() (in module opendp.transformations)": [[19, "opendp.transformations.make_count_by_categories"]], "make_count_distinct() (in module opendp.transformations)": [[19, "opendp.transformations.make_count_distinct"]], "make_create_dataframe() (in module opendp.transformations)": [[19, "opendp.transformations.make_create_dataframe"]], "make_df_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.make_df_cast_default"]], "make_df_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.make_df_is_equal"]], "make_drop_null() (in module opendp.transformations)": [[19, "opendp.transformations.make_drop_null"]], "make_find() (in module opendp.transformations)": [[19, "opendp.transformations.make_find"]], "make_find_bin() (in module opendp.transformations)": [[19, "opendp.transformations.make_find_bin"]], "make_identity() (in module opendp.transformations)": [[19, "opendp.transformations.make_identity"]], "make_impute_constant() (in module opendp.transformations)": [[19, "opendp.transformations.make_impute_constant"]], "make_impute_uniform_float() (in module opendp.transformations)": [[19, "opendp.transformations.make_impute_uniform_float"]], "make_index() (in module opendp.transformations)": [[19, "opendp.transformations.make_index"]], "make_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.make_is_equal"]], "make_is_null() (in module opendp.transformations)": [[19, "opendp.transformations.make_is_null"]], "make_lipschitz_float_mul() (in module opendp.transformations)": [[19, "opendp.transformations.make_lipschitz_float_mul"]], "make_mean() (in module opendp.transformations)": [[19, "opendp.transformations.make_mean"]], "make_metric_bounded() (in module opendp.transformations)": [[19, "opendp.transformations.make_metric_bounded"]], "make_metric_unbounded() (in module opendp.transformations)": [[19, "opendp.transformations.make_metric_unbounded"]], "make_ordered_random() (in module opendp.transformations)": [[19, "opendp.transformations.make_ordered_random"]], "make_quantile_score_candidates() (in module opendp.transformations)": [[19, "opendp.transformations.make_quantile_score_candidates"]], "make_quantiles_from_counts() (in module opendp.transformations)": [[19, "opendp.transformations.make_quantiles_from_counts"]], "make_resize() (in module opendp.transformations)": [[19, "opendp.transformations.make_resize"]], "make_select_column() (in module opendp.transformations)": [[19, "opendp.transformations.make_select_column"]], "make_sized_bounded_float_checked_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_float_checked_sum"]], "make_sized_bounded_float_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_float_ordered_sum"]], "make_sized_bounded_int_checked_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_checked_sum"]], "make_sized_bounded_int_monotonic_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_monotonic_sum"]], "make_sized_bounded_int_ordered_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_ordered_sum"]], "make_sized_bounded_int_split_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sized_bounded_int_split_sum"]], "make_split_dataframe() (in module opendp.transformations)": [[19, "opendp.transformations.make_split_dataframe"]], "make_split_lines() (in module opendp.transformations)": [[19, "opendp.transformations.make_split_lines"]], "make_split_records() (in module opendp.transformations)": [[19, "opendp.transformations.make_split_records"]], "make_stable_expr() (in module opendp.transformations)": [[19, "opendp.transformations.make_stable_expr"]], "make_stable_lazyframe() (in module opendp.transformations)": [[19, "opendp.transformations.make_stable_lazyframe"]], "make_subset_by() (in module opendp.transformations)": [[19, "opendp.transformations.make_subset_by"]], "make_sum() (in module opendp.transformations)": [[19, "opendp.transformations.make_sum"]], "make_sum_of_squared_deviations() (in module opendp.transformations)": [[19, "opendp.transformations.make_sum_of_squared_deviations"]], "make_unordered() (in module opendp.transformations)": [[19, "opendp.transformations.make_unordered"]], "make_user_transformation() (in module opendp.transformations)": [[19, "opendp.transformations.make_user_transformation"]], "make_variance() (in module opendp.transformations)": [[19, "opendp.transformations.make_variance"]], "opendp.transformations": [[19, "module-opendp.transformations"]], "then_b_ary_tree() (in module opendp.transformations)": [[19, "opendp.transformations.then_b_ary_tree"]], "then_cast() (in module opendp.transformations)": [[19, "opendp.transformations.then_cast"]], "then_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.then_cast_default"]], "then_cast_inherent() (in module opendp.transformations)": [[19, "opendp.transformations.then_cast_inherent"]], "then_clamp() (in module opendp.transformations)": [[19, "opendp.transformations.then_clamp"]], "then_count() (in module opendp.transformations)": [[19, "opendp.transformations.then_count"]], "then_count_by() (in module opendp.transformations)": [[19, "opendp.transformations.then_count_by"]], "then_count_by_categories() (in module opendp.transformations)": [[19, "opendp.transformations.then_count_by_categories"]], "then_count_distinct() (in module opendp.transformations)": [[19, "opendp.transformations.then_count_distinct"]], "then_df_cast_default() (in module opendp.transformations)": [[19, "opendp.transformations.then_df_cast_default"]], "then_df_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.then_df_is_equal"]], "then_drop_null() (in module opendp.transformations)": [[19, "opendp.transformations.then_drop_null"]], "then_find() (in module opendp.transformations)": [[19, "opendp.transformations.then_find"]], "then_find_bin() (in module opendp.transformations)": [[19, "opendp.transformations.then_find_bin"]], "then_identity() (in module opendp.transformations)": [[19, "opendp.transformations.then_identity"]], "then_impute_constant() (in module opendp.transformations)": [[19, "opendp.transformations.then_impute_constant"]], "then_impute_uniform_float() (in module opendp.transformations)": [[19, "opendp.transformations.then_impute_uniform_float"]], "then_index() (in module opendp.transformations)": [[19, "opendp.transformations.then_index"]], "then_is_equal() (in module opendp.transformations)": [[19, "opendp.transformations.then_is_equal"]], "then_is_null() (in module opendp.transformations)": [[19, "opendp.transformations.then_is_null"]], "then_mean() (in module opendp.transformations)": [[19, "opendp.transformations.then_mean"]], "then_metric_bounded() (in module opendp.transformations)": [[19, "opendp.transformations.then_metric_bounded"]], "then_metric_unbounded() (in module opendp.transformations)": [[19, "opendp.transformations.then_metric_unbounded"]], "then_ordered_random() (in module opendp.transformations)": [[19, "opendp.transformations.then_ordered_random"]], "then_quantile_score_candidates() (in module opendp.transformations)": [[19, "opendp.transformations.then_quantile_score_candidates"]], "then_resize() (in module opendp.transformations)": [[19, "opendp.transformations.then_resize"]], "then_stable_expr() (in module opendp.transformations)": [[19, "opendp.transformations.then_stable_expr"]], "then_stable_lazyframe() (in module opendp.transformations)": [[19, "opendp.transformations.then_stable_lazyframe"]], "then_sum() (in module opendp.transformations)": [[19, "opendp.transformations.then_sum"]], "then_sum_of_squared_deviations() (in module opendp.transformations)": [[19, "opendp.transformations.then_sum_of_squared_deviations"]], "then_unordered() (in module opendp.transformations)": [[19, "opendp.transformations.then_unordered"]], "then_variance() (in module opendp.transformations)": [[19, "opendp.transformations.then_variance"]], "carrier (class in opendp.typing)": [[20, "opendp.typing.Carrier"]], "domaindescriptor (class in opendp.typing)": [[20, "opendp.typing.DomainDescriptor"]], "runtimetype (class in opendp.typing)": [[20, "opendp.typing.RuntimeType"]], "sensitivitymetric (class in opendp.typing)": [[20, "opendp.typing.SensitivityMetric"]], "args (opendp.typing.runtimetype attribute)": [[20, "opendp.typing.RuntimeType.args"]], "get_atom() (in module opendp.typing)": [[20, "opendp.typing.get_atom"]], "get_atom_or_infer() (in module opendp.typing)": [[20, "opendp.typing.get_atom_or_infer"]], "get_carrier_type() (in module opendp.typing)": [[20, "opendp.typing.get_carrier_type"]], "get_distance_type() (in module opendp.typing)": [[20, "opendp.typing.get_distance_type"]], "get_first() (in module opendp.typing)": [[20, "opendp.typing.get_first"]], "get_type() (in module opendp.typing)": [[20, "opendp.typing.get_type"]], "get_value_type() (in module opendp.typing)": [[20, "opendp.typing.get_value_type"]], "infer() (opendp.typing.runtimetype class method)": [[20, "opendp.typing.RuntimeType.infer"]], "opendp.typing": [[20, "module-opendp.typing"]], "origin (opendp.typing.runtimetype attribute)": [[20, "opendp.typing.RuntimeType.origin"]], "parse() (opendp.typing.runtimetype class method)": [[20, "opendp.typing.RuntimeType.parse"]], "parse_or_infer() (in module opendp.typing)": [[20, "opendp.typing.parse_or_infer"]], "parse_or_infer() (opendp.typing.runtimetype class method)": [[20, "opendp.typing.RuntimeType.parse_or_infer"]], "pass_through() (in module opendp.typing)": [[20, "opendp.typing.pass_through"]], "set_default_float_type() (in module opendp.typing)": [[20, "opendp.typing.set_default_float_type"]], "set_default_int_type() (in module opendp.typing)": [[20, "opendp.typing.set_default_int_type"]], "substitute() (opendp.typing.runtimetype method)": [[20, "opendp.typing.RuntimeType.substitute"]]}})
Search.setIndex({"docnames": ["api/index", "api/python/index", "api/python/opendp", "api/python/opendp.accuracy", "api/python/opendp.combinators", "api/python/opendp.context", "api/python/opendp.core", "api/python/opendp.domains", "api/python/opendp.extras", "api/python/opendp.extras.examples", "api/python/opendp.extras.mbi", "api/python/opendp.extras.numpy", "api/python/opendp.extras.numpy.canonical", "api/python/opendp.extras.polars", "api/python/opendp.extras.polars.contingency_table", "api/python/opendp.extras.sklearn", "api/python/opendp.extras.sklearn.decomposition", "api/python/opendp.extras.sklearn.linear_model", "api/python/opendp.measurements", "api/python/opendp.measures", "api/python/opendp.metrics", "api/python/opendp.mod", "api/python/opendp.prelude", "api/python/opendp.transformations", "api/python/opendp.typing", "api/user-guide/combinators/adaptive-composition", "api/user-guide/combinators/amplification", "api/user-guide/combinators/chaining", "api/user-guide/combinators/compositor-chaining-and-nesting", "api/user-guide/combinators/fully-adaptive-composition", "api/user-guide/combinators/index", "api/user-guide/combinators/measure-casting", "api/user-guide/combinators/non-adaptive-composition", "api/user-guide/combinators/privacy-filters", "api/user-guide/context/index", "api/user-guide/index", "api/user-guide/limitations", "api/user-guide/measurements/additive-noise-mechanisms", "api/user-guide/measurements/canonical-noise-mechanism", "api/user-guide/measurements/index", "api/user-guide/measurements/randomized-response", "api/user-guide/measurements/thresholded-noise-mechanisms", "api/user-guide/plugins/context-api-plugins", "api/user-guide/plugins/index", "api/user-guide/plugins/measurement", "api/user-guide/plugins/selecting-grouping-columns", "api/user-guide/plugins/theil-sen-regression", "api/user-guide/plugins/transformation", "api/user-guide/polars/bounds", "api/user-guide/polars/data-types", "api/user-guide/polars/expressions/aggregation", "api/user-guide/polars/expressions/boolean", "api/user-guide/polars/expressions/columns", "api/user-guide/polars/expressions/index", "api/user-guide/polars/expressions/manipulation", "api/user-guide/polars/expressions/operators", "api/user-guide/polars/expressions/string", "api/user-guide/polars/expressions/temporal", "api/user-guide/polars/gaussian-noise", "api/user-guide/polars/index", "api/user-guide/polars/polars-vs-opendp", "api/user-guide/programming-framework/core-structures", "api/user-guide/programming-framework/index", "api/user-guide/programming-framework/supporting-elements", "api/user-guide/transformations/aggregation-mean", "api/user-guide/transformations/aggregation-quantile", "api/user-guide/transformations/aggregation-sum", "api/user-guide/transformations/index", "api/user-guide/transformations/preprocess-resize", "api/user-guide/utilities/index", "api/user-guide/utilities/parameter-search", "api/user-guide/utilities/serialization", "api/user-guide/utilities/typing", "contributing/cla", "contributing/contact", "contributing/contribution-process", "contributing/development-environment", "contributing/getting-involved", "contributing/index", "contributing/proof-initiation", "contributing/rust-initiation", "getting-started/examples/index", "getting-started/index", "getting-started/next-steps", "getting-started/quickstart", "getting-started/statistical-modeling/index", "getting-started/statistical-modeling/linear-regression", "getting-started/statistical-modeling/pca", "getting-started/statistical-modeling/synthetic-data", "getting-started/tabular-data/contingency-tables", "getting-started/tabular-data/essential-statistics", "getting-started/tabular-data/grouping", "getting-started/tabular-data/identifier-truncation", "getting-started/tabular-data/index", "getting-started/tabular-data/preparing-microdata", "getting-started/typical-workflow", "getting-started/utility", "index", "theory/a-framework-to-understand-dp", "theory/accuracy-pitfalls", "theory/attacks/differencing", "theory/attacks/index", "theory/attacks/membership", "theory/attacks/reconstruction", "theory/dp-with-opendp", "theory/index", "theory/mechanisms/exponential-mechanism-quantiles", "theory/mechanisms/index", "theory/resources"], "filenames": ["api/index.rst", "api/python/index.rst", "api/python/opendp.rst", "api/python/opendp.accuracy.rst", "api/python/opendp.combinators.rst", "api/python/opendp.context.rst", "api/python/opendp.core.rst", "api/python/opendp.domains.rst", "api/python/opendp.extras.rst", "api/python/opendp.extras.examples.rst", "api/python/opendp.extras.mbi.rst", "api/python/opendp.extras.numpy.rst", "api/python/opendp.extras.numpy.canonical.rst", "api/python/opendp.extras.polars.rst", "api/python/opendp.extras.polars.contingency_table.rst", "api/python/opendp.extras.sklearn.rst", "api/python/opendp.extras.sklearn.decomposition.rst", "api/python/opendp.extras.sklearn.linear_model.rst", "api/python/opendp.measurements.rst", "api/python/opendp.measures.rst", "api/python/opendp.metrics.rst", "api/python/opendp.mod.rst", "api/python/opendp.prelude.rst", "api/python/opendp.transformations.rst", "api/python/opendp.typing.rst", "api/user-guide/combinators/adaptive-composition.rst", "api/user-guide/combinators/amplification.rst", "api/user-guide/combinators/chaining.rst", "api/user-guide/combinators/compositor-chaining-and-nesting.rst", "api/user-guide/combinators/fully-adaptive-composition.rst", "api/user-guide/combinators/index.rst", "api/user-guide/combinators/measure-casting.rst", "api/user-guide/combinators/non-adaptive-composition.rst", "api/user-guide/combinators/privacy-filters.rst", "api/user-guide/context/index.rst", "api/user-guide/index.rst", "api/user-guide/limitations.rst", "api/user-guide/measurements/additive-noise-mechanisms.ipynb", "api/user-guide/measurements/canonical-noise-mechanism.ipynb", "api/user-guide/measurements/index.rst", "api/user-guide/measurements/randomized-response.rst", "api/user-guide/measurements/thresholded-noise-mechanisms.ipynb", "api/user-guide/plugins/context-api-plugins.rst", "api/user-guide/plugins/index.rst", "api/user-guide/plugins/measurement.rst", "api/user-guide/plugins/selecting-grouping-columns.rst", "api/user-guide/plugins/theil-sen-regression.ipynb", "api/user-guide/plugins/transformation.rst", "api/user-guide/polars/bounds.rst", "api/user-guide/polars/data-types.ipynb", "api/user-guide/polars/expressions/aggregation.ipynb", "api/user-guide/polars/expressions/boolean.rst", "api/user-guide/polars/expressions/columns.ipynb", "api/user-guide/polars/expressions/index.rst", "api/user-guide/polars/expressions/manipulation.ipynb", "api/user-guide/polars/expressions/operators.ipynb", "api/user-guide/polars/expressions/string.ipynb", "api/user-guide/polars/expressions/temporal.ipynb", "api/user-guide/polars/gaussian-noise.rst", "api/user-guide/polars/index.rst", "api/user-guide/polars/polars-vs-opendp.rst", "api/user-guide/programming-framework/core-structures.rst", "api/user-guide/programming-framework/index.rst", "api/user-guide/programming-framework/supporting-elements.rst", "api/user-guide/transformations/aggregation-mean.rst", "api/user-guide/transformations/aggregation-quantile.ipynb", "api/user-guide/transformations/aggregation-sum.ipynb", "api/user-guide/transformations/index.rst", "api/user-guide/transformations/preprocess-resize.ipynb", "api/user-guide/utilities/index.rst", "api/user-guide/utilities/parameter-search.rst", "api/user-guide/utilities/serialization.rst", "api/user-guide/utilities/typing.rst", "contributing/cla.rst", "contributing/contact.rst", "contributing/contribution-process.rst", "contributing/development-environment.rst", "contributing/getting-involved.rst", "contributing/index.rst", "contributing/proof-initiation.rst", "contributing/rust-initiation.rst", "getting-started/examples/index.rst", "getting-started/index.rst", "getting-started/next-steps.rst", "getting-started/quickstart.rst", "getting-started/statistical-modeling/index.rst", "getting-started/statistical-modeling/linear-regression.rst", "getting-started/statistical-modeling/pca.rst", "getting-started/statistical-modeling/synthetic-data.rst", "getting-started/tabular-data/contingency-tables.rst", "getting-started/tabular-data/essential-statistics.rst", "getting-started/tabular-data/grouping.ipynb", "getting-started/tabular-data/identifier-truncation.rst", "getting-started/tabular-data/index.rst", "getting-started/tabular-data/preparing-microdata.rst", "getting-started/typical-workflow.rst", "getting-started/utility.rst", "index.rst", "theory/a-framework-to-understand-dp.ipynb", "theory/accuracy-pitfalls.ipynb", "theory/attacks/differencing.ipynb", "theory/attacks/index.rst", "theory/attacks/membership.ipynb", "theory/attacks/reconstruction.ipynb", "theory/dp-with-opendp.rst", "theory/index.rst", "theory/mechanisms/exponential-mechanism-quantiles.ipynb", "theory/mechanisms/index.rst", "theory/resources.rst"], "titles": ["API", "Python API Documentation", "opendp package", "opendp.accuracy module", "opendp.combinators module", "opendp.context module", "opendp.core module", "opendp.domains module", "opendp.extras package", "opendp.extras.examples package", "opendp.extras.mbi package", "opendp.extras.numpy package", "opendp.extras.numpy.canonical module", "opendp.extras.polars package", "opendp.extras.polars.contingency_table module", "opendp.extras.sklearn package", "opendp.extras.sklearn.decomposition package", "opendp.extras.sklearn.linear_model package", "opendp.measurements module", "opendp.measures module", "opendp.metrics module", "opendp.mod module", "opendp.prelude module", "opendp.transformations module", "opendp.typing module", "Adaptive Composition", "Amplification", "Chaining", "Compositor Chaining and Nesting", "Fully Adaptive Composition and Odometers", "Combinators", "Measure Casting", "(Non-Adaptive) Composition", "Privacy Filters", "Context", "API User Guide", "Limitations", "Additive Noise Mechanisms", "Canonical Noise Mechanism", "Measurements", "Randomized Response", "Thresholded Noise Mechanisms", "Context API Plugins", "Plugins", "Measurement example", "Privately Selecting Grouping Columns", "Thiel-Sen Regression", "Transformation example", "Identifier Truncation and Bounds", "Data Types", "Aggregation", "Boolean", "Columns", "Expressions", "Manipulation", "Operators", "String", "Temporal", "Gaussian Noise", "Polars", "Polars vs. OpenDP", "Core Structures", "Programming Framework", "Supporting Elements", "Aggregation: Mean", "Aggregation: Quantile", "Aggregation: Sum", "Transformations", "Preprocessing: Resize", "Utilities", "Parameter Search", "Serialization", "Typing", "Contributor License Agreement", "Contact", "Contribution Process", "Development Environment", "Getting Involved", "Contributing", "OpenDP Proof Initiation", "OpenDP Rust Initiation", "More Examples", "Getting Started", "Next Steps", "Quickstart", "Statistical Modeling", "Linear Regression", "Differentially Private PCA", "Synthetic Data", "Contingency Tables", "Essential Statistics", "Grouping", "Identifier Truncation", "Working with Tabular Data", "Preparing Microdata", "Typical Workflow", "Assessing Utility", "Welcome", "A Framework to Understand DP", "Accuracy: Pitfalls and Edge Cases", "Differencing Attack", "Attacks", "Membership", "Reconstruction", "Differential Privacy with OpenDP", "Theory", "Exponential Mechanism Quantiles", "Mechanisms", "Resources List"], "terms": {"content": [0, 3, 4, 5, 6, 7, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 47, 48, 51, 53, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 101, 104, 105, 107, 108], "If": [0, 3, 4, 5, 7, 10, 13, 16, 17, 18, 21, 23, 24, 26, 37, 38, 39, 43, 45, 46, 54, 59, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 89, 90, 91, 92, 93, 97, 98, 99, 102, 103, 104], "you": [0, 3, 4, 13, 17, 19, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 104], "re": [0, 17, 50, 61, 62, 65, 76, 80, 83, 90, 91, 97, 98, 100, 103, 104], "new": [0, 4, 5, 7, 17, 20, 21, 25, 27, 30, 45, 46, 54, 65, 71, 76, 77, 79, 80, 84, 90, 92, 94, 97, 98, 100, 102, 103, 104, 106], "opendp": [0, 1, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 108], "pleas": [0, 32, 36, 37, 40, 41, 59, 64, 65, 66, 71, 73, 75, 77, 78, 80, 83, 87, 90, 104], "go": [0, 29, 50, 79, 91, 104], "back": [0, 49, 69, 75, 80, 91], "get": [0, 3, 6, 7, 19, 20, 21, 22, 24, 26, 28, 38, 46, 49, 50, 54, 59, 62, 63, 65, 68, 75, 78, 79, 80, 84, 88, 89, 90, 91, 94, 97, 98, 99, 100, 105, 106], "start": [0, 5, 10, 13, 18, 22, 34, 38, 40, 46, 50, 52, 59, 65, 67, 70, 75, 76, 77, 78, 79, 80, 84, 88, 89, 90, 97, 100, 104, 105], "interest": [0, 5, 17, 32, 37, 40, 41, 48, 62, 64, 65, 66, 68, 73, 76, 78, 83, 87, 90, 93, 94, 98, 100, 104], "theori": [0, 82, 96, 97], "behind": [0, 4, 60, 62, 104], "differenti": [0, 4, 6, 9, 12, 13, 16, 18, 19, 21, 23, 25, 28, 35, 36, 39, 43, 46, 49, 53, 58, 60, 61, 62, 63, 65, 67, 68, 70, 76, 82, 85, 88, 90, 91, 93, 94, 95, 98, 99, 101, 105, 106], "privaci": [0, 4, 5, 6, 9, 10, 12, 13, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 43, 44, 46, 47, 49, 50, 53, 54, 58, 60, 61, 62, 64, 65, 67, 68, 70, 72, 75, 76, 79, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 96, 101, 105], "how": [0, 3, 4, 5, 10, 13, 17, 18, 21, 23, 27, 32, 36, 38, 41, 45, 46, 50, 58, 60, 63, 66, 68, 70, 75, 76, 79, 83, 84, 88, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 106, 108], "implement": [0, 10, 16, 17, 18, 19, 21, 36, 38, 41, 43, 56, 62, 66, 67, 77, 79, 80, 84, 90, 97, 102], "feel": [0, 24, 36, 77, 80], "free": [0, 69, 70, 76, 77, 80], "jump": 0, "ahead": [0, 33, 91], "document": [0, 3, 4, 5, 6, 7, 13, 17, 18, 19, 20, 23, 24, 37, 38, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 70, 75, 79, 80, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 96, 97, 104], "entri": [0, 18, 23, 43, 75, 103, 104], "point": [0, 10, 17, 18, 21, 25, 27, 28, 35, 36, 46, 54, 67, 68, 70, 76, 79, 87, 90, 91, 95, 98, 102, 103, 104, 107, 108], "user": [0, 3, 4, 5, 6, 7, 13, 16, 18, 19, 20, 21, 23, 24, 37, 40, 41, 43, 44, 45, 47, 48, 50, 53, 62, 63, 71, 75, 76, 80, 81, 83, 88, 89, 92, 93, 94, 95, 97, 98, 104], "guid": [0, 3, 4, 5, 6, 7, 13, 18, 19, 20, 23, 24, 37, 41, 53, 72, 78, 80, 81, 83, 92, 93, 94, 104], "python": [0, 4, 5, 8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 42, 43, 44, 45, 47, 48, 49, 58, 60, 63, 64, 67, 70, 71, 72, 77, 79, 80, 82, 84, 87, 89, 90, 92, 93, 94, 95, 96, 97, 104], "refer": [0, 6, 17, 18, 22, 30, 34, 35, 39, 46, 49, 53, 61, 63, 67, 72, 79, 80, 82, 86, 90, 91, 93, 95, 96, 97, 98, 102, 104], "r": [0, 8, 25, 28, 29, 30, 32, 33, 35, 45, 54, 56, 57, 79, 80, 82, 84, 89, 93, 95, 97, 98, 103], "rust": [0, 3, 4, 5, 6, 7, 8, 18, 19, 20, 21, 23, 24, 35, 36, 43, 49, 67, 72, 77, 78, 79, 82, 84, 89, 93, 97], "packag": [1, 3, 4, 6, 7, 18, 19, 20, 21, 23, 76, 84, 89, 93, 104], "subpackag": 1, "extra": [1, 2, 38, 53, 60, 62, 79, 86, 88, 89, 99], "submodul": [1, 8, 15, 22], "accuraci": [1, 2, 10, 13, 17, 21, 22, 23, 39, 46, 58, 68, 70, 89, 90, 91, 95, 103, 105], "modul": [1, 49, 56, 69, 72, 76, 77, 80, 84, 104], "combin": [1, 2, 10, 13, 22, 26, 27, 28, 31, 33, 35, 38, 45, 46, 61, 63, 67, 83, 87, 89, 91, 100], "context": [1, 2, 3, 4, 6, 7, 10, 13, 18, 19, 20, 21, 22, 23, 24, 35, 38, 43, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 72, 73, 76, 79, 81, 84, 88, 89, 90, 91, 92, 94, 95, 98, 100], "core": [1, 2, 3, 4, 7, 18, 19, 20, 21, 23, 39, 63, 77, 80, 97], "domain": [1, 2, 4, 5, 6, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 39, 40, 41, 42, 43, 45, 48, 49, 51, 54, 58, 61, 62, 64, 65, 67, 68, 71, 72, 80, 84, 90, 91, 93, 95, 98, 104], "measur": [1, 2, 3, 4, 5, 6, 10, 12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 40, 41, 42, 43, 45, 62, 66, 67, 68, 70, 71, 72, 76, 79, 84, 87, 89, 90, 95, 98, 99, 104, 106], "metric": [1, 2, 4, 5, 6, 16, 18, 19, 21, 22, 23, 24, 25, 27, 30, 32, 37, 39, 40, 41, 42, 43, 58, 61, 62, 65, 66, 72, 79, 80, 84, 98, 104], "mod": [1, 2, 5, 22, 24, 27, 28, 33, 63, 70, 79, 80], "prelud": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 32, 34, 35, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 70, 72, 80, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100, 102, 103, 104, 106], "transform": [1, 2, 4, 5, 6, 7, 10, 13, 21, 22, 27, 28, 30, 35, 36, 42, 43, 45, 50, 53, 54, 62, 63, 64, 65, 66, 68, 69, 70, 72, 76, 79, 88, 89, 98, 106], "type": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 27, 37, 39, 41, 44, 45, 50, 51, 54, 56, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 80, 88, 90, 98, 100, 104], "exampl": [2, 3, 4, 5, 7, 8, 10, 13, 17, 18, 19, 21, 22, 23, 24, 27, 28, 33, 38, 39, 41, 42, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 70, 72, 75, 76, 77, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 108], "mbi": [2, 8, 76, 88, 89], "numpi": [2, 4, 8, 18, 37, 38, 40, 46, 65, 68, 72, 87, 98, 99, 100, 102, 103, 106], "polar": [2, 3, 5, 7, 8, 10, 18, 21, 23, 35, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 76, 81, 83, 85, 88, 89, 90, 91, 92, 93, 94, 99, 100], "sklearn": [2, 8, 86, 87], "accuracy_to_discrete_gaussian_scal": [2, 3], "accuracy_to_discrete_laplacian_scal": [2, 3], "accuracy_to_gaussian_scal": [2, 3, 39, 96], "accuracy_to_laplacian_scal": [2, 3, 21, 39, 96], "discrete_gaussian_scale_to_accuraci": [2, 3], "discrete_laplacian_scale_to_accuraci": [2, 3, 95], "gaussian_scale_to_accuraci": [2, 3, 10, 39, 89, 96], "laplacian_scale_to_accuraci": [2, 3, 39, 96, 99], "summarize_polars_measur": [2, 3], "make_adaptive_composit": [2, 4, 21, 25, 28, 30, 95], "make_approxim": [2, 4, 28, 31], "make_basic_composit": [2, 4], "make_chain_mt": [2, 4, 27, 30], "make_chain_pm": [2, 4, 27, 30], "make_chain_tt": [2, 4, 27, 30], "make_composit": [2, 4, 22, 30, 32, 33, 46, 64, 65], "make_fix_delta": [2, 4, 21, 28, 31, 41, 103], "make_fixed_approxdp_to_approxdp": [2, 4, 31], "make_fully_adaptive_composit": [2, 4, 21, 29, 30, 33], "make_population_amplif": [2, 4, 26], "make_privacy_filt": [2, 4, 33], "make_puredp_to_zcdp": [2, 4, 31], "make_select_private_candid": [2, 4], "make_sequential_composit": [2, 4], "make_zcdp_to_approxdp": [2, 4, 21, 28, 31, 41, 103], "then_adaptive_composit": [2, 4, 28], "then_fully_adaptive_composit": [2, 4], "then_sequential_composit": [2, 4], "account": [2, 5, 6, 10, 26, 37, 41, 42, 48, 54, 60, 66, 67, 68, 77, 90, 91, 95, 98, 104, 106], "compositor": [2, 4, 5, 10, 13, 21, 25, 30, 32, 34, 38, 42, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 63, 65, 71, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100], "current_privacy_loss": [2, 5], "deserialize_polars_plan": [2, 5, 71], "queri": [2, 3, 4, 5, 6, 10, 12, 13, 14, 21, 25, 28, 29, 30, 32, 33, 34, 37, 38, 39, 42, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 63, 65, 66, 67, 68, 70, 71, 74, 76, 83, 88, 89, 90, 91, 92, 93, 94, 100, 102, 103, 106], "queryabl": [2, 4, 5, 6, 13, 18, 21, 25, 28, 29, 33, 95], "remaining_privacy_loss": [2, 5], "partialchain": [2, 5], "fix": [2, 4, 5, 8, 10, 13, 19, 21, 31, 37, 41, 66, 67, 68, 70, 75, 79, 88, 89, 91, 93, 98, 101, 104], "partial": [2, 4, 5, 18, 23, 76], "wrap": [2, 5, 21, 26, 34, 80], "new_with": [2, 5], "param": [2, 5, 41, 95, 102, 103], "releas": [2, 3, 4, 5, 6, 10, 13, 14, 16, 18, 21, 25, 27, 28, 30, 34, 36, 38, 39, 40, 41, 42, 45, 46, 47, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 71, 75, 79, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108], "resolv": [2, 5, 13, 66, 71, 94, 100], "domain_of": [2, 5], "loss_of": [2, 5, 10, 13, 21, 34, 38, 42, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 65, 71, 88, 89, 90, 91, 92, 93, 94, 95, 100], "metric_of": [2, 5], "regist": [2, 5, 13, 42], "space_of": [2, 5, 21], "unit_of": [2, 5, 10, 13, 34, 38, 42, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 65, 71, 88, 89, 90, 91, 92, 93, 94, 95, 100], "function_ev": [2, 6], "measurement_check": [2, 6], "measurement_funct": [2, 6], "measurement_input_carrier_typ": [2, 6], "measurement_input_distance_typ": [2, 6], "measurement_input_domain": [2, 6], "measurement_input_metr": [2, 6], "measurement_invok": [2, 6], "measurement_map": [2, 6], "measurement_output_distance_typ": [2, 6], "measurement_output_measur": [2, 6], "new_funct": [2, 6, 43], "new_query": [2, 6, 21], "odometer_input_carrier_typ": [2, 6], "odometer_input_domain": [2, 6], "odometer_input_metr": [2, 6], "odometer_invok": [2, 6], "odometer_output_measur": [2, 6], "odometer_queryable_invok": [2, 6], "odometer_queryable_invoke_typ": [2, 6], "odometer_queryable_privacy_loss": [2, 6], "odometer_queryable_privacy_loss_typ": [2, 6], "queryable_ev": [2, 6], "queryable_query_typ": [2, 6], "transformation_check": [2, 6], "transformation_funct": [2, 6], "transformation_input_carrier_typ": [2, 6], "transformation_input_distance_typ": [2, 6], "transformation_input_domain": [2, 6], "transformation_input_metr": [2, 6], "transformation_invok": [2, 6], "transformation_map": [2, 6], "transformation_output_distance_typ": [2, 6], "transformation_output_domain": [2, 6], "transformation_output_metr": [2, 6], "array_domain": [2, 7], "atom_domain": [2, 3, 4, 5, 7, 18, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 41, 42, 44, 45, 46, 47, 63, 64, 65, 66, 67, 68, 70, 71, 72, 80, 84, 95, 102, 103, 104, 106], "bitvector_domain": [2, 7, 18], "categorical_domain": [2, 7], "datetime_domain": [2, 7], "domain_carrier_typ": [2, 7], "domain_debug": [2, 7], "domain_typ": [2, 7], "enum_domain": [2, 7], "lazyframe_domain": [2, 3, 7, 18, 21], "map_domain": [2, 7, 41], "option_domain": [2, 7, 21, 23], "series_domain": [2, 3, 7, 18, 21], "user_domain": [2, 5, 7, 43, 45, 71], "vector_domain": [2, 5, 7, 18, 21, 23, 25, 26, 27, 28, 29, 32, 33, 37, 44, 45, 46, 47, 63, 64, 65, 66, 67, 68, 70, 71, 80, 95, 102, 103, 104, 106], "wild_expr_domain": [2, 7], "with_margin": [2, 3, 7, 18], "debias_randomized_response_bitvec": [2, 18], "make_alp_query": [2, 18], "make_canonical_nois": [2, 12, 18, 39], "make_gaussian": [2, 18, 37, 39, 67, 70, 96], "make_gaussian_threshold": [2, 18, 39, 41], "make_geometr": [2, 18, 39], "make_laplac": [2, 18, 21, 27, 37, 39, 67, 96, 104], "make_laplace_threshold": [2, 18, 39, 41, 67, 96], "make_nois": [2, 18], "make_noise_threshold": [2, 18], "make_noisy_max": [2, 18, 39, 106], "make_noisy_top_k": [2, 18, 39], "make_private_expr": [2, 18], "make_private_lazyfram": [2, 3, 13, 18], "make_private_quantil": [2, 18, 65], "make_randomized_respons": [2, 18, 39, 40], "make_randomized_response_bitvec": [2, 18], "make_randomized_response_bool": [2, 18, 21, 39, 40], "make_report_noisy_max_gumbel": [2, 18], "make_user_measur": [2, 18, 42, 43, 44], "then_alp_query": [2, 18], "then_canonical_nois": [2, 18, 38], "then_gaussian": [2, 18, 21, 28, 31, 70, 103], "then_gaussian_threshold": [2, 18], "then_geometr": [2, 18], "then_laplac": [2, 18, 21, 22, 25, 26, 28, 29, 31, 32, 33, 47, 64, 65, 68, 84, 95, 99, 102, 104], "then_laplace_threshold": [2, 18], "then_nois": [2, 18], "then_noise_threshold": [2, 18], "then_noisy_max": [2, 18, 45, 106], "then_noisy_top_k": [2, 18], "then_private_expr": [2, 18], "then_private_lazyfram": [2, 18], "then_private_quantil": [2, 18, 46, 106], "then_randomized_response_bitvec": [2, 18], "then_report_noisy_max_gumbel": [2, 18], "then_user_measur": [2, 4, 18], "approxim": [2, 4, 5, 10, 12, 13, 18, 19, 23, 25, 28, 31, 39, 41, 58, 63, 65, 89, 98, 99, 103, 106], "fixed_smoothed_max_diverg": [2, 19], "max_diverg": [2, 3, 4, 17, 18, 19, 25, 28, 29, 33, 42, 44, 45, 46, 65, 95, 104, 106], "measure_debug": [2, 19], "measure_distance_typ": [2, 19], "measure_typ": [2, 19], "new_privacy_profil": [2, 19, 21, 43], "renyi_diverg": [2, 19], "smoothed_max_diverg": [2, 19], "user_diverg": [2, 19, 43], "zero_concentrated_diverg": [2, 19, 28, 106], "absolute_dist": [2, 4, 18, 20, 21, 31, 37, 38, 41, 42, 44, 70, 79, 84, 104], "change_one_dist": [2, 20], "change_one_id_dist": [2, 20], "discrete_dist": [2, 18, 20], "frame_dist": [2, 20], "hamming_dist": [2, 20], "insert_delete_dist": [2, 20, 66], "l01inf_dist": [2, 20, 41], "l02inf_dist": [2, 20, 41], "l1_distanc": [2, 18, 20, 37, 102], "l2_distanc": [2, 18, 20, 37], "linf_dist": [2, 18, 20, 45, 106], "metric_debug": [2, 20], "metric_distance_typ": [2, 20], "metric_typ": [2, 20], "symmetric_dist": [2, 3, 5, 16, 18, 20, 21, 25, 26, 27, 28, 29, 32, 33, 44, 45, 46, 47, 63, 64, 65, 66, 67, 68, 70, 80, 95, 102, 103, 104, 106], "symmetric_id_dist": [2, 20], "user_dist": [2, 20, 43], "approximatediverg": [2, 19, 21], "inner_measur": [2, 21], "atomdomain": [2, 5, 7, 18, 21, 23, 27, 32, 37, 39, 40, 41, 63, 66, 67, 72, 80, 84, 104], "bound": [2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 33, 39, 49, 54, 59, 61, 62, 63, 64, 65, 66, 68, 70, 72, 79, 80, 87, 89, 90, 92, 93, 94, 95, 98, 99, 102, 103, 104], "nan": [2, 4, 7, 11, 18, 19, 21, 23, 26, 31, 37, 38, 41, 45, 49, 51, 63, 67, 68, 70, 84, 90, 95, 102, 104, 106], "changeoneiddist": [2, 20, 21], "identifi": [2, 5, 7, 13, 20, 21, 59, 62, 67, 77, 79, 82, 89, 93, 102, 103], "carrier_typ": [2, 21], "cast": [2, 4, 13, 21, 23, 30, 39, 48, 52, 56, 65, 72, 80, 90, 91, 92, 94, 99, 100], "member": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 45, 61, 63, 64, 72, 80, 102, 103, 104], "extrinsicdomain": [2, 5, 21], "descriptor": [2, 5, 7, 13, 19, 20, 21, 24, 49, 50, 51, 54, 58, 63, 68, 72, 90, 91, 94], "framedist": [2, 10, 21], "inner_metr": [2, 20, 21], "function": [2, 3, 4, 5, 6, 7, 10, 13, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 32, 37, 39, 40, 41, 42, 44, 45, 46, 47, 51, 57, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 76, 80, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104], "lazyframedomain": [2, 7, 10, 18, 21, 23], "column": [2, 3, 5, 7, 9, 10, 11, 13, 18, 21, 23, 38, 43, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 88, 89, 90, 91, 92, 93, 99, 102, 103], "get_margin": [2, 21], "get_series_domain": [2, 21], "distance_typ": [2, 21], "check": [2, 6, 7, 21, 23, 24, 26, 27, 29, 42, 54, 63, 64, 66, 67, 70, 75, 76, 77, 80, 103, 104], "input_carrier_typ": [2, 21], "input_distance_typ": [2, 21], "input_domain": [2, 4, 5, 10, 16, 18, 21, 23, 25, 27, 28, 29, 32, 33, 37, 42, 44, 45, 46, 47, 61, 63, 64, 66, 68, 80, 95, 96, 102, 104], "input_metr": [2, 4, 5, 10, 16, 18, 21, 23, 25, 28, 29, 32, 33, 37, 42, 44, 45, 46, 47, 61, 63, 66, 68, 80, 95, 96, 104], "input_spac": [2, 18, 21, 25, 26, 28, 29, 31, 32, 33, 37, 41, 64, 65, 66, 68, 70, 103, 106], "invok": [2, 4, 6, 19, 21, 25, 27, 28, 29, 33, 37, 40, 41, 61, 63, 80, 84, 104], "map": [2, 4, 6, 10, 13, 18, 19, 21, 23, 25, 27, 28, 31, 32, 37, 40, 41, 44, 45, 46, 47, 61, 62, 64, 66, 67, 68, 70, 79, 80, 95, 99, 102, 103, 104, 106], "output_distance_typ": [2, 21], "output_measur": [2, 4, 5, 10, 17, 18, 21, 25, 28, 29, 32, 33, 42, 44, 46, 61, 63, 80, 95, 104], "odomet": [2, 4, 5, 6, 21, 30, 33], "odometerquery": [2, 4, 5, 21], "privacy_loss": [2, 5, 10, 13, 21, 29, 33, 34, 38, 42, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 65, 71, 88, 89, 90, 91, 92, 93, 94, 95, 100], "opendpexcept": [2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 23, 27, 28, 33, 49, 56], "raw_traceback": [2, 21], "optiondomain": [2, 5, 7, 21, 23, 67], "element_domain": [2, 7, 21], "privacyprofil": [2, 19, 21], "delta": [2, 4, 5, 10, 19, 21, 23, 28, 31, 37, 38, 39, 40, 41, 48, 49, 54, 55, 56, 57, 58, 61, 63, 88, 89, 91, 92, 94, 98, 102, 103, 104], "epsilon": [2, 5, 13, 16, 18, 19, 21, 26, 27, 31, 34, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 68, 71, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 106], "seriesdomain": [2, 7, 21], "name": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 35, 52, 60, 67, 68, 72, 75, 76, 79, 80, 98, 99, 100, 103, 104], "nullabl": [2, 18, 21], "symmetriciddist": [2, 20, 21], "output_domain": [2, 21, 23, 27, 45, 46, 47, 61, 63, 66, 80, 98], "output_metr": [2, 21, 23, 27, 45, 46, 47, 61, 63, 66, 67, 80], "output_spac": [2, 21, 65], "unknowntypeexcept": [2, 3, 4, 6, 7, 18, 19, 20, 21, 23, 24], "vectordomain": [2, 5, 7, 18, 21, 23, 32, 39, 63, 66, 67, 80], "size": [2, 4, 7, 9, 11, 12, 13, 16, 18, 21, 23, 26, 38, 40, 45, 46, 54, 63, 65, 67, 70, 80, 81, 87, 89, 90, 91, 94, 95, 98, 99, 102, 103, 106], "assert_featur": [2, 21, 45], "binary_search": [2, 21, 70, 103], "binary_search_chain": [2, 21, 65, 68, 70, 95], "binary_search_param": [2, 21, 28, 70, 99, 102], "deseri": [2, 21, 71], "disable_featur": [2, 21], "enable_featur": [2, 3, 4, 10, 17, 18, 19, 21, 22, 26, 27, 32, 35, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 70, 80, 84, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 102, 103, 104, 106], "exponential_bounds_search": [2, 21, 70], "serial": [2, 5, 21, 69], "choose_branching_factor": [2, 23, 65], "make_b_ary_tre": [2, 23, 67], "make_bounded_float_checked_sum": [2, 23, 66, 67], "make_bounded_float_ordered_sum": [2, 23, 67], "make_bounded_int_monotonic_sum": [2, 23, 67], "make_bounded_int_ordered_sum": [2, 23, 66, 67], "make_bounded_int_split_sum": [2, 23, 67], "make_cast": [2, 23, 27, 67], "make_cast_default": [2, 23, 65, 67, 80], "make_cast_inher": [2, 23, 67], "make_cdf": [2, 23], "make_clamp": [2, 23, 27, 63, 67, 95, 104], "make_consistent_b_ary_tre": [2, 23, 65, 67], "make_count": [2, 23, 67, 95], "make_count_bi": [2, 23, 67], "make_count_by_categori": [2, 21, 23, 67], "make_count_distinct": [2, 23, 67], "make_create_datafram": [2, 23], "make_df_cast_default": [2, 23], "make_df_is_equ": [2, 23], "make_drop_nul": [2, 23, 65, 67], "make_find": [2, 23, 67], "make_find_bin": [2, 23, 67], "make_ident": [2, 23], "make_impute_const": [2, 23, 27, 67, 95], "make_impute_uniform_float": [2, 23, 67], "make_index": [2, 23, 67], "make_is_equ": [2, 23, 67], "make_is_nul": [2, 23, 67], "make_lipschitz_float_mul": [2, 23], "make_mean": [2, 21, 23, 64, 67, 70, 102], "make_metric_bound": [2, 23, 67], "make_metric_unbound": [2, 23, 67], "make_ordered_random": [2, 23, 67], "make_quantile_score_candid": [2, 23, 106], "make_quantiles_from_count": [2, 23, 65, 67], "make_res": [2, 23, 27, 67], "make_select_column": [2, 23, 46, 99], "make_sized_bounded_float_checked_sum": [2, 23, 66, 67], "make_sized_bounded_float_ordered_sum": [2, 23, 67], "make_sized_bounded_int_checked_sum": [2, 23, 66, 67], "make_sized_bounded_int_monotonic_sum": [2, 23, 67], "make_sized_bounded_int_ordered_sum": [2, 23, 67], "make_sized_bounded_int_split_sum": [2, 23, 67], "make_split_datafram": [2, 23, 99], "make_split_lin": [2, 21, 23], "make_split_record": [2, 23], "make_stable_expr": [2, 23], "make_stable_lazyfram": [2, 23], "make_subset_bi": [2, 23], "make_sum": [2, 21, 23, 27, 63, 64, 66, 67, 70, 104], "make_sum_of_squared_devi": [2, 23], "make_unord": [2, 23, 67], "make_user_transform": [2, 23, 43, 45, 46, 47], "make_vari": [2, 23, 67], "then_b_ary_tre": [2, 23, 65], "then_cast": [2, 23, 99], "then_cast_default": [2, 21, 23, 28, 47], "then_cast_inher": [2, 23], "then_clamp": [2, 21, 23, 25, 28, 29, 32, 33, 47, 64, 68, 95, 99, 104], "then_count": [2, 21, 23, 25, 28, 29, 32, 33, 64, 68, 103], "then_count_bi": [2, 23], "then_count_by_categori": [2, 23, 65], "then_count_distinct": [2, 23], "then_df_cast_default": [2, 23], "then_df_is_equ": [2, 23], "then_drop_nul": [2, 23, 46, 65], "then_find": [2, 23, 67], "then_find_bin": [2, 23, 65], "then_ident": [2, 23], "then_impute_const": [2, 21, 23, 64, 67, 68, 99], "then_impute_uniform_float": [2, 23], "then_index": [2, 23, 65], "then_is_equ": [2, 23], "then_is_nul": [2, 23], "then_lipschitz_float_mul": [2, 23], "then_mean": [2, 21, 23, 26, 64, 68, 95, 99], "then_metric_bound": [2, 23], "then_metric_unbound": [2, 23], "then_ordered_random": [2, 23], "then_quantile_score_candid": [2, 23, 106], "then_res": [2, 21, 23, 64, 68, 95, 99], "then_stable_expr": [2, 23], "then_stable_lazyfram": [2, 23], "then_sum": [2, 21, 22, 23, 25, 28, 29, 32, 33, 44, 47, 64, 66, 68, 104], "then_sum_of_squared_devi": [2, 23], "then_unord": [2, 23], "then_vari": [2, 23], "carrier": [2, 5, 6, 7, 18, 21, 23, 24, 80], "runtimetyp": [2, 11, 24], "arg": [2, 5, 6, 21, 24, 25, 28, 29, 32, 33, 47, 80, 84, 95], "infer": [2, 5, 10, 12, 21, 23, 24, 38, 40, 41, 54, 56, 79, 88, 89, 100, 102], "origin": [2, 9, 10, 11, 21, 23, 24, 63, 68, 70, 91, 97], "pars": [2, 3, 4, 6, 7, 13, 18, 19, 20, 23, 24, 49, 53, 54, 55, 56, 57, 60, 91, 94], "parse_or_inf": [2, 24], "sensitivitymetr": [2, 24], "get_atom": [2, 24], "get_atom_or_inf": [2, 24], "get_carrier_typ": [2, 24], "get_distance_typ": [2, 24], "get_first": [2, 24], "get_typ": [2, 24], "get_value_typ": [2, 24], "pass_through": [2, 24], "set_default_float_typ": [2, 24, 72], "set_default_int_typ": [2, 24, 72], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 58, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 75, 76, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 108], "provid": [3, 4, 5, 6, 7, 13, 18, 19, 20, 21, 22, 23, 24, 27, 28, 35, 38, 40, 43, 62, 63, 65, 67, 70, 79, 80, 85, 87, 90, 91, 95, 96, 98, 99, 102, 103, 104, 108], "convert": [3, 18, 23, 28, 31, 33, 37, 39, 41, 63, 67, 68, 96, 99], "between": [3, 4, 5, 6, 10, 18, 19, 20, 21, 23, 24, 25, 27, 36, 37, 38, 41, 46, 49, 54, 58, 61, 62, 63, 66, 67, 71, 72, 79, 80, 88, 89, 90, 91, 94, 95, 96, 97, 103, 104, 106], "scale": [3, 10, 13, 14, 16, 17, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 37, 41, 45, 46, 48, 50, 54, 58, 60, 62, 65, 66, 68, 70, 84, 89, 90, 91, 92, 94, 95, 96, 98, 99, 102, 103, 104, 106], "paramet": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 28, 31, 33, 37, 39, 40, 41, 46, 54, 63, 64, 68, 69, 72, 79, 90, 91, 92, 93, 98, 100, 103, 106], "For": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 37, 38, 41, 53, 54, 56, 58, 60, 63, 66, 67, 68, 71, 72, 75, 76, 79, 80, 82, 83, 89, 90, 91, 93, 94, 97, 98, 99, 102, 105, 108], "more": [3, 4, 5, 6, 7, 10, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 33, 34, 37, 38, 39, 41, 45, 48, 50, 53, 54, 58, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 76, 77, 79, 80, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106], "see": [3, 4, 5, 6, 7, 10, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 33, 34, 35, 36, 38, 39, 46, 53, 54, 61, 62, 63, 67, 68, 72, 76, 80, 82, 83, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105], "conveni": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 68, 71, 72, 80, 87], "all": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 32, 36, 37, 38, 40, 41, 45, 49, 50, 51, 54, 55, 61, 62, 63, 65, 66, 67, 68, 70, 72, 76, 77, 80, 84, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 106], "thi": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106], "also": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 45, 46, 48, 49, 50, 53, 54, 56, 60, 61, 62, 63, 66, 67, 70, 71, 72, 75, 76, 77, 79, 80, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104], "avail": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 34, 35, 39, 61, 67, 76, 80, 84, 89, 95], "from": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 75, 76, 77, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108], "we": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106], "suggest": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 76, 77, 99], "import": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 32, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106], "under": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 28, 37, 38, 41, 45, 48, 53, 58, 68, 90, 92, 95, 104], "convent": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 42, 68, 75, 80], "dp": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 80, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 105, 106, 108], "alpha": [3, 5, 12, 13, 18, 19, 21, 23, 38, 46, 49, 58, 65, 89, 90, 91, 95, 96, 98, 99, 102, 106], "t": [3, 4, 5, 7, 10, 11, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 54, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 79, 80, 84, 87, 89, 90, 91, 94, 95, 98, 99, 100, 102, 103, 104, 106], "none": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 20, 21, 23, 24, 46, 54, 68, 84, 87, 100, 102, 103], "sourc": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 46, 48, 65, 76, 80, 84, 88, 95], "desir": [3, 62, 90], "toler": 3, "discret": [3, 18, 21, 27, 37, 38, 39, 40, 41, 106], "gaussian": [3, 10, 13, 18, 21, 38, 59, 89, 95, 96, 99, 103, 106], "nois": [3, 10, 12, 13, 14, 17, 18, 21, 23, 34, 46, 48, 50, 54, 59, 62, 65, 67, 68, 70, 76, 84, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108], "statist": [3, 9, 12, 13, 38, 45, 48, 50, 54, 58, 60, 65, 67, 68, 82, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 108], "signific": [3, 12, 13, 38, 48, 76, 77, 90, 96, 102, 108], "level": [3, 12, 13, 21, 28, 34, 38, 39, 40, 41, 48, 54, 62, 63, 65, 67, 80, 84, 87, 90, 91, 95, 96, 97, 98, 99, 100], "proof": [3, 4, 18, 19, 23, 32, 37, 40, 41, 63, 64, 65, 66, 75, 76, 78, 80, 87, 104], "definit": [3, 4, 18, 19, 20, 23, 58, 61, 62, 63, 79, 80, 84, 93, 97], "A": [3, 4, 5, 6, 7, 9, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 38, 40, 42, 45, 49, 50, 52, 61, 62, 63, 65, 66, 67, 72, 75, 76, 79, 80, 87, 89, 90, 93, 95, 97, 100, 102, 103, 104, 105, 108], "far": [3, 21, 37, 66], "valu": [3, 4, 6, 7, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 37, 39, 41, 42, 44, 45, 46, 49, 50, 51, 54, 61, 62, 63, 66, 67, 70, 76, 79, 80, 84, 90, 91, 95, 96, 98, 99, 102, 103], "mai": [3, 4, 5, 7, 10, 13, 21, 23, 24, 25, 30, 32, 36, 37, 40, 41, 44, 47, 48, 49, 50, 51, 52, 54, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 75, 76, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 102, 104], "diverg": [3, 19, 21, 62, 63, 76, 80], "input": [3, 4, 5, 6, 7, 10, 12, 13, 16, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 37, 38, 39, 40, 41, 42, 46, 48, 49, 51, 54, 55, 56, 61, 62, 63, 64, 66, 67, 68, 70, 72, 79, 80, 88, 90, 94, 95, 96, 98, 102, 103, 104], "mechan": [3, 4, 10, 12, 18, 19, 21, 23, 27, 36, 40, 43, 44, 45, 58, 67, 84, 88, 89, 90, 95, 96, 99, 100, 102, 105, 108], "1": [3, 4, 5, 10, 11, 13, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 102, 103, 104, 107], "100": [3, 13, 17, 18, 21, 26, 34, 37, 41, 46, 54, 60, 65, 66, 68, 89, 95, 96, 98, 99, 102, 103], "confid": [3, 10, 12, 13, 21, 89, 90, 91, 96, 98, 102], "must": [3, 4, 5, 6, 7, 13, 18, 19, 20, 21, 23, 24, 25, 28, 36, 37, 40, 41, 49, 54, 60, 67, 70, 76, 79, 80, 89, 91, 92, 94, 98, 104], "within": [3, 5, 19, 21, 23, 28, 36, 38, 62, 67, 76, 79, 91, 97, 98, 99, 102, 103], "0": [3, 4, 5, 10, 12, 13, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106], "argument": [3, 4, 5, 6, 7, 13, 14, 18, 19, 20, 21, 23, 24, 25, 28, 29, 35, 37, 38, 40, 42, 54, 55, 56, 60, 66, 67, 70, 76, 79, 80, 94, 104], "data": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 27, 32, 34, 37, 38, 39, 40, 41, 42, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81, 82, 84, 85, 87, 89, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108], "rais": [3, 4, 6, 7, 13, 16, 17, 18, 19, 20, 21, 23, 24, 34, 49, 54, 60], "typeerror": [3, 4, 6, 7, 18, 19, 20, 21, 23, 37], "an": [3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 79, 80, 82, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105], "": [3, 4, 5, 6, 7, 12, 13, 16, 17, 18, 19, 20, 21, 23, 27, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 50, 58, 61, 62, 63, 66, 68, 70, 75, 76, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 102, 103, 104, 108], "differ": [3, 4, 5, 6, 7, 10, 13, 18, 19, 20, 21, 23, 28, 37, 40, 41, 45, 46, 48, 49, 50, 54, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 75, 76, 79, 80, 89, 90, 91, 93, 95, 96, 98, 99, 102, 104, 105, 106], "expect": [3, 4, 5, 6, 7, 13, 16, 18, 19, 20, 23, 26, 27, 36, 37, 38, 40, 41, 44, 48, 49, 63, 64, 66, 68, 79, 91, 99, 102, 103, 104], "fail": [3, 4, 6, 7, 13, 18, 19, 20, 21, 23, 24, 27, 54, 67, 70, 76, 102], "error": [3, 4, 6, 7, 13, 18, 19, 20, 21, 23, 24, 33, 37, 49, 54, 55, 56, 60, 63, 64, 65, 66, 68, 70, 76, 79, 80, 84, 90, 91, 94, 98, 99], "librari": [3, 4, 6, 7, 10, 13, 18, 19, 20, 21, 23, 24, 28, 32, 35, 36, 37, 39, 41, 42, 44, 45, 46, 47, 50, 52, 54, 58, 62, 63, 66, 67, 70, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 93, 95, 96, 97, 98, 104, 105, 106, 108], "laplacian": [3, 10, 90, 96, 98], "return": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 33, 37, 40, 41, 42, 44, 45, 46, 47, 49, 50, 54, 60, 63, 65, 68, 70, 79, 80, 87, 91, 92, 94, 98, 99, 100, 102, 103, 104, 106], "meet": [3, 48, 50, 89, 96], "requir": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 32, 34, 40, 44, 47, 48, 49, 54, 56, 62, 66, 67, 73, 75, 76, 79, 88, 90, 95], "given": [3, 4, 5, 6, 12, 13, 19, 21, 23, 24, 25, 28, 48, 50, 54, 58, 65, 68, 70, 75, 85, 90, 91, 93, 96, 98, 102, 104], "estim": [3, 10, 12, 13, 16, 18, 23, 25, 29, 33, 38, 39, 40, 48, 50, 58, 64, 67, 68, 87, 88, 90, 91, 92, 96, 99, 100, 102, 103, 108], "p": [3, 11, 12, 18, 40, 46, 99], "y": [3, 16, 17, 18, 19, 20, 37, 46, 56, 57, 68, 91, 102], "ge": [3, 19, 20, 63, 79, 98], "where": [3, 4, 12, 13, 16, 18, 19, 23, 25, 26, 28, 29, 36, 37, 38, 41, 42, 46, 48, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 79, 80, 90, 91, 92, 95, 98, 99, 102, 103, 106], "x": [3, 4, 11, 12, 16, 17, 18, 19, 20, 21, 23, 37, 40, 41, 45, 46, 63, 65, 68, 91, 98, 103, 104], "z": [3, 12, 20, 102], "sim": [3, 19, 68], "mathcal": 3, "l": [3, 11, 39, 45, 54, 64, 65, 66, 67, 98, 104], "_": [3, 4, 16, 19, 38, 40, 42, 45, 46, 60, 65, 71, 95, 99, 100, 103], "That": [3, 10, 19, 25, 35, 37, 41, 46, 64, 76, 89, 97, 98, 106], "i": [3, 4, 5, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 108], "laplac": [3, 4, 10, 13, 18, 21, 27, 34, 38, 39, 48, 50, 52, 54, 58, 60, 62, 71, 72, 84, 90, 91, 92, 94, 95, 96, 98, 99, 102, 108], "random": [3, 4, 12, 17, 18, 23, 45, 46, 48, 61, 62, 63, 65, 66, 87, 95, 97, 98, 102, 103, 106], "variabl": [3, 12, 68, 71, 93, 98, 103], "distribut": [3, 5, 10, 12, 13, 18, 19, 21, 23, 38, 46, 48, 60, 61, 62, 63, 68, 70, 80, 89, 90, 92, 94, 95, 96, 101, 102, 104, 106], "float": [3, 4, 5, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 27, 28, 31, 35, 36, 38, 44, 45, 46, 51, 54, 55, 56, 62, 63, 64, 65, 67, 68, 70, 72, 76, 79, 84, 87, 90, 91, 94, 95, 98, 99, 100, 102, 103, 104, 107, 108], "can": [3, 4, 5, 6, 7, 10, 13, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 106], "take": [3, 6, 10, 18, 21, 23, 25, 26, 27, 28, 32, 36, 42, 48, 49, 50, 58, 62, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 77, 80, 90, 91, 100, 102, 103, 106], "floor": 3, "without": [3, 16, 21, 36, 68, 71, 75, 76, 79, 91, 98, 100, 104], "affect": [3, 18, 48, 88, 90, 98, 103], "coverag": [3, 108], "probabl": [3, 4, 12, 18, 19, 21, 38, 40, 41, 54, 61, 62, 63, 65, 80, 91, 98, 99], "summar": [3, 13, 48, 50, 52, 54, 58, 60, 62, 90, 91, 92, 94], "oncefram": [3, 8, 13, 18, 76], "threshold": [3, 4, 10, 13, 14, 18, 48, 58, 89, 91, 92, 95], "configur": [3, 10, 12, 13, 37, 41, 66, 67, 76, 79, 80, 89, 92, 94, 106], "censor": [3, 13, 45], "small": [3, 10, 13, 14, 23, 37, 38, 40, 41, 45, 50, 58, 63, 65, 66, 68, 70, 80, 89, 91, 95, 98, 100, 102], "sensit": [3, 5, 12, 13, 18, 21, 23, 24, 37, 38, 39, 40, 41, 46, 48, 50, 54, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 79, 89, 90, 91, 93, 95, 100, 104, 106, 108], "group": [3, 5, 7, 8, 10, 13, 14, 18, 20, 21, 43, 48, 49, 50, 51, 54, 55, 57, 65, 75, 82, 89, 90, 93], "includ": [3, 9, 13, 14, 17, 21, 23, 35, 36, 41, 50, 51, 60, 67, 71, 72, 76, 77, 79, 84, 89, 90, 91, 93, 95, 97, 98], "contain": [3, 5, 7, 8, 9, 13, 17, 18, 20, 21, 24, 27, 37, 40, 41, 42, 46, 48, 49, 54, 55, 56, 61, 62, 63, 68, 76, 79, 80, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 104], "cutoff": [3, 13, 14], "respect": [3, 13, 19, 21, 23, 37, 41, 50, 54, 61, 67, 72, 80, 98, 104], "count": [3, 8, 10, 12, 13, 18, 21, 23, 25, 28, 29, 32, 33, 37, 38, 41, 54, 58, 62, 63, 64, 65, 67, 68, 72, 88, 89, 91, 95, 98, 99, 103], "being": [3, 13, 21, 35, 38, 45, 54, 70, 72, 76, 91, 99, 100], "featur": [3, 4, 6, 7, 16, 18, 19, 20, 21, 23, 36, 74, 75, 76, 80, 84, 93, 100], "contrib": [3, 4, 6, 7, 10, 18, 19, 21, 22, 23, 27, 32, 35, 36, 37, 38, 40, 41, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 70, 75, 76, 79, 80, 84, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 102, 103, 104, 106], "comput": [3, 4, 5, 6, 10, 12, 13, 16, 17, 18, 20, 21, 23, 24, 27, 30, 37, 40, 41, 46, 47, 48, 53, 54, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 79, 90, 91, 94, 95, 97, 98, 102, 103, 104, 106, 108], "which": [3, 4, 5, 6, 7, 10, 13, 18, 21, 23, 25, 38, 40, 48, 49, 54, 57, 60, 62, 63, 65, 66, 67, 68, 70, 72, 75, 76, 79, 80, 84, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 104, 106], "want": [3, 13, 21, 31, 32, 40, 45, 46, 54, 65, 67, 68, 70, 72, 75, 76, 77, 79, 80, 90, 91, 93, 97, 99, 100, 102, 103], "read": [3, 54, 56, 62, 63, 73, 76, 79, 80, 88, 90, 91, 92], "option": [3, 4, 5, 7, 8, 10, 11, 13, 16, 18, 21, 23, 67, 73, 76, 79, 84, 85, 91, 93], "us": [3, 4, 5, 6, 7, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106], "first": [3, 4, 5, 6, 9, 10, 13, 16, 18, 21, 23, 24, 26, 28, 37, 40, 41, 42, 45, 46, 48, 50, 60, 63, 64, 66, 67, 68, 70, 71, 75, 76, 77, 79, 80, 84, 88, 90, 94, 95, 98, 99, 100, 102, 103, 104, 106], "creat": [3, 5, 7, 16, 18, 21, 23, 26, 27, 44, 45, 47, 60, 61, 62, 63, 71, 76, 77, 79, 80, 85, 90, 91, 92, 95, 97, 102, 103, 104, 106], "api": [3, 5, 10, 13, 18, 25, 26, 29, 30, 34, 43, 44, 46, 47, 53, 54, 60, 61, 63, 65, 67, 70, 72, 78, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 95, 96, 97, 104, 105, 108], "pl": [3, 10, 13, 18, 38, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 71, 88, 89, 90, 91, 92, 93, 94, 100], "lf": [3, 18], "lazyfram": [3, 5, 7, 13, 18, 21, 23, 49, 50, 54, 60, 71, 93], "schema": [3, 10, 18, 49, 54], "int32": [3, 13, 18, 49], "b": [3, 18, 21, 23, 24, 37, 40, 41, 49, 52, 63, 67, 79, 80, 98, 103, 104], "string": [3, 5, 7, 13, 19, 20, 23, 24, 28, 52, 53, 54, 55, 57, 59, 60, 67, 69, 72, 80, 91, 94, 99], "lf_domain": [3, 18], "i32": [3, 5, 18, 21, 24, 25, 27, 28, 29, 32, 37, 41, 63, 66, 67, 72, 79], "str": [3, 4, 5, 6, 7, 10, 11, 13, 16, 18, 19, 20, 21, 23, 24, 28, 41, 47, 48, 49, 56, 57, 58, 60, 65, 67, 72, 80, 90, 92, 94, 99], "margin": [3, 5, 7, 8, 10, 13, 14, 18, 21, 48, 50, 52, 54, 55, 58, 88, 89, 90, 91, 92, 93, 94, 100], "max_length": [3, 13, 18, 48, 52, 54, 55, 90, 91, 92, 94, 100], "1000": [3, 13, 21, 38, 40, 49, 65, 66, 68, 94, 99, 100, 102, 106], "mea": [3, 21, 26, 44, 46, 61, 65, 87], "m": [3, 4, 5, 7, 13, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 40, 41, 42, 44, 45, 46, 47, 57, 64, 65, 68, 70, 72, 76, 80, 84, 91, 95, 98, 99, 102, 103, 104, 106], "select": [3, 4, 9, 10, 13, 18, 39, 43, 46, 48, 50, 52, 54, 55, 57, 58, 60, 65, 71, 73, 88, 89, 90, 92, 93, 99, 100, 102, 106], "len": [3, 13, 23, 40, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 60, 65, 68, 71, 89, 90, 91, 92, 94, 98, 100, 102, 103], "col": [3, 13, 18, 48, 50, 52, 54, 55, 56, 57, 60, 90, 91, 92, 94, 100], "sum": [3, 4, 10, 13, 16, 18, 21, 23, 25, 27, 28, 29, 32, 33, 34, 37, 38, 40, 41, 42, 45, 48, 50, 52, 54, 64, 65, 67, 68, 71, 91, 92, 94, 98, 100, 103], "global_scal": [3, 13, 18], "extract": [3, 13, 46, 71], "util": [3, 5, 12, 18, 21, 23, 24, 26, 35, 37, 38, 41, 44, 45, 46, 48, 58, 62, 63, 65, 68, 70, 77, 82, 89, 90, 91, 93, 94, 95, 99, 100, 103, 106], "inform": [3, 5, 9, 13, 24, 25, 27, 36, 37, 41, 46, 49, 53, 54, 61, 63, 65, 66, 67, 68, 90, 91, 93, 94, 98, 99, 100, 102, 103], "about": [3, 5, 6, 13, 38, 48, 51, 54, 60, 61, 62, 65, 67, 72, 73, 79, 80, 90, 91, 94, 95, 98, 99, 100, 102, 103, 104, 105], "each": [3, 4, 5, 7, 10, 11, 12, 13, 16, 18, 21, 23, 25, 28, 30, 37, 38, 39, 40, 45, 46, 47, 48, 52, 54, 58, 61, 62, 63, 65, 66, 67, 68, 70, 72, 76, 79, 80, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 107], "aggreg": [3, 5, 13, 23, 37, 39, 41, 45, 48, 49, 51, 53, 54, 55, 58, 59, 60, 61, 63, 68, 90, 91, 92, 94, 99, 104, 108], "result": [3, 5, 9, 13, 17, 18, 19, 21, 23, 26, 27, 31, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 76, 79, 80, 89, 90, 91, 92, 94, 95, 102, 104, 106], "frame": [3, 13, 21, 35, 48, 54, 58, 60, 90, 91, 92], "shape": [3, 10, 11, 13, 17, 18, 36, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 67, 87, 88, 89, 90, 91, 92, 94, 102, 103], "2": [3, 4, 5, 10, 11, 13, 17, 18, 19, 21, 25, 26, 28, 29, 32, 33, 37, 38, 40, 41, 42, 44, 47, 48, 49, 50, 52, 54, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 70, 71, 79, 80, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 102, 103, 104, 107], "4": [3, 10, 17, 18, 21, 23, 25, 28, 29, 32, 33, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 60, 65, 66, 68, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 102, 103, 106], "f64": [3, 4, 5, 7, 10, 13, 18, 23, 24, 27, 37, 41, 48, 58, 60, 63, 66, 67, 72, 84, 88, 89, 90, 92, 94, 95, 104], "length": [3, 13, 18, 41, 48, 54, 58, 60, 62, 64, 66, 67, 68, 90, 92, 94, 99, 102, 103], "integ": [3, 13, 18, 21, 23, 24, 27, 28, 42, 48, 50, 52, 54, 58, 60, 62, 63, 64, 67, 70, 72, 79, 90, 91, 92, 94], "pass": [3, 5, 6, 13, 21, 24, 25, 32, 33, 35, 37, 39, 46, 54, 63, 64, 67, 68, 70, 76, 84, 88, 90, 91, 94, 99, 102, 104, 106], "05": [3, 13, 21, 38, 41, 58, 68, 89, 90, 91, 95, 99, 102], "5": [3, 13, 17, 18, 19, 21, 23, 25, 26, 28, 29, 31, 32, 33, 34, 37, 38, 41, 42, 46, 48, 50, 54, 58, 62, 63, 64, 65, 66, 68, 70, 80, 89, 90, 91, 92, 93, 98, 100, 102, 103, 104, 106], "3": [3, 5, 10, 13, 17, 18, 21, 25, 28, 29, 32, 33, 37, 38, 40, 41, 42, 44, 45, 47, 49, 50, 54, 55, 56, 57, 60, 63, 65, 66, 67, 68, 71, 76, 80, 88, 89, 90, 91, 93, 98, 99, 100, 102, 103, 104, 107], "375618": 3, "method": [4, 5, 10, 13, 17, 18, 23, 43, 46, 49, 60, 63, 71, 79, 91, 93, 98, 99], "access": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 28, 32, 36, 37, 40, 41, 64, 65, 66, 76, 77, 79, 80, 87, 91, 97, 100, 102, 103, 104, 108], "c": [4, 17, 18, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 45, 46, 49, 52, 64, 65, 67, 68, 70, 76, 80, 84, 95, 103], "d_in": [4, 5, 6, 10, 12, 18, 21, 23, 25, 27, 28, 29, 31, 32, 33, 37, 38, 40, 41, 44, 45, 47, 61, 63, 64, 65, 66, 67, 68, 70, 80, 95, 98, 102, 104, 106], "d_mid": [4, 5, 25, 28, 29, 95], "construct": [4, 5, 6, 7, 10, 11, 13, 16, 18, 19, 20, 21, 23, 26, 28, 38, 39, 40, 44, 45, 47, 54, 60, 62, 63, 65, 66, 80, 84, 89, 90, 93, 94, 97, 98, 104], "when": [4, 5, 10, 12, 13, 16, 18, 19, 21, 23, 24, 25, 29, 32, 33, 36, 37, 38, 39, 41, 42, 45, 48, 49, 50, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 75, 76, 79, 80, 87, 89, 90, 91, 94, 95, 96, 98, 100, 103, 104, 106], "interact": [4, 10, 21, 25, 28, 29, 30, 33, 36, 62, 76, 79, 82], "compos": [4, 30, 31, 80], "composit": [4, 21, 28, 33, 46, 62, 64, 80, 95, 102], "properti": [4, 13, 35, 36, 44, 47, 61, 62, 63, 66, 76, 79, 90, 91, 93, 94, 98], "sequenti": [4, 5, 8, 10, 23, 27, 66, 67, 88], "appli": [4, 5, 10, 13, 18, 21, 23, 34, 37, 38, 40, 41, 48, 51, 54, 57, 66, 77, 84, 88, 89, 90, 91, 94, 95, 96, 97, 98, 102, 103, 104], "same": [4, 5, 7, 10, 17, 21, 23, 28, 30, 32, 36, 37, 40, 41, 45, 48, 49, 50, 54, 58, 63, 64, 65, 66, 67, 68, 70, 71, 76, 79, 80, 85, 88, 89, 90, 91, 92, 94, 97, 98, 99, 104, 106], "dataset": [4, 5, 10, 12, 13, 18, 19, 21, 23, 25, 26, 27, 28, 30, 32, 37, 38, 40, 41, 45, 46, 50, 54, 61, 62, 63, 65, 70, 81, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 102, 103, 104, 106], "basic": [4, 65, 85, 98, 104], "linear": [4, 17, 23, 46, 82, 85, 90, 102], "usag": [4, 21, 49, 54, 70, 79, 84, 97, 103], "specifi": [4, 5, 13, 18, 23, 24, 33, 34, 35, 36, 37, 39, 41, 49, 50, 54, 58, 60, 62, 63, 68, 73, 76, 79, 80, 84, 88, 89, 90, 94, 95, 98, 104], "base": [4, 10, 11, 12, 13, 14, 16, 21, 23, 24, 25, 28, 54, 58, 62, 63, 65, 67, 72, 88, 89, 90, 95, 97, 98, 99, 100, 103, 106], "answer": [4, 18, 21, 25, 40, 50, 54, 58, 65, 66, 68, 93, 100, 102, 103, 106], "previou": [4, 28, 40, 42, 46, 66, 70, 90, 91, 92, 98, 104], "up": [4, 18, 21, 32, 35, 42, 46, 48, 49, 68, 70, 75, 76, 79, 80, 88, 89, 90, 91, 93, 94, 95, 98, 99, 100, 102, 104, 106], "front": [4, 32, 68, 80], "support": [4, 5, 8, 10, 13, 17, 18, 23, 25, 28, 32, 38, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 65, 67, 76, 80, 89, 93, 94, 95, 97, 98, 104], "concurr": [4, 25], "allow": [4, 5, 10, 11, 13, 21, 25, 27, 29, 31, 34, 35, 37, 45, 46, 49, 52, 54, 56, 60, 62, 67, 76, 91, 92, 94, 98, 99, 100], "spawn": [4, 5, 25], "multipl": [4, 10, 13, 20, 21, 30, 47, 52, 64, 65, 75, 79, 83, 91, 92, 93, 95, 97, 98, 100, 103], "interleav": 4, "your": [4, 13, 19, 20, 21, 23, 26, 34, 35, 36, 38, 39, 42, 44, 45, 46, 47, 48, 54, 58, 63, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 98, 108], "amongst": [4, 10, 95], "them": [4, 13, 36, 42, 47, 49, 60, 61, 75, 89, 91, 98, 99, 100, 103], "element": [4, 7, 13, 18, 20, 21, 23, 28, 32, 34, 36, 37, 40, 41, 45, 50, 51, 62, 65, 66, 67, 72, 76, 80, 98, 99, 102, 104], "di": [4, 18, 80, 98], "output": [4, 5, 6, 12, 13, 16, 18, 21, 23, 25, 27, 28, 30, 31, 32, 35, 37, 39, 40, 41, 42, 44, 46, 50, 51, 54, 61, 62, 63, 64, 67, 70, 72, 76, 79, 80, 90, 91, 95, 97, 98, 104], "mi": [4, 18, 23, 80, 98], "mo": [4, 18, 21, 23, 72, 80, 98], "TO": [4, 6, 18, 23, 44, 67, 80, 103], "indic": [4, 6, 18, 23, 37, 38, 39, 49, 54, 67, 70, 72, 79, 80, 102], "space": [4, 5, 17, 18, 21, 23, 32, 37, 38, 39, 42, 46, 49, 66, 67, 70, 80, 84, 102, 106], "valid": [4, 7, 13, 18, 23, 24, 36, 49, 54, 60, 63, 64, 67, 68, 75, 76, 79, 80, 98, 104], "distanc": [4, 5, 6, 10, 18, 19, 20, 21, 23, 24, 25, 27, 28, 31, 32, 37, 40, 41, 45, 48, 58, 61, 62, 66, 67, 70, 72, 79, 80, 84, 95, 104], "maximum": [4, 6, 7, 10, 23, 39, 63, 66, 98, 99, 104], "adjac": [4, 5, 6, 10, 18, 19, 21, 23, 63, 66, 79, 80, 104, 106], "expenditur": [4, 5, 16, 64, 102, 103, 104], "\u03b4": [4, 5, 12, 18, 28, 31, 41, 91], "measurement0": 4, "measurement1": 4, "equival": [4, 16, 18, 21, 23, 27, 37, 40, 41, 48, 50, 63, 65, 68, 80, 90, 92, 98, 103, 104, 106], "noninteract": 4, "via": [4, 5, 10, 21, 35, 37, 38, 40, 41, 44, 45, 46, 47, 49, 52, 54, 56, 63, 66, 68, 72, 77, 80, 88, 89, 90, 98, 102, 103, 104, 108], "vector": [4, 5, 16, 18, 21, 23, 39, 41, 45, 58, 62, 63, 64, 66, 67, 95, 98, 102, 104, 106], "deprec": [4, 18, 23, 99], "sinc": [4, 18, 23, 27, 28, 29, 33, 40, 49, 50, 51, 54, 58, 63, 64, 66, 68, 70, 76, 79, 80, 89, 90, 91, 93, 95, 98, 99, 102, 103, 104, 106], "version": [4, 18, 23, 36, 39, 71, 76, 79, 84, 85, 89, 93, 99, 106], "14": [4, 18, 54, 65, 90, 91, 98, 102, 103], "ha": [4, 5, 18, 21, 23, 24, 25, 29, 30, 33, 36, 37, 40, 41, 44, 46, 49, 50, 54, 58, 60, 63, 67, 68, 72, 75, 76, 77, 79, 80, 81, 83, 84, 88, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 104, 106], "been": [4, 5, 13, 25, 28, 29, 36, 37, 50, 54, 79, 80, 81, 83, 91, 92], "renam": 4, "instead": [4, 5, 10, 13, 18, 21, 23, 24, 37, 41, 46, 50, 54, 58, 60, 61, 62, 65, 67, 71, 76, 81, 87, 89, 90, 91, 94, 98, 99, 102, 104], "transformation0": 4, "outer": [4, 27], "inner": [4, 5, 7, 13, 19, 21, 27], "postprocess1": 4, "repres": [4, 5, 10, 11, 21, 23, 27, 30, 37, 40, 41, 49, 63, 67, 68, 80, 90, 93, 94, 98, 99, 104], "non": [4, 13, 18, 19, 20, 21, 23, 25, 28, 30, 51, 54, 63, 65, 67, 87, 95, 100, 104, 108], "postprocess": [4, 10, 19, 23, 25, 27, 37, 41, 64, 65, 67, 68, 88], "postprocessor": [4, 6, 23, 43, 46, 65, 106], "transformation1": 4, "smoothedmaxdiverg": [4, 31, 63], "curv": [4, 19, 21, 31], "maxdiverg": [4, 5, 18, 21, 30, 31, 32, 37, 39, 40, 41, 63, 95, 98, 104], "population_s": [4, 26], "amplifi": [4, 26], "amplif": [4, 30, 79], "subsampl": 4, "doe": [4, 10, 13, 18, 23, 49, 50, 51, 54, 56, 63, 64, 67, 68, 71, 77, 88, 90, 92, 93, 95, 96, 98, 99, 100, 102], "perform": [4, 41, 46, 65, 66, 72, 77, 97, 99, 102, 103], "ani": [4, 5, 7, 10, 11, 13, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 36, 37, 38, 39, 40, 41, 44, 45, 47, 54, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 77, 79, 80, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 106], "sampl": [4, 9, 10, 12, 13, 16, 17, 18, 21, 23, 26, 37, 38, 40, 41, 46, 48, 61, 65, 66, 67, 68, 70, 88, 90, 91, 93, 94, 98, 99, 102, 103, 104, 106, 108], "It": [4, 5, 13, 18, 21, 27, 31, 34, 43, 45, 46, 48, 62, 63, 67, 72, 76, 77, 79, 80, 91, 93, 95, 98, 99, 100, 102, 104], "have": [4, 10, 13, 18, 21, 22, 23, 25, 26, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 45, 49, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 76, 77, 79, 80, 81, 83, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104], "hand": [4, 41, 45, 68, 70, 91, 92, 95, 97, 106, 108], "simpl": [4, 13, 26, 40, 46, 66, 67, 79, 101, 102, 104, 106], "larger": [4, 18, 23, 26, 28, 41, 66, 67, 70, 90, 91, 95, 98, 99, 102, 104, 106], "popul": [4, 13, 26, 38, 40, 68, 97, 99, 102], "dia": [4, 23], "do": [4, 13, 23, 40, 45, 49, 54, 56, 63, 68, 71, 72, 75, 76, 77, 80, 90, 91, 94, 98, 103], "match": [4, 10, 21, 23, 27, 28, 29, 32, 39, 46, 54, 67, 76, 80, 100, 104], "honest": [4, 6, 7, 13, 18, 19, 20, 23, 26, 35, 44, 45, 46, 47, 76, 84, 87, 100, 106], "curiou": [4, 6, 7, 13, 18, 19, 20, 23, 26, 35, 44, 45, 46, 47, 76, 84, 87, 106], "why": [4, 6, 7, 18, 19, 20, 21, 23, 77, 79, 91, 104], "guarante": [4, 10, 13, 18, 19, 24, 37, 40, 41, 48, 54, 58, 60, 62, 63, 64, 67, 68, 71, 79, 90, 91, 98, 100, 104], "onli": [4, 5, 6, 7, 10, 13, 17, 18, 19, 21, 23, 25, 27, 34, 36, 37, 38, 40, 41, 42, 44, 48, 49, 51, 52, 54, 56, 58, 60, 63, 65, 67, 68, 76, 79, 80, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 104, 106], "record": [4, 5, 12, 13, 16, 23, 38, 45, 46, 47, 48, 49, 50, 54, 58, 63, 64, 66, 67, 68, 70, 80, 89, 90, 91, 92, 94, 98, 102, 104, 106], "int": [4, 5, 7, 10, 11, 12, 13, 14, 16, 17, 18, 21, 23, 24, 25, 28, 29, 32, 33, 37, 40, 41, 42, 44, 46, 47, 48, 52, 54, 63, 65, 70, 71, 72, 80, 89, 90, 91, 92, 94, 100, 102, 103, 106], "d_out": [4, 5, 6, 10, 12, 18, 21, 23, 27, 28, 33, 38, 61, 63, 65, 67, 68, 70, 95, 98, 102], "limit": [4, 5, 10, 13, 18, 21, 25, 30, 33, 35, 49, 66, 67, 91, 92, 93, 95, 96, 102, 103], "loss": [4, 5, 6, 10, 18, 21, 23, 29, 30, 33, 37, 40, 41, 48, 50, 58, 60, 62, 68, 88, 90, 91, 93, 98, 100, 103, 104], "adjust": [4, 23, 27, 37, 40, 41, 46, 65, 66, 90, 102, 103], "reject": [4, 19, 33, 38, 49, 52, 54], "would": [4, 9, 33, 38, 46, 48, 49, 54, 63, 65, 67, 68, 77, 90, 91, 93, 94, 98, 99, 104], "increas": [4, 10, 17, 23, 29, 33, 37, 41, 46, 48, 58, 62, 65, 66, 67, 68, 89, 91, 92, 98, 100, 102, 103, 106], "total": [4, 12, 13, 18, 34, 40, 41, 50, 63, 64, 65, 89, 90, 91, 100, 102], "abov": [4, 18, 21, 22, 23, 37, 39, 41, 71, 76, 79, 80, 90, 91, 94, 95, 99, 103, 104, 106], "q": [4, 6, 72, 102], "upper": [4, 5, 10, 12, 13, 18, 21, 23, 25, 33, 48, 49, 54, 61, 62, 63, 70, 90, 98, 99, 104], "zeroconcentrateddiverg": [4, 5, 18, 30, 31, 37, 39, 41], "citat": [4, 18, 23], "bs16": 4, "concentr": [4, 5, 13, 19, 39, 58, 90, 98, 100, 106], "simplif": 4, "extens": [4, 53, 62, 76, 79], "lower": [4, 12, 13, 21, 23, 34, 38, 43, 46, 48, 49, 54, 58, 65, 68, 84, 87, 89, 92, 98, 99, 104], "stop_prob": 4, "privat": [4, 6, 9, 10, 12, 13, 16, 18, 21, 23, 25, 28, 37, 38, 39, 41, 43, 44, 46, 49, 54, 56, 58, 60, 61, 62, 63, 67, 68, 70, 79, 81, 82, 85, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 101, 104, 105, 106, 108], "candid": [4, 13, 17, 18, 23, 45, 46, 60, 65, 90, 107], "whose": [4, 13, 18, 21, 24, 35, 36, 39, 41, 76], "score": [4, 13, 18, 23, 39, 45, 90, 107], "satisfi": [4, 5, 6, 19, 20, 21, 25, 28, 36, 38, 45, 46, 49, 50, 54, 58, 60, 70, 75, 80, 89, 90, 93, 95, 103, 104, 106], "\u03b5": [4, 5, 12, 16, 18, 21, 31, 37, 41, 45, 90, 93, 95], "2\u03b5": 4, "invoc": [4, 21], "time": [4, 6, 7, 10, 17, 18, 21, 23, 25, 27, 28, 29, 33, 36, 37, 39, 41, 46, 47, 49, 52, 54, 58, 65, 67, 68, 70, 71, 75, 76, 77, 87, 90, 91, 92, 93, 94, 98, 100, 102], "below": [4, 13, 27, 36, 41, 45, 57, 63, 67, 68, 73, 76, 79, 90, 91, 98, 99], "algorithm": [4, 6, 8, 10, 13, 16, 17, 18, 23, 36, 37, 39, 40, 41, 46, 61, 62, 65, 66, 67, 70, 75, 79, 83, 86, 88, 89, 90, 91, 97, 104, 106, 107, 108], "termin": [4, 65], "noth": 4, "should": [4, 13, 18, 19, 21, 23, 30, 34, 37, 38, 42, 49, 61, 62, 63, 64, 67, 68, 72, 73, 76, 77, 79, 91, 93, 95, 97, 98, 99, 104, 106], "make": [4, 5, 13, 18, 21, 23, 24, 25, 26, 28, 30, 36, 38, 44, 45, 46, 47, 50, 54, 58, 60, 62, 63, 65, 67, 68, 70, 72, 75, 76, 77, 79, 80, 84, 85, 87, 89, 90, 91, 93, 97, 98, 99, 100, 102, 103, 104, 106], "form": [4, 5, 18, 23, 30, 40, 44, 47, 63, 65, 72, 77, 80, 89, 90, 94, 95, 98, 104], "write": [4, 21, 32, 37, 40, 41, 42, 45, 62, 64, 65, 66, 67, 71, 76, 77, 79, 80, 84, 87, 91, 92, 103, 104], "custom": [4, 10, 40, 47], "scorer": 4, "extrinsicobject": [4, 6, 18, 24], "ensur": [4, 9, 10, 13, 16, 18, 23, 36, 42, 48, 54, 55, 60, 63, 67, 73, 90, 91, 93, 94, 95, 98, 99, 100, 104], "left": [4, 10, 12, 19, 23, 38, 46, 54, 55, 65, 91, 94, 98], "arbitrari": [4, 30, 48, 53, 61, 62, 66, 89, 92, 94], "held": 4, "http": [4, 27, 45, 76, 84, 102, 103], "arxiv": 4, "org": [4, 45, 73, 74, 83, 97], "pdf": [4, 79, 98, 102], "1811": 4, "07971": 4, "page": [4, 37, 53, 73, 76, 84, 104], "7": [4, 10, 25, 28, 29, 32, 33, 37, 38, 41, 46, 49, 50, 54, 55, 56, 57, 58, 63, 65, 66, 68, 88, 89, 91, 94, 98, 100, 102, 103, 104, 106], "liu": 4, "talwar": 4, "stoc": 4, "2019": 4, "tupl": [4, 5, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 31, 63, 68, 102, 104], "stop": 4, "earli": [4, 36, 79], "iter": [4, 10, 17, 24, 36, 45, 68, 75, 80, 88], "immedi": [4, 23], "greater": [4, 5, 12, 13, 21, 23, 38, 39, 41, 48, 58, 63, 64, 65, 66, 67, 68, 70, 77, 90, 91, 98, 102, 103, 107], "than": [4, 5, 10, 12, 13, 18, 19, 21, 23, 25, 28, 34, 37, 38, 39, 40, 41, 43, 48, 54, 61, 63, 65, 66, 67, 68, 70, 75, 79, 85, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 106], "23": [4, 24, 40, 49, 96], "fals": [4, 5, 7, 13, 16, 18, 20, 21, 23, 24, 26, 31, 37, 38, 41, 45, 49, 50, 54, 56, 63, 64, 65, 67, 70, 84, 95, 98, 102, 104, 106], "demonstr": [4, 17, 26, 45, 46, 48, 52, 54, 65, 68, 80, 84, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 108], "purpos": [4, 13, 63, 79, 93, 98], "np": [4, 18, 37, 40, 46, 65, 68, 87, 98, 99, 100, 102, 103, 106], "m_mock": 4, "lambda": [4, 19, 21, 42, 45, 46, 65, 68, 70, 71, 95, 99, 100, 102, 103, 106], "loc": [4, 46, 98], "m_private_select": 4, "20": [4, 10, 13, 41, 45, 54, 65, 66, 68, 88, 89, 90, 94, 102, 103], "assert": [4, 18, 21, 26, 27, 40, 49, 56, 62, 63, 66, 71, 103], "isinst": [4, 45], "constructor": [4, 5, 18, 21, 23, 24, 27, 28, 30, 31, 35, 37, 39, 41, 42, 63, 64, 67, 68, 70, 72, 76, 77, 79], "delai": [4, 18, 23, 104], "applic": [4, 5, 18, 23, 30, 36, 62, 77, 78, 90, 91, 93, 94, 95, 97, 104], "class": [5, 10, 11, 12, 13, 14, 16, 17, 21, 22, 24, 38, 61, 63, 71, 77, 104], "query_spac": 5, "coordin": 5, "instanc": [5, 6, 7, 13, 16, 19, 20, 21, 23, 37, 41, 46, 48, 61, 63, 65, 71, 72, 94, 98, 104, 106], "recommend": [5, 18, 42, 48, 49, 52, 76, 89, 90, 91, 95, 97], "one": [5, 10, 12, 13, 14, 18, 19, 21, 23, 24, 25, 38, 39, 41, 45, 46, 48, 50, 52, 58, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 79, 80, 89, 90, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 106], "execut": [5, 6, 13, 21, 27, 32, 39, 40, 46, 60, 65, 79, 80, 102], "track": [5, 49, 93, 97], "sequenc": [5, 10, 11, 13, 16, 21, 24, 88], "list": [5, 10, 11, 12, 13, 17, 21, 23, 24, 37, 38, 39, 45, 47, 54, 60, 63, 65, 66, 67, 68, 72, 74, 75, 76, 80, 90, 91, 97, 103, 104, 105], "sent": 5, "overal": [5, 28, 33, 41, 58, 100], "filter": [5, 13, 28, 30, 48, 50, 51, 55, 90, 91, 92, 100, 103], "default": [5, 7, 10, 16, 18, 23, 24, 37, 41, 46, 48, 54, 63, 66, 67, 72, 75, 76, 80, 84, 89, 90, 91, 93, 99], "static": [5, 24, 62, 80, 88], "privacy_unit": [5, 10, 13, 34, 38, 42, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 65, 71, 88, 89, 90, 91, 92, 93, 94, 95, 100], "split_evenly_ov": [5, 13, 34, 38, 42, 48, 49, 50, 52, 54, 55, 56, 57, 58, 60, 65, 71, 90, 91, 92, 93, 94, 95, 100], "split_by_weight": [5, 93], "weight": [5, 10, 18, 28, 65], "assumpt": [5, 46, 58, 91, 92, 104], "structur": [5, 39, 48, 58, 63, 65, 76, 77], "public": [5, 9, 13, 24, 54, 66, 67, 68, 90, 91, 93, 100, 102, 103, 104], "mutual": 5, "exclus": [5, 23, 90], "plan": [5, 13, 18, 60, 71, 77], "In": [5, 7, 13, 18, 19, 22, 23, 25, 26, 27, 28, 37, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 79, 80, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 100, 102, 104, 106], "addit": [5, 7, 13, 18, 20, 21, 22, 23, 38, 41, 45, 46, 49, 50, 54, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 76, 77, 90, 92, 93, 94, 95, 96, 98, 104], "analyz": [5, 23, 76, 93, 97], "unit": [5, 16, 19, 21, 37, 40, 41, 49, 58, 61, 63, 77, 89, 92, 93, 94, 97, 104], "number": [5, 7, 10, 11, 12, 13, 16, 18, 19, 21, 22, 23, 36, 38, 41, 45, 46, 48, 50, 54, 55, 56, 58, 62, 63, 65, 66, 67, 68, 70, 75, 79, 84, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 106, 108], "part": [5, 13, 46, 49, 51, 67, 75, 79, 80, 91, 92, 97, 98], "evenli": [5, 17, 46, 90, 95, 102], "intermedi": [5, 27, 39, 63, 66, 67, 98], "consum": [5, 13, 68, 85], "otherwis": [5, 24, 40, 70, 79, 94], "current": [5, 13, 21, 34, 36, 40, 52, 56, 71, 84, 93, 94, 96, 98], "serialized_plan": [5, 71], "lazyframequeri": [5, 8, 13, 60], "full": [5, 9, 13, 22, 54, 76, 91, 93, 98], "byte": [5, 18], "like": [5, 9, 10, 13, 17, 18, 21, 24, 25, 28, 36, 37, 38, 39, 40, 41, 48, 49, 50, 54, 55, 60, 63, 67, 70, 71, 72, 75, 76, 77, 79, 80, 87, 89, 90, 93, 94, 95, 98, 99, 100, 102, 103, 104], "polars_plan": [5, 13, 71], "kwarg": [5, 14], "next": [5, 45, 63, 65, 66, 68, 75, 76, 82, 84, 90, 95, 99, 103], "directli": [5, 13, 30, 60, 62, 63, 67, 84, 90, 93, 98, 99, 100], "remain": [5, 10, 13, 23, 36, 62, 66, 76, 84, 89, 91, 94], "f": [5, 13, 18, 19, 23, 37, 40, 41, 45, 46, 54, 63, 68, 90, 91, 96, 98, 102, 103, 104], "chain": [5, 7, 18, 21, 23, 24, 39, 45, 46, 61, 62, 63, 67, 69, 70, 71, 80, 84, 98], "miss": [5, 10, 23, 77, 79, 89, 91], "numer": [5, 7, 10, 13, 21, 23, 37, 39, 41, 49, 54, 63, 66, 67, 68, 70, 88, 89, 90], "solv": [5, 21, 40, 63, 70, 98, 103], "call": [5, 21, 24, 27, 28, 33, 37, 41, 42, 60, 61, 63, 64, 66, 68, 71, 79, 80, 84, 89, 90, 95, 97, 98, 99, 104], "closest": [5, 21, 46], "stabil": [5, 7, 21, 23, 27, 35, 44, 47, 61, 62, 66, 67, 71, 76, 79, 80, 104], "constraint": [5, 7, 10, 13, 20, 21, 104], "discov": [5, 10, 21, 70], "assign": [5, 23, 49, 75, 106], "attribut": [5, 10, 14, 21, 38, 45, 89, 100, 102], "search": [5, 21, 63, 69, 76], "callabl": [5, 10, 21], "classmethod": [5, 24], "_wrap_releas": 5, "initi": [5, 36, 58, 63, 76, 78, 90, 97], "howev": [5, 17, 23, 30, 33, 37, 41, 46, 48, 50, 54, 61, 63, 65, 66, 67, 90, 91, 92, 98, 103, 106], "stand": [5, 76, 80], "alon": 5, "help": [5, 21, 62, 63, 65, 66, 72, 75, 77, 80, 84, 91, 93, 96, 98, 104], "build": [5, 6, 18, 21, 24, 36, 42, 46, 52, 55, 63, 66, 67, 68, 76, 78, 79, 80, 82, 89, 91, 94, 98, 102], "submit": [5, 25, 28, 29, 33, 40, 76, 103], "intern": [5, 6, 10, 13, 18, 23, 24, 25, 37, 41, 49, 66, 77, 80, 87, 90], "split": [5, 23, 46, 66, 67, 89, 102, 103], "zcdp": [5, 13, 25, 28, 31, 41, 58, 89, 106], "convers": [5, 54, 55, 56, 74, 91, 94], "approx": [5, 28, 41, 46, 99], "wrap_releas": 5, "prior": [5, 10, 13, 16, 25, 38, 63, 67, 68, 89, 90, 95, 98], "either": [5, 12, 13, 16, 18, 21, 23, 38, 40, 54, 63, 67, 68, 70, 76, 77, 79, 80, 89, 96, 102], "allow_transform": 5, "true": [5, 6, 7, 10, 12, 13, 16, 18, 20, 21, 23, 24, 37, 38, 40, 45, 46, 48, 50, 52, 54, 55, 56, 57, 58, 63, 65, 68, 71, 76, 79, 88, 89, 90, 91, 92, 94, 96, 99, 100, 102, 103, 106], "respons": [5, 18, 73, 90, 91, 95, 102], "potenti": [5, 6, 10, 13, 18, 23, 36, 38, 48, 49, 54, 62, 67, 90, 91, 95], "bool": [5, 6, 11, 13, 16, 18, 20, 21, 23, 24, 39, 40, 50, 63, 67, 72, 102, 103], "accept": [5, 12, 13, 28, 37, 39, 41, 42, 54, 63, 70, 72, 73, 80, 96, 104], "set": [5, 7, 9, 10, 13, 18, 19, 20, 21, 23, 24, 26, 28, 33, 37, 39, 40, 41, 45, 48, 49, 51, 54, 55, 56, 58, 61, 62, 63, 65, 67, 68, 70, 72, 75, 76, 77, 79, 80, 88, 89, 90, 91, 94, 98, 99, 100, 102, 104, 106, 108], "express": [5, 13, 18, 21, 23, 24, 37, 40, 48, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 67, 83, 90, 91, 92, 94, 97, 98, 104], "As": [5, 36, 38, 40, 41, 62, 63, 64, 65, 67, 80, 89, 98, 100, 102, 103, 104], "well": [5, 10, 19, 21, 25, 36, 37, 40, 41, 46, 49, 62, 63, 68, 70, 76, 79, 80, 81, 89, 90, 92, 97, 98, 99, 102, 104], "underli": [5, 17, 21, 46, 49, 54, 56, 61, 67, 68, 86, 88, 99, 104], "syntax": [5, 27, 35, 76, 79, 90], "vec": [5, 18, 23, 24, 37, 67, 72, 80, 99], "dictionari": [5, 10, 13, 41, 54], "rang": [5, 13, 23, 38, 40, 45, 46, 54, 60, 65, 66, 68, 70, 90, 91, 95, 97, 99, 100, 102, 103], "primit": [5, 18, 76, 104], "dict": [5, 10, 40, 41], "mapdomain": [5, 7, 18, 23, 39, 41, 67, 80], "key_domain": [5, 7], "value_domain": [5, 7], "complex": [5, 100, 106, 108], "traceback": [5, 24, 27, 28, 33, 71, 89], "most": [5, 10, 12, 13, 18, 21, 22, 24, 27, 28, 33, 37, 41, 44, 45, 47, 48, 49, 50, 58, 60, 63, 66, 67, 70, 71, 72, 76, 80, 89, 91, 92, 93, 94, 95, 98, 100, 103, 104, 106], "recent": [5, 24, 27, 28, 33, 71, 89], "last": [5, 10, 13, 23, 24, 27, 28, 31, 33, 48, 71, 79, 80, 89, 92, 98, 103], "ffi": [5, 76, 77, 80], "altern": [5, 41, 54, 93], "note": [5, 13, 19, 27, 41, 46, 64, 68, 71, 75, 76, 90, 99, 103, 104], "violat": [5, 7, 35, 36, 54, 76, 91, 95, 100], "rho": [5, 10, 13, 19, 28, 37, 39, 41, 58, 88, 89, 98], "consist": [5, 10, 18, 23, 37, 46, 62, 63, 64, 65, 79, 80, 88, 89, 90, 92, 97, 98, 99, 103, 104], "1e": [5, 10, 19, 21, 26, 28, 31, 38, 40, 41, 48, 49, 54, 55, 56, 57, 58, 63, 88, 89, 91, 92, 94, 103], "9": [5, 10, 13, 18, 19, 25, 28, 29, 32, 33, 37, 38, 41, 46, 50, 54, 56, 65, 66, 68, 88, 89, 91, 93, 95, 98, 100, 102, 103, 106], "09": [5, 38, 41], "pure": [5, 7, 8, 13, 18, 19, 23, 28, 31, 50, 58, 62, 63, 89, 93, 95], "zero": [5, 10, 11, 13, 18, 19, 23, 37, 39, 46, 50, 58, 66, 70, 79, 87, 90, 98, 100, 102, 103, 106], "\u03c1": [5, 28, 31, 41], "two": [5, 6, 7, 12, 13, 18, 19, 20, 21, 23, 27, 28, 29, 31, 33, 37, 38, 41, 42, 46, 48, 49, 50, 58, 61, 62, 63, 66, 70, 79, 80, 84, 88, 89, 91, 93, 95, 98, 100, 103, 104, 106], "omit": [5, 42, 65, 88], "make_": [5, 76, 80, 104], "deriv": [5, 9, 28, 40, 70, 76, 77, 89, 96], "shorthand": [5, 13, 23, 27, 80], "symmetricdist": [5, 18, 20, 21, 23, 32, 63, 66, 67, 72, 80, 95, 98], "verbos": [5, 25], "control": [5, 13, 17, 46, 62, 66, 67, 93], "contribut": [5, 10, 13, 34, 38, 41, 42, 43, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 60, 63, 65, 66, 71, 73, 88, 89, 90, 91, 93, 94, 95, 97, 98, 100, 104], "chang": [5, 13, 16, 21, 31, 36, 41, 45, 50, 52, 54, 56, 58, 60, 63, 64, 65, 66, 67, 70, 72, 75, 76, 80, 90, 94, 98, 99, 106], "absolut": [5, 23, 37, 39, 41, 63, 66, 76, 79, 98, 104], "l1": [5, 37, 39, 41, 67, 96], "l2": [5, 21, 37, 39, 41, 67, 96], "local": [5, 39, 40, 71, 76, 84, 93], "order": [5, 7, 10, 13, 19, 20, 21, 23, 26, 48, 49, 63, 66, 79, 89, 91, 94, 98, 102, 104, 106], "u": [5, 7, 9, 32, 36, 37, 38, 40, 41, 46, 50, 64, 65, 66, 67, 68, 73, 75, 77, 80, 83, 87, 90, 91, 93, 97, 98, 103, 104, 108], "l1distanc": [5, 20, 23, 24, 39, 67, 80, 98], "greatest": [5, 13, 19, 41, 58, 63, 67, 70, 93, 98, 100, 103, 104], "microdata": [5, 9, 38, 82, 87, 89, 93, 97, 100, 102, 103], "influenc": [5, 13, 41, 47, 48, 58, 63, 65, 66, 67, 91, 92, 93, 98, 104], "scalar": [5, 23, 38, 39, 54, 67, 89, 98, 104], "individu": [5, 13, 18, 26, 38, 39, 40, 41, 45, 46, 48, 50, 52, 54, 56, 58, 63, 65, 67, 68, 70, 73, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 107], "insertdeletedist": [5, 18, 20, 23, 66, 67, 80], "hammingdist": [5, 20, 23, 67, 80], "changeonedist": [5, 20, 23, 67, 80, 98], "field": [6, 43, 61, 75, 91], "ti": [6, 67], "eval": [6, 21], "suppli": [6, 24, 36, 54, 103], "distance_in": 6, "distance_out": 6, "relat": [6, 21, 26, 27, 46, 61, 62, 63, 67, 70, 74, 76, 77, 80, 94, 98, 104], "retriev": [6, 7, 19, 20, 21, 23, 46, 49, 54, 57, 79, 87, 90, 102], "term": [6, 18, 21, 23, 31, 37, 39, 40, 41, 49, 54, 63, 66, 67, 68, 72, 80, 95, 98, 104], "defin": [6, 18, 19, 21, 23, 32, 37, 40, 41, 44, 45, 46, 47, 61, 62, 63, 67, 68, 79, 80, 84, 88, 89, 92, 93, 95, 98, 104], "callback": [6, 18, 19, 23], "post": [6, 18, 40, 98], "processor": 6, "criteria": [6, 45, 54], "These": [6, 8, 24, 31, 36, 38, 39, 49, 50, 51, 55, 60, 61, 63, 66, 67, 71, 72, 79, 80, 90, 93, 98, 100, 102, 104], "invari": [6, 13, 18, 54, 90, 94, 95], "necessari": [6, 21, 27, 54, 58, 66, 70, 79, 92, 93, 94, 96], "show": [6, 37, 38, 49, 66, 68, 77, 79, 90, 91, 96, 98, 102, 103], "correct": [6, 18, 23, 35, 36, 40, 63, 64, 76, 79, 99, 103], "other": [6, 10, 13, 21, 28, 31, 33, 41, 44, 45, 48, 50, 58, 61, 62, 63, 64, 65, 67, 70, 72, 75, 76, 77, 79, 80, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 102, 105, 106], "global": [6, 61, 63, 84, 93], "state": [6, 12, 25, 38, 67, 97], "system": [6, 24, 36, 46, 98], "clock": 6, "reveal": [6, 9, 49, 67, 68, 95, 98, 100], "elaps": 6, "escal": 6, "side": [6, 12, 18, 21, 23, 36, 38, 39, 46, 49, 75], "channel": [6, 36, 39], "vulner": [6, 35, 36, 76, 91], "direct": [6, 21, 41, 65, 70, 76, 78, 97, 106], "secondli": 6, "independ": [6, 23, 39, 49, 54, 97], "except": [6, 17, 18, 21, 23, 25, 34, 37, 49, 54, 56, 70, 71, 89, 98, 100, 106], "both": [6, 13, 21, 23, 28, 32, 49, 50, 54, 61, 63, 66, 68, 70, 76, 79, 80, 84, 88, 90, 97, 98, 99, 102, 106], "cancel": 6, "avoid": [6, 28, 54, 55, 56, 66, 87, 91, 94], "transit": 6, "self": [6, 10, 12, 13, 21, 61, 79], "extern": [6, 79], "width": [7, 66], "arraydomain": 7, "seri": [7, 13, 21, 49, 54, 58, 67, 89, 103], "arrai": [7, 11, 17, 18, 23, 40, 46, 49, 72, 89, 102, 103], "unbound": [7, 23, 66, 67, 68, 92, 98, 104], "whether": [7, 11, 13, 18, 19, 21, 39, 50, 70, 73, 75, 97, 100], "atom": [7, 11, 21, 23, 24, 37, 41, 67, 72, 80], "max_weight": [7, 18], "bitvectordomain": [7, 18], "posit": [7, 23, 58, 66, 67, 70, 79, 98, 102], "bit": [7, 18, 24, 63, 66, 67, 72, 79, 103, 108], "categori": [7, 10, 13, 18, 21, 23, 40, 49, 65, 67, 89], "categoricaldomain": 7, "time_unit": [7, 56], "time_zon": 7, "datetimedomain": 7, "zone": [7, 49], "found": [7, 13, 23, 37, 38, 41, 54, 76, 94, 97, 104], "One": [7, 18, 23, 54, 79, 90, 91, 97, 98, 100], "n": [7, 12, 26, 37, 40, 45, 50, 56, 65, 66, 67, 68, 70, 79, 95, 97, 99, 102, 103], "correspond": [7, 8, 10, 13, 16, 19, 21, 63, 80, 89, 91, 92, 95, 106], "nano": 7, "micro": 7, "millisecond": [7, 49, 57], "debug": [7, 19, 20, 21, 76, 79], "stringifi": [7, 19, 20], "enumdomain": 7, "kei": [7, 10, 13, 18, 23, 39, 41, 50, 54, 80, 88, 89, 94, 95, 99], "hashmap": [7, 18, 23, 41], "d": [7, 11, 19, 20, 21, 23, 37, 40, 48, 57, 58, 63, 67, 72, 75, 76, 80, 98, 102, 103], "userdomain": 7, "equal": [7, 10, 13, 18, 19, 20, 21, 23, 27, 39, 40, 63, 68, 103], "uniqu": [7, 10, 13, 23, 37, 45, 77, 90, 91, 92, 93, 103], "sound": [7, 79], "its": [7, 13, 23, 24, 25, 36, 49, 54, 56, 58, 62, 63, 65, 71, 72, 97, 98, 104, 106], "descript": [7, 18, 19, 20, 24, 35, 75, 76, 91], "test": [7, 12, 18, 75, 80, 99, 102], "wildexprdomain": [7, 18, 23], "frame_domain": 7, "get_california_pums_path": [8, 9, 38, 68, 99, 100], "get_france_lfs_path": [8, 9, 10, 48, 50, 52, 54, 55, 56, 57, 58, 88, 89, 90, 91, 92, 94], "aim": [8, 10, 13, 36, 88], "contingencyt": [8, 10, 13, 14, 89], "mst": [8, 10, 88], "make_contingency_t": [8, 10], "mirror_desc": [8, 10, 13], "canon": [8, 11, 18, 72, 99], "nparray2domain": [8, 11], "nparrayddomain": [8, 11], "array2_domain": [8, 11, 16, 46], "arrayd_domain": [8, 11], "contingency_t": [8, 10, 13, 88, 89], "dpexpr": [8, 13, 53, 60], "lazygroupbyqueri": [8, 13], "sortbi": [8, 13, 48], "dp_len": [8, 13], "decomposit": [8, 15, 87], "linear_model": [8, 15, 86], "tool": [8, 9, 38, 63, 77, 79, 96, 97, 104, 108], "yet": [8, 29, 36, 57, 58, 79, 80, 90, 95], "bind": [8, 62, 76, 80, 97], "some": [8, 13, 21, 23, 36, 37, 38, 40, 41, 43, 46, 54, 57, 60, 61, 62, 63, 67, 68, 70, 72, 75, 76, 79, 80, 89, 90, 91, 92, 93, 97, 98, 99, 100, 101, 104], "depend": [8, 19, 35, 36, 49, 54, 56, 60, 61, 63, 67, 68, 72, 73, 76, 79, 84, 89, 90, 93, 94, 95], "namespac": [8, 13, 53, 60], "path": [9, 22, 71, 76, 79], "csv": [9, 67, 100, 102, 103], "pum": [9, 81, 102, 103], "file": [9, 67, 76, 77, 79, 80, 102], "censu": [9, 18, 91, 102, 103], "header": [9, 79], "row": [9, 10, 11, 12, 13, 16, 18, 26, 45, 46, 48, 49, 50, 51, 54, 55, 66, 67, 68, 80, 90, 91, 92, 93, 94, 95, 98, 99, 102, 103, 104], "ag": [9, 10, 13, 38, 54, 55, 60, 68, 88, 89, 91, 93, 99, 100, 103], "sex": [9, 10, 38, 50, 55, 68, 88, 89, 91, 93, 99, 100, 103], "educ": [9, 38, 68, 97, 99, 100, 103, 108], "race": [9, 38, 68, 99, 100], "incom": [9, 21, 38, 60, 68, 97, 99, 100], "marri": [9, 38, 68, 99, 100, 103], "eu": 9, "labor": [9, 54, 88, 89], "forc": [9, 54, 58, 88, 89, 90, 91, 93], "survei": [9, 40, 58, 90, 91, 92, 93, 102, 103], "code": [9, 24, 28, 36, 39, 42, 43, 44, 46, 47, 49, 58, 61, 67, 72, 75, 76, 79, 80, 84, 90, 93, 98, 99, 104], "develop": [9, 36, 75, 77, 78, 79, 93], "work": [9, 21, 36, 48, 49, 54, 58, 59, 62, 66, 67, 70, 72, 73, 75, 76, 77, 80, 81, 82, 87, 88, 90, 91, 94, 98, 99, 100, 102, 104], "could": [9, 41, 45, 47, 48, 50, 61, 67, 68, 72, 79, 80, 83, 87, 89, 90, 91, 94, 95, 98, 99, 100, 106], "scientif": 9, "believ": [9, 99], "good": [9, 85, 93, 100], "inadvertantli": 9, "person": [9, 38, 65, 95, 98, 100], "To": [9, 13, 23, 25, 30, 46, 48, 50, 60, 63, 66, 68, 70, 76, 79, 80, 82, 89, 90, 91, 92, 94, 95, 96, 98, 100, 102], "reduc": [9, 10, 13, 22, 23, 48, 50, 58, 65, 66, 68, 76, 90, 91, 94, 100], "download": 9, "tutori": [9, 16, 46, 93], "ve": [9, 17, 27, 28, 36, 68, 72, 77, 80, 83, 84, 90, 93, 98, 103, 104], "preprocess": [9, 27, 48, 49, 50, 54, 61, 64, 67, 88, 89, 90, 91, 93, 96, 99], "singl": [9, 13, 17, 21, 32, 53, 54, 56, 66, 72, 75, 79, 93, 95, 97, 98, 100, 104], "countri": 9, "franc": [9, 90, 91, 93], "drop": [9, 23, 29, 36, 50, 51, 66, 67, 90, 92, 98], "unus": 9, "subset": [9, 21, 23, 51, 53, 68, 79, 89, 98, 103], "concaten": 9, "ll": [9, 18, 26, 36, 38, 40, 41, 45, 46, 50, 54, 55, 56, 61, 62, 65, 66, 67, 68, 70, 75, 76, 80, 84, 87, 90, 91, 92, 93, 94, 95, 100, 102, 103, 104], "present": [9, 41, 58, 88, 89, 90, 91], "run": [9, 10, 17, 18, 21, 32, 34, 36, 40, 45, 46, 54, 60, 65, 68, 70, 76, 80, 84, 88, 98, 99, 100, 102], "matter": [9, 65], "instal": [10, 11, 12, 13, 14, 15, 16, 17, 76, 84, 88, 89, 93], "pip": [10, 11, 12, 13, 14, 15, 16, 17, 76, 84, 89, 93], "short": [10, 75, 80, 108], "pgm": [10, 89], "made": [10, 58, 63, 70, 75, 76, 90, 98, 100, 106], "onewai": [10, 13], "oneway_split": [10, 13, 89], "measure_split": [10, 13], "max_siz": [10, 13], "80": [10, 13, 48, 54, 68, 90, 92, 94, 102], "round": [10, 13, 23, 37, 41, 66, 79, 98, 99, 102, 103], "mmsm22": 10, "adapt": [10, 21, 28, 30, 33, 88, 95], "choos": [10, 13, 18, 23, 27, 39, 45, 46, 48, 58, 63, 65, 67, 73, 75, 79, 90, 95, 100, 106], "least": [10, 12, 38, 45, 46, 65, 79, 95, 99, 103, 108], "stronger": [10, 38, 40], "correl": 10, "cliqu": 10, "per": [10, 13, 16, 18, 40, 45, 48, 68, 90, 93, 103, 106], "step": [10, 18, 46, 66, 70, 76, 82, 92, 95, 106], "budget": [10, 13, 16, 21, 28, 33, 34, 60, 68, 70, 85, 87, 88, 89, 90, 91, 93, 95, 102, 108], "doesn": [10, 25, 42, 54, 63, 66, 67, 70, 94, 102], "suffici": [10, 18, 37, 41, 63, 76, 90], "improv": [10, 17, 26, 36, 46, 58, 75, 83, 89, 95], "model": [10, 16, 17, 26, 36, 39, 40, 44, 47, 48, 61, 62, 64, 66, 82, 87, 88, 89, 93], "scan_csv": [10, 48, 50, 52, 54, 55, 56, 57, 58, 88, 89, 90, 91, 92, 94, 100], "ignore_error": [10, 38, 48, 50, 52, 54, 55, 56, 57, 58, 88, 89, 90, 91, 92, 94], "36": [10, 42, 48, 50, 52, 54, 55, 56, 57, 58, 88, 89, 90, 91, 92, 93, 94], "table_aim": [10, 88], "truncat": [10, 23, 59, 64, 66, 67, 70, 82, 88, 89, 93], "here": [10, 13, 17, 21, 48, 61, 62, 68, 71, 76, 77, 79, 83, 88, 89, 90, 91, 93, 95, 103, 104], "hwusual": [10, 48, 50, 52, 54, 55, 88, 89, 90, 91, 92, 93, 94], "ilostat": [10, 48, 54, 88, 89, 91, 93], "cut": [10, 13, 17, 46, 49, 79, 88, 89, 94], "40": [10, 13, 41, 54, 55, 68, 88, 89, 90, 91, 94, 102, 103], "60": [10, 13, 52, 54, 58, 68, 88, 89, 90, 94, 102, 103], "synthes": [10, 88], "3_807_732": [10, 88], "i64": [10, 13, 18, 24, 37, 41, 72, 88, 89, 90], "55": [10, 88, 103], "446336": [10, 88], "776579": [10, 88], "28": [10, 65, 88], "21838": [10, 88], "53348": [10, 88], "43": [10, 68, 88], "291215": [10, 88], "34": [10, 88, 91, 99], "406155": [10, 88], "106615": [10, 88], "22": [10, 41, 88, 103], "413161": [10, 88], "42": [10, 18, 88], "585227": [10, 88], "11279": [10, 88], "58": [10, 88], "197292": [10, 88], "139579": [10, 88], "59": [10, 88, 100], "371221": [10, 88], "19": [10, 88, 103], "671153": [10, 88], "862917": [10, 88], "339046": [10, 88], "492355": [10, 88], "32": [10, 37, 41, 63, 71, 72, 79, 88], "233661": [10, 88], "863244": [10, 88], "737908": [10, 88], "similar": [10, 21, 23, 54, 58, 63, 67, 68, 76, 77, 79, 80, 87, 93, 98, 102, 104, 106], "exponenti": [10, 21, 39, 89, 105, 107, 108], "mwem": 10, "introduc": [10, 18, 23, 62, 65, 68, 70, 90, 91, 92, 93, 96, 98, 104], "hlm10": 10, "graphic": 10, "fit": [10, 16, 17, 46, 87], "mirror": [10, 16], "descent": [10, 108], "joint": [10, 52, 90, 102], "densiti": [10, 37, 65, 98], "updat": [10, 21, 25, 54, 60, 76, 79, 80, 89], "rule": [10, 95, 100], "higher": [10, 20, 21, 46, 63, 68, 76, 89, 106], "dimension": [10, 11, 58, 102, 103], "liter": [10, 11, 12, 13, 21, 54, 72], "unkei": 10, "make_margin": 10, "ordin": [10, 18], "warm": 10, "markovrandomfield": 10, "memori": [10, 18, 49, 67, 89, 97], "mb": 10, "proport": [10, 12, 38, 40, 58, 89, 90], "alloc": [10, 13, 87, 90, 91], "complement": [10, 35], "spent": 10, "explicit": [10, 13, 21, 54, 80, 88], "workload": [10, 88, 89], "degre": [10, 23], "consid": [10, 13, 19, 24, 36, 38, 40, 49, 54, 55, 63, 64, 66, 70, 79, 88, 89, 91, 94, 97, 99, 102, 103, 106], "abc": 10, "conting": [10, 13, 14, 82, 88, 93], "tabl": [10, 13, 14, 23, 37, 82, 88, 90, 91, 93], "loss_fn": 10, "optim": [10, 18, 21, 76, 108], "signatur": [10, 80], "abstract": [10, 98], "wai": [10, 14, 36, 48, 49, 50, 58, 60, 61, 62, 63, 66, 67, 71, 75, 77, 79, 80, 88, 89, 91, 94, 95, 98, 99, 100], "half": [10, 23, 46, 50, 89, 102, 103], "further": [10, 27, 37, 41, 46, 48, 49, 58, 67, 91, 98, 100, 102, 104], "factori": [10, 13], "k": [10, 13, 18, 21, 23, 37, 40, 41, 63, 67, 70, 98, 102, 103, 104], "low": [10, 18, 38, 68, 80, 84, 88, 89, 97, 102], "open": [10, 75, 76, 77, 91], "linearmeasur": 10, "span": [10, 48, 88, 90, 91, 98], "project": [10, 18, 36, 73, 75, 76, 89, 97, 102, 108], "attr": [10, 13, 89], "ndarrai": [10, 11, 102, 103], "preserv": [10, 18, 46, 48, 54, 62, 66, 89, 90, 94, 108], "project_melt": [10, 89], "datafram": [10, 13, 18, 23, 37, 45, 49, 54, 59, 65, 66, 67, 68, 76, 89, 91, 93, 98, 99, 102, 103], "std": [10, 24, 89], "standard": [10, 26, 66, 68, 89], "deviat": [10, 23, 89], "varianc": [10, 16, 23, 64, 68, 91, 92, 95, 106], "therefor": [10, 37, 41, 46, 54, 58, 60, 66, 67, 90, 91, 98, 100, 104, 106], "central": [10, 40], "theorem": 10, "tend": [10, 65, 70, 90], "toward": [10, 18, 68, 78, 79, 98], "interv": [10, 12, 89, 90, 91, 96, 98], "uncertainti": [10, 99], "gener": [10, 17, 21, 24, 36, 39, 40, 48, 58, 62, 67, 68, 70, 74, 76, 79, 80, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 102, 103], "synthet": [10, 82, 85, 93, 97], "off": [10, 18, 28, 40, 54, 67, 68, 77, 91, 93, 100], "stabl": [10, 21, 23, 41, 45, 46, 50, 53, 61, 63, 65, 67, 68, 77, 79, 80, 88, 89, 98, 106], "appear": [10, 23, 49, 75, 80], "fewer": [10, 65, 67, 68, 99], "null": [10, 12, 13, 14, 21, 23, 38, 48, 49, 51, 63, 67, 80, 89, 90, 91, 92, 94, 99, 102, 104], "denot": [10, 13, 19, 37, 40, 41, 63, 64, 72, 79, 95, 98], "priorit": 10, "over": [10, 18, 19, 23, 28, 29, 37, 38, 40, 41, 48, 52, 54, 58, 63, 66, 67, 68, 80, 89, 90, 91, 92, 93, 98, 99, 102], "unknown": [10, 13, 23, 41, 67, 81, 89, 90, 95, 99], "num_select": 10, "mms21": 10, "greedili": 10, "pair": [10, 18, 19, 23, 41, 46, 62, 63, 79, 98, 104], "poorli": [10, 16], "becom": [10, 35, 37, 58, 66, 68, 76, 79, 89, 90, 102], "connect": [10, 77], "minimum": [10, 18, 66, 76, 88], "tree": [10, 23, 88], "table_mst": 10, "second": [10, 18, 28, 50, 57, 63, 76, 79, 80, 92, 98, 102], "conjunct": [10, 55], "specif": [10, 13, 24, 37, 41, 49, 61, 62, 70, 76, 77, 79, 89, 90, 91, 93, 96, 98, 104], "bin": [10, 13, 23, 38, 45, 54, 65, 67, 76, 88, 91, 94], "edg": [10, 13, 23, 40, 54, 65, 67, 70, 88, 95, 105], "replic": 10, "binomialcnd": [11, 12, 38], "confidence_interv": [11, 12, 38, 95], "p_valu": [11, 12, 38], "one_sided_confidence_interv": [11, 12], "one_sided_pvalu": [11, 12], "one_sided_uniformly_most_powerful_test": [11, 12, 38], "two_sided_confidence_interv": [11, 12], "two_sided_pvalu": [11, 12], "norm": [11, 16, 65], "num_column": [11, 16, 46, 87, 89], "cardin": [11, 98], "namedtupl": [11, 16], "categor": [11, 18, 23, 40, 54, 60, 67, 89], "center": [11, 12, 16, 37, 98, 104], "region": [11, 70, 98], "design": [11, 13, 62, 77, 90, 97, 108], "assum": [11, 21, 23, 36, 49, 61, 68, 79, 80, 90, 92, 95, 98, 100, 102, 103], "runtimetypedescriptor": [11, 24], "_genericalia": [11, 24], "genericalia": [11, 24], "conduct": [12, 13, 21, 38, 54, 68, 70, 91, 102, 103], "binomi": [12, 40], "instanti": [12, 38], "theta": [12, 38], "cnd": 12, "realiz": [12, 98, 99], "counter": [12, 38, 40, 68, 98, 103], "increment": [12, 27, 30, 38], "outcom": [12, 18, 38, 68, 79, 90, 91, 97, 101], "tail": [12, 38, 41], "hypothesi": [12, 18, 38, 102], "less": [12, 18, 19, 23, 38, 50, 51, 54, 58, 65, 68, 70, 84, 85, 90, 91, 93, 95, 98], "right": [12, 16, 19, 23, 38, 45, 46, 54, 55, 73, 75, 91, 98, 106], "success": [12, 27, 38, 45, 75], "rate": [12, 38, 102, 108], "observ": [12, 13, 38, 68, 90, 91, 98], "trial": [12, 102], "ump": 12, "choic": [12, 19, 25, 37, 40, 41, 66, 72, 75, 90, 95, 98, 102, 104, 106], "contingencytablequeri": [13, 14], "add": [13, 18, 23, 37, 41, 49, 53, 58, 62, 66, 67, 76, 79, 80, 89, 90, 91, 93, 94, 97, 98, 103, 106], "per_group": [13, 48, 58, 94], "num_group": [13, 48, 94], "describ": [13, 16, 18, 21, 23, 30, 37, 40, 41, 53, 61, 62, 63, 66, 72, 76, 90, 91, 93, 94, 98, 99, 104], "significantli": [13, 58, 90, 91, 95], "expr": [13, 18, 23], "mani": [13, 17, 36, 40, 41, 45, 46, 50, 54, 55, 56, 58, 67, 68, 70, 72, 75, 76, 77, 80, 90, 91, 93, 94, 98, 99, 102], "typic": [13, 38, 40, 44, 47, 49, 60, 62, 63, 65, 67, 70, 72, 79, 82, 98, 104], "object": [13, 17, 62, 69, 71], "shortcut": [13, 22, 30], "exact": [13, 37, 41, 68, 90, 98, 99, 103, 104], "fill": [13, 23, 24, 28, 42, 66, 68, 79, 90, 99], "known": [13, 18, 19, 23, 28, 36, 40, 62, 67, 90, 98, 100, 103], "visit": 13, "collect": [13, 18, 32, 40, 49, 50, 54, 55, 56, 57, 58, 60, 67, 68, 70, 71, 80, 90, 91, 94, 98, 100, 102], "u32": [13, 21, 24, 48, 58, 60, 72, 79, 90, 92, 94], "ad": [13, 14, 17, 18, 21, 33, 39, 46, 50, 58, 65, 66, 67, 72, 75, 76, 77, 80, 89, 90, 94, 98, 99, 103, 106], "three": [13, 21, 22, 32, 41, 45, 46, 49, 65, 79, 80, 89, 90, 91, 95, 100, 103, 106], "standard_devi": [13, 18], "sqrt": [13, 18, 41, 58, 102, 103, 106], "mean": [13, 16, 19, 21, 23, 26, 33, 37, 39, 41, 48, 49, 50, 54, 58, 62, 63, 65, 66, 67, 68, 76, 80, 87, 89, 91, 92, 94, 95, 98, 99, 100, 102, 103, 104, 106], "amount": [13, 17, 46, 48, 58, 65, 68, 91, 92, 94, 95, 98, 100, 102, 103, 106], "determin": [13, 18, 21, 28, 37, 40, 41, 63, 66, 70, 80, 90, 95, 102, 103, 104], "clip": [13, 21, 48, 49, 70, 90, 91, 96, 98, 99, 102, 104], "denomin": [13, 68, 106], "fill_nul": [13, 48, 49, 52, 54, 60, 90, 91, 92, 94, 100], "config": 13, "float_precis": 13, "just": [13, 18, 28, 30, 34, 39, 40, 45, 54, 58, 61, 65, 66, 68, 70, 71, 75, 76, 84, 87, 89, 90, 92, 93, 94, 98, 100, 103, 106], "prevent": [13, 34, 54, 90, 103], "doctest": 13, "separ": [13, 23, 39, 57, 64, 66, 67, 76, 90, 91, 99], "ratio": [13, 68, 98], "median": [13, 18, 23, 50, 60, 65], "calibr": [13, 18, 23, 38, 58, 67, 91, 95, 104, 108], "entropi": [13, 103], "quantil": [13, 18, 23, 46, 50, 95, 105, 107, 108], "much": [13, 41, 49, 50, 54, 58, 63, 64, 68, 88, 89, 90, 91, 92, 98, 99, 100, 102, 104, 106], "10": [13, 17, 18, 21, 25, 26, 28, 29, 31, 32, 33, 34, 37, 38, 41, 44, 45, 46, 48, 49, 54, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 80, 91, 92, 93, 98, 102, 103, 104, 106], "30": [13, 49, 58, 68, 91, 94, 102], "50": [13, 18, 45, 65, 68, 90, 91, 95, 99, 102, 106], "70": [13, 65, 68, 102], "90": [13, 68, 102], "likelihood": [13, 68, 70], "closer": [13, 58, 68, 80, 106], "n_uniqu": [13, 50, 90], "address": 13, "chosen": [13, 29, 65, 67, 92, 98, 106, 108], "standard_dev": 13, "null_count": [13, 50, 90], "boolean": [13, 18, 21, 23, 40, 53, 59, 63, 70, 94, 102, 103], "nulliti": [13, 23, 49, 67], "25": [13, 17, 46, 65, 90, 98], "quartil": [13, 65, 90], "actual": [13, 17, 37, 38, 40, 46, 54, 63, 70, 79, 90, 99, 100, 103], "impli": [13, 20, 21, 91, 94, 98], "sever": [13, 28, 30, 46, 58, 64, 75, 79, 90], "oper": [13, 36, 37, 41, 53, 54, 59, 61, 62, 64, 66, 67, 84, 99, 106], "due": [13, 23, 36, 63, 66, 68, 70, 90, 91, 99], "mimic": [13, 72, 79], "few": [13, 32, 41, 68, 69, 76, 91, 93, 103], "across": [13, 36, 48, 90, 91, 93, 95, 104], "union": [13, 21, 24, 93, 98], "predic": [13, 21, 51, 54, 55, 57, 63, 70, 79, 100, 102, 103], "discard": [13, 41, 91, 94], "relev": [13, 21, 36, 62, 104], "group_bi": [13, 18, 48, 49, 50, 54, 55, 56, 57, 58, 91, 92, 94], "maintain_ord": 13, "named_bi": 13, "join": [13, 37, 74, 76, 91, 97], "left_on": 13, "right_on": 13, "suffix": 13, "_right": 13, "join_nul": 13, "coalesc": 13, "allow_parallel": 13, "force_parallel": 13, "logic": [13, 48, 79, 104], "named_expr": 13, "statement": [13, 22, 62, 96, 98, 99], "don": [13, 27, 36, 42, 45, 46, 54, 60, 62, 63, 65, 66, 68, 76, 79, 80, 89, 90, 91, 98, 103, 104], "select_seq": 13, "sort": [13, 18, 40, 48, 54, 55, 56, 57, 91, 94, 98], "more_bi": 13, "descend": 13, "nulls_last": 13, "multithread": 13, "subtract": [13, 79], "95": [13, 18, 21, 37, 38, 90, 91, 96, 102, 103], "convict": 13, "dtype": [13, 18, 49, 54, 57, 89], "ignor": [13, 16, 18, 27, 65, 66, 68, 79, 80, 98, 100], "6": [13, 21, 25, 26, 28, 29, 31, 32, 33, 37, 38, 40, 41, 46, 50, 54, 58, 63, 65, 66, 68, 91, 98, 100, 102, 103, 106], "429605": 13, "interpret": [13, 68, 76, 80, 96, 98, 106], "def": [13, 18, 21, 28, 40, 41, 42, 44, 45, 46, 47, 54, 65, 68, 79, 87, 98, 99, 100, 102, 103], "interpret_accuraci": 13, "truncate_num_group": [13, 48, 92], "keep": [13, 23, 28, 48, 49, 66, 68, 98, 99, 102], "truncate_per_group": [13, 48, 92], "with_column": [13, 50, 54, 55, 56, 57, 89, 90, 91, 94], "with_columns_seq": 13, "with_kei": [13, 50, 54, 91], "lgb_plan": 13, "lazygroupbi": 13, "agg": [13, 18, 48, 49, 50, 54, 55, 56, 57, 58, 91, 92], "named_agg": 13, "alias": 13, "max_group": [13, 91], "what": [13, 42, 45, 60, 62, 63, 67, 72, 75, 77, 80, 85, 95, 98, 100, 103, 104, 105], "publicli": [13, 95], "might": [13, 32, 63, 71, 79, 90, 99, 103], "find": [13, 19, 21, 23, 28, 40, 54, 63, 67, 69, 70, 77, 79, 96, 98, 99, 103, 104], "Be": [13, 63, 76, 91, 95], "awar": [13, 36, 58, 75, 91, 97], "aspect": [13, 62, 79, 91], "mark": [13, 79, 80, 84, 91], "subject": [13, 21, 25, 36, 91, 98], "protect": [13, 28, 39, 50, 54, 62, 66, 68, 90, 91, 93, 95, 100, 102, 106, 108], "so": [13, 17, 19, 23, 27, 30, 31, 40, 43, 45, 50, 52, 54, 55, 56, 58, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 80, 85, 89, 90, 91, 92, 93, 94, 98, 99, 100, 103, 104], "conserv": [13, 90], "By": [13, 37, 41, 48, 61, 79, 89, 90, 92, 98, 102], "analysi": [13, 23, 37, 40, 41, 47, 48, 58, 63, 66, 68, 72, 81, 87, 91, 93, 95, 99, 106, 108], "formal": [13, 36], "effect": [13, 18, 23, 36, 49, 58, 66, 90, 97, 102, 103, 106], "weaker": [13, 58], "advertis": [13, 104], "distinct": [13, 22, 23, 25, 98, 102], "max_influenced_partit": 13, "issu": [13, 36, 75, 93], "paper": [13, 62, 77], "widespread": [13, 23], "underestim": [13, 23, 66, 67, 68], "know": [13, 21, 25, 34, 36, 37, 40, 41, 45, 48, 60, 62, 68, 77, 83, 90, 91, 94, 95, 97, 98, 99, 100, 102, 104], "veri": [13, 38, 42, 54, 58, 62, 65, 67, 68, 80, 90, 91, 98, 99, 102, 103, 104], "loos": 13, "max_num_partit": 13, "max_partition_contribut": 13, "max_partition_length": 13, "public_info": 13, "onc": [13, 21, 26, 63, 72, 75, 76, 77, 84, 93, 102], "those": [13, 44, 47, 54, 75, 80, 90, 94, 102, 104], "evalu": [13, 18, 21, 32, 61, 62, 63, 70, 80, 99, 102, 103, 104], "against": [13, 23, 36, 39, 54, 66, 75, 103, 106], "repeatedli": [13, 21, 68], "exhaust": [13, 28, 33, 88, 89], "lazi": [13, 90, 91], "circumv": 13, "entir": [13, 23, 25, 26, 46, 68, 95, 104], "becaus": [13, 16, 23, 25, 27, 32, 34, 36, 37, 38, 40, 41, 43, 46, 48, 49, 54, 56, 58, 61, 62, 63, 64, 66, 67, 68, 70, 76, 79, 80, 84, 87, 89, 90, 91, 93, 94, 95, 98, 100, 102, 106], "ever": [13, 40, 44, 48, 58, 90, 91, 94, 100], "analyst": [13, 25, 68, 99, 100, 103], "extend": [13, 14, 60, 79, 83], "shuffl": [13, 46, 91, 102], "enabl": [13, 18, 21, 27, 35, 76, 79, 84, 89, 93, 100], "follow": [13, 15, 19, 21, 23, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 49, 50, 53, 54, 58, 60, 63, 65, 66, 67, 72, 75, 76, 80, 84, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 104, 106], "sort_bi": [13, 48], "maintain": [13, 95, 102, 108], "thread": [13, 97, 104], "place": [13, 18, 24, 76, 77, 80, 93, 103], "oneway_scal": [14, 89], "oneway_threshold": [14, 89], "special": [14, 39, 71, 104, 106], "merg": 14, "parent": [14, 65], "pca": [15, 16, 82, 85, 95], "pcaepsilon": [15, 16], "make_private_pca": [15, 16], "linearregress": [15, 17], "scikit": [15, 16, 17, 85, 87], "learn": [15, 16, 17, 35, 72, 76, 85, 87, 100], "organ": [15, 21, 76, 97], "our": [16, 18, 22, 36, 37, 40, 45, 47, 48, 68, 75, 76, 79, 90, 93, 95, 98, 99, 100, 102, 103, 106], "diffenti": 16, "row_norm": [16, 87], "n_sampl": [16, 17, 87], "n_featur": [16, 17, 87], "n_compon": [16, 87], "n_chang": 16, "whiten": 16, "wrapper": [16, 84], "covari": [16, 87], "kareem": 16, "amin": 16, "et": [16, 102], "al": [16, 102], "try": [16, 17, 24, 35, 37, 45, 49, 56, 58, 66, 70, 76, 82, 97], "importerror": 16, "detail": [16, 21, 30, 36, 37, 39, 62, 63, 64, 67, 70, 76, 79, 83, 90, 97, 99, 105, 107], "components_": [16, 87], "multipli": [16, 18, 23, 66, 67, 104, 106], "squar": [16, 23, 37, 46, 58, 103], "root": [16, 28, 37, 76], "divid": [16, 64, 65, 67, 90, 91], "singular": 16, "uncorrel": 16, "compon": [16, 36, 62, 71, 75, 79, 87, 104], "wise": 16, "train": [16, 17], "eigval": 16, "eigvec": 16, "eigenvalu": [16, 87], "eigenvector": [16, 87], "portion": [16, 88], "eigendecomposit": 16, "cross": [16, 70], "product": [16, 19, 75, 90, 102, 103], "matrix": [16, 17, 87, 103], "sscp": 16, "beforehand": 16, "domin": [16, 41, 54, 103], "unit_epsilon": 16, "num_compon": 16, "clamp": [16, 18, 21, 23, 34, 38, 42, 63, 68, 71, 72, 95, 98, 99], "vt": 16, "theil": [17, 46], "sen": [17, 43], "regress": [17, 43, 66, 77, 82, 85, 108], "plugin": [17, 18, 35, 45, 46, 68, 71, 76, 83], "x_bound": [17, 46], "y_bound": [17, 46], "candidates_count": 17, "fraction_bound": 17, "75": [17, 40, 46, 65, 90, 102], "interfac": [17, 21, 24, 28, 36, 66, 76, 77, 79, 80, 85, 97, 102, 103, 104], "parallel": 17, "offer": [17, 36, 85, 98], "moment": [17, 66, 75], "target": [17, 67, 68, 70, 76, 90, 96, 100, 103], "pairwis": [17, 23, 66, 67], "predict": [17, 99], "robust": [17, 46, 68, 98, 102], "cost": [17, 46], "need": [17, 18, 21, 22, 23, 27, 30, 33, 39, 46, 48, 54, 61, 62, 63, 65, 66, 67, 70, 71, 76, 77, 79, 80, 85, 87, 90, 94, 98, 100, 102, 103, 104], "later": [17, 35, 46, 75, 76, 80, 93, 98], "percentil": [17, 46], "modulenotfounderror": 17, "pytest": [17, 76, 77], "skip": [17, 76], "lin_reg": 17, "never": [17, 30, 49, 63, 72, 80, 89, 98], "copi": [17, 46, 93], "spars": [17, 18, 45], "notimplementederror": 17, "bitvec": 18, "frequenc": [18, 41, 89], "frac": [18, 19, 40, 68, 98, 106], "bitvector": 18, "flip": [18, 40, 102], "encod": [18, 49, 54, 71, 91], "total_limit": 18, "value_limit": 18, "size_factor": 18, "o": [18, 65, 66, 67, 68, 72, 76], "process": [18, 32, 34, 35, 36, 37, 40, 41, 49, 54, 63, 64, 65, 66, 68, 77, 78, 80, 84, 87, 89, 95, 97, 98, 104], "beta": 18, "There": [18, 30, 36, 37, 41, 62, 63, 64, 67, 68, 69, 70, 72, 76, 77, 80, 93, 97, 98, 102], "trade": [18, 28, 68, 77], "larg": [18, 21, 37, 41, 54, 58, 65, 66, 70, 75, 79, 89, 90, 91, 94, 95, 98, 102, 103, 106], "hash": [18, 79, 102, 103], "collis": 18, "alp21": 18, "fast": [18, 37, 41], "ci": [18, 38, 76, 77], "l0pinfdist": 18, "absolutedist": [18, 20, 21, 23, 37, 39, 41, 63, 66, 67, 72, 80, 84, 98, 104], "\u03b2": 18, "tailor": [18, 85, 87], "tulap": [18, 38], "av23": [18, 38], "qi": [18, 39], "granular": [18, 45], "print": [18, 21, 25, 26, 28, 29, 32, 33, 34, 37, 40, 41, 45, 64, 65, 66, 68, 71, 87, 90, 94, 98, 99, 100, 102, 103, 104], "Or": [18, 63, 83], "readabl": 18, "propos": 18, "computation": [18, 48], "effici": [18, 48, 66, 67, 93], "looser": [18, 26, 44, 47], "smallest": [18, 21, 62, 63, 70, 72, 80, 91, 98], "exclud": [18, 49, 52, 70, 90, 93, 100], "exce": [18, 33, 48, 100], "restrict": [18, 21, 23, 54, 63, 66, 67, 79, 80, 104], "constant": [18, 21, 23, 39, 42, 44, 64, 66, 68, 72, 79, 95, 99, 103, 106], "grs12": [18, 23], "univers": [18, 23, 84, 108], "maxim": [18, 23, 45, 98], "quantifi": [18, 19, 61, 92, 95], "geometr": [18, 37, 108], "done": [18, 19, 40, 104], "cks20": 18, "appropri": [18, 37, 39, 66, 100, 104, 106], "negat": [18, 51, 106], "index": [18, 23, 68, 107], "highest": [18, 21], "tia": [18, 23, 65, 67, 72, 80], "linfdist": [18, 20, 23, 39], "usiz": [18, 23, 24, 65, 67], "min": [18, 37, 66, 68, 94, 95, 98, 107], "select_index": 18, "bottom": [18, 35, 76, 102], "govern": [18, 27, 95, 97], "exprplan": 18, "neighbor": [18, 21, 23, 37, 41, 46, 61, 62, 63, 66, 67, 95, 104], "tune": [18, 100], "abl": [18, 25, 35, 54, 61, 76, 90, 99, 100], "tradeoff": [18, 64, 96, 106], "insid": [18, 28, 77, 79, 80, 89], "still": [18, 21, 25, 28, 32, 33, 36, 37, 40, 41, 42, 48, 50, 63, 64, 65, 66, 68, 70, 75, 79, 87, 91, 98, 99, 100, 102, 103, 104], "empti": [18, 24, 60, 65, 90], "imagin": [18, 45, 48, 79, 99], "elementari": 18, "school": [18, 97], "pet": 18, "grade": 18, "pet_count": 18, "lf_domain_with_margin": 18, "With": [18, 38, 58], "now": [18, 25, 26, 28, 29, 33, 38, 46, 47, 58, 60, 65, 66, 68, 76, 79, 80, 88, 89, 90, 91, 95, 98, 99, 100, 102, 104, 106], "piec": [18, 27, 30, 77, 80], "dp_sum_pets_by_grad": 18, "df": [18, 60, 68, 91, 93, 99], "from_record": [18, 68], "No": [18, 24, 93, 98], "kindergarten": 18, "grader": 18, "chicken": 18, "orient": 18, "tighter": [18, 63, 68, 95], "prob": [18, 21, 40], "discretedist": [18, 20, 39, 40], "num_categori": 18, "random_str": 18, "99": [18, 21, 48, 54, 55, 90, 91, 92, 93, 94], "constant_tim": 18, "rappor": 18, "aggregat": 18, "bernoulli": [18, 38], "sampler": [18, 37, 41], "extrem": [18, 38, 65, 70, 91], "slow": 18, "m_rr": 18, "8006676684558611": 18, "formula": [18, 40, 68, 98], "ln": [18, 19, 40], "prepar": [18, 54, 57, 58, 82, 90, 91, 93], "packbit": 18, "array_equ": [18, 103], "8": [18, 19, 21, 25, 28, 29, 31, 32, 33, 37, 38, 41, 46, 48, 50, 54, 63, 65, 66, 68, 70, 72, 89, 91, 92, 98, 100, 102, 103, 104, 106], "12": [18, 23, 24, 37, 38, 49, 54, 65, 66, 91, 98, 99, 102, 103], "uint8": [18, 49], "roundtrip": 18, "mech": 18, "frombuff": 18, "tobyt": 18, "compar": [18, 41, 46, 62, 63, 98, 102, 103], "unpackbit": 18, "slower": 18, "random_bool": 18, "max": [18, 19, 21, 45, 62, 63, 64, 66, 67, 68, 79, 90, 95, 98, 104, 106], "report": [18, 39, 45, 74, 79, 107], "noisi": [18, 23, 37, 40, 41, 45, 65, 68, 90, 91, 98, 104, 107], "privacy_map": [18, 42, 44, 61, 80, 104], "everi": [18, 19, 23, 43, 63, 88, 97, 98, 103], "associ": [18, 21, 23, 63, 66, 92, 98, 99], "close": [18, 19, 21, 23, 61, 62, 63, 66, 68, 79], "anydomain": 18, "anymetr": 18, "anymeasur": 18, "anyobject": 18, "const_funct": 18, "_arg": [18, 44], "_d_in": 18, "user_measur": 18, "pm": 19, "smaller": [19, 23, 38, 41, 54, 58, 63, 68, 79, 89, 90, 91, 100, 106], "cdot": [19, 37, 40, 41, 46, 64, 98, 104], "commonli": [19, 38, 51, 58, 60, 63, 80, 91], "notion": [19, 62], "possibl": [19, 21, 36, 40, 48, 61, 62, 63, 68, 70, 75, 79, 80, 89, 91, 98, 100, 104], "whenev": 19, "exist": [19, 21, 23, 67, 77, 79, 91, 97, 102], "event": 19, "e": [19, 37, 40, 62, 76, 79, 98, 99, 100, 104], "pr": [19, 75, 76, 79, 98], "d_": [19, 40, 64, 66, 98, 104], "mathrm": [19, 40, 65, 98], "_e": 19, "condit": [19, 50, 68, 104], "until": [19, 36, 65, 68], "neg": [19, 20, 23, 40, 50, 66, 67, 70, 79, 95, 98], "smooth": [19, 37, 63], "infti": [19, 41, 106], "max_": [19, 98], "subseteq": [19, 98], "textrm": 19, "supp": [19, 98], "big": 19, "dfrac": 19, "leq": [19, 98], "profil": [19, 21, 31, 41, 43, 91], "monoton": [19, 20, 21, 23, 45, 66, 67, 70], "decreas": [19, 68, 91, 103, 106], "ep": [19, 103], "els": [19, 23, 24, 54, 100], "enough": [19, 41, 62, 91, 100], "satur": [19, 23, 66], "499": 19, "invert": 19, "suitabl": [19, 28, 65, 70, 91, 104], "insuffici": [19, 33], "infinit": [19, 20, 51, 79, 98, 99], "inf": [19, 54, 94], "r\u00e9nyi": 19, "rdp": 19, "mathbb": [19, 98], "userdiverg": 19, "essenti": [19, 27, 50, 58, 79, 82, 93], "beyond": [19, 27, 85], "meaning": [19, 42, 54, 55, 91, 94], "fuction": 20, "l01infdist": [20, 23, 39, 41], "partit": [20, 41, 91, 95], "l02infdist": [20, 39], "l2distanc": [20, 21, 39, 67, 98], "userdist": 20, "pseudo": [20, 75, 102, 103], "symmetri": 20, "le": [20, 98, 104], "triangl": [20, 98], "inequ": [20, 79], "program": [21, 35, 36, 61, 76, 79, 80, 84, 98, 104, 108], "framework": [21, 34, 35, 36, 63, 65, 79, 80, 84, 94, 95, 97, 104, 105], "top": [21, 35, 37, 102], "mass": [21, 41], "thei": [21, 24, 27, 28, 33, 35, 36, 42, 47, 51, 58, 61, 62, 63, 65, 67, 68, 76, 79, 80, 89, 92, 98, 100, 104], "alwai": [21, 42, 49, 54, 58, 62, 63, 65, 70, 72, 77, 79, 91, 99, 100, 104], "store": [21, 23, 28, 49, 63, 79, 89], "lp_anydomain": 21, "section": [21, 23, 27, 37, 39, 41, 63, 66, 67, 68, 75, 76, 79, 80, 81, 82, 90, 91, 93, 94, 96, 98, 99, 100, 101, 104, 105, 106, 107], "doc": [21, 45, 72, 77, 79], "type_": 21, "prescrib": 21, "val": [21, 99], "membership": [21, 101, 105], "lp_anyfunct": 21, "lp_anymeasur": 21, "__call__": 21, "101": [21, 106], "concis": [21, 104], "tran": [21, 47, 61], "integr": [21, 23, 37, 41, 66, 75, 77, 79, 90, 91, 97, 98], "lp_anymetr": 21, "lp_anyodomet": 21, "respond": [21, 40, 54, 58, 68, 91], "honestli": 21, "meas_rr": 21, "fulli": [21, 30, 33, 36, 40], "trivial": [21, 79, 98, 99, 102], "qbl_comp": 21, "consumpt": [21, 25, 104], "8109302162163288": 21, "variant": [21, 56, 79], "messag": [21, 37, 64, 68, 79, 80], "errorvari": 21, "stack": [21, 35, 46, 75, 103], "trace": [21, 35, 102], "give": [21, 35, 39, 62, 63, 64, 65, 67, 70, 77, 80, 90, 93, 98, 102, 103, 104], "vice": 21, "versa": 21, "query_typ": 21, "remov": [21, 45, 46, 49, 54, 56, 62, 63, 64, 66, 67, 75, 81, 90, 91, 94, 95, 98, 104, 106], "lp_anytransform": 21, "toa": [21, 23, 47, 65, 67, 80, 99], "n2": 21, "n3": 21, "were": [21, 23, 27, 37, 41, 61, 63, 66, 67, 70, 89, 90, 91, 93, 95, 98, 103], "apart": [21, 54], "ouput": 21, "return_sign": 21, "decis": [21, 70], "boundari": [21, 70], "unari": 21, "awai": [21, 68, 70, 106], "inferr": 21, "invalid": [21, 23, 70, 91, 94], "valueerror": [21, 24, 89], "cannot": [21, 23, 24, 44, 47, 54, 55, 56, 58, 68, 91, 93, 94, 97, 98, 99], "histogram": [21, 23, 41, 49, 72, 81, 95, 98], "emit": [21, 27, 37, 41, 53, 61, 62, 79, 104], "dp_mean": [21, 68, 95, 99], "5235561269546629": 21, "make_chain": 21, "tightli": [21, 63], "said": [21, 97], "complet": [21, 23, 30, 32, 36, 37, 40, 41, 64, 65, 66, 67, 73, 75, 77, 80, 84, 87, 103, 104], "parameter": [21, 106], "nearest": [21, 23, 37, 41, 66, 79, 90, 103, 106], "major": [21, 36, 97, 99], "pre": [21, 88], "produc": [21, 27, 30, 37, 41, 62, 67, 79, 99, 104, 108], "doubl": [21, 37, 41, 48, 63, 72, 94], "discrete_laplac": 21, "widest": 21, "admiss": 21, "10_000": [21, 37, 38, 66, 87], "ideal": [21, 23, 36, 63, 65, 79, 95], "make_fixed_laplac": 21, "polici": [21, 97], "research": [21, 36, 77, 93, 97], "accur": [21, 48, 68, 70, 85, 89, 103], "symmetr": [21, 23, 39, 62, 63, 66, 67, 98, 104], "500": [21, 34, 65], "000": [21, 90], "out": [21, 23, 24, 28, 36, 66, 70, 71, 76, 79, 80, 87, 91, 98, 100, 102, 104], "necessary_scal": 21, "data_s": [21, 68, 99], "500_000": 21, "admit": [21, 40], "1000000": 21, "1498": 21, "dp_json": 21, "disallow": [21, 60], "binari": [21, 49, 54, 55, 63, 71, 76, 80], "band": [21, 70], "Will": 21, "attempt": [21, 70, 76, 79, 80, 88, 103], "recov": [21, 100], "throw": [21, 54, 56, 63, 70, 80], "ok": [21, 79, 84], "li": [21, 41], "dp_obj": [21, 71], "notebook": [22, 37, 39, 41, 62, 65, 66, 67, 77, 79, 80, 87, 96, 98, 99, 102, 103, 104, 108], "begin": [22, 36, 40, 48, 75, 79, 97], "after": [22, 23, 46, 54, 65, 67, 76, 79, 80, 84, 85, 94, 98, 99, 104], "Its": 22, "deterministicli": 23, "size_guess": [23, 65], "branching_factor": [23, 65], "minim": [23, 70, 103], "cdf": [23, 65, 98], "ari": [23, 67], "qyl13": 23, "understand": [23, 36, 62, 63, 71, 97, 104, 105], "hierarch": 23, "guess": [23, 65, 67, 68, 100], "leaf_count": [23, 65], "expand": [23, 43, 77], "branch": [23, 65], "children": [23, 65, 103], "ta": [23, 67, 72], "leaf": [23, 65], "node": [23, 65, 95], "factor": [23, 58, 65, 94, 95, 99, 100, 106], "shallow": 23, "size_limit": [23, 66], "advantag": [23, 50, 80, 100, 102, 103], "better": [23, 41, 48, 58, 65, 76, 81, 90, 100, 106], "establish": [23, 54, 68, 98, 99, 104], "summat": [23, 66, 67], "item": [23, 40, 41, 71, 79, 90, 94, 100], "f32": [23, 24, 37, 41, 66, 67, 72, 79], "precis": [23, 24, 37, 41, 62, 63, 66, 72, 79, 95, 98], "csvw22": 23, "dmns06": 23, "overflow": [23, 63, 66, 67, 70, 79, 90], "impos": 23, "overestim": [23, 68], "share": [23, 32, 49, 54, 61, 66, 67, 76, 90, 91, 92, 94, 98, 103], "sign": [23, 63, 66, 67, 70, 72, 73, 75, 79], "failur": [23, 60], "handl": [23, 40, 63, 67, 71, 75, 89, 90], "summari": [23, 67, 90, 91, 108], "cumul": [23, 65], "datum": [23, 67], "let": [23, 36, 38, 41, 46, 58, 61, 62, 63, 68, 79, 80, 83, 84, 88, 89, 90, 91, 93, 97, 98, 100, 103], "inclus": 23, "layer": [23, 99], "balanc": [23, 91], "implicitli": [23, 67, 80], "breadth": 23, "leav": 23, "even": [23, 35, 44, 46, 48, 51, 54, 55, 58, 63, 65, 66, 70, 76, 77, 90, 91, 97, 98, 100], "apport": 23, "rel": [23, 50, 79, 90, 91, 94, 99, 102], "hrms09": 23, "boost": 23, "through": [23, 24, 36, 43, 46, 62, 77, 84, 89, 91, 93, 97, 104], "tv": [23, 39], "bv17": 23, "finit": [23, 37, 38, 41, 66, 98, 104, 108], "tk": [23, 39, 41, 76], "null_categori": [23, 65], "end": [23, 34, 37, 40, 67, 68, 75, 79, 80, 102], "col_nam": [23, 99], "dataframedomain": [23, 80], "hashabl": [23, 67], "column_nam": 23, "imput": [23, 49, 60, 68, 90, 91, 99], "fall": 23, "infin": [23, 45, 79, 98], "ident": [23, 26, 79], "warn": [23, 49, 54], "won": [23, 45, 66, 90, 91, 100], "chainabl": 23, "wherea": [23, 58, 63, 94, 106], "replac": [23, 41, 65, 80, 88, 89, 98, 99], "uniformli": [23, 88, 89], "treat": [23, 68, 72], "op": [23, 24, 54], "enforc": [23, 54, 55, 80, 84, 91, 92], "boundedmetr": 23, "unboundedmetr": 23, "unord": 23, "permut": 23, "orderedmetr": 23, "u64": [23, 24, 72], "bin_edg": 23, "interpol": [23, 65], "wa": [23, 27, 38, 40, 63, 65, 66, 90, 91, 93, 97, 98, 100, 103, 106], "befor": [23, 25, 29, 33, 38, 40, 45, 47, 48, 54, 59, 60, 61, 65, 67, 68, 70, 73, 76, 77, 80, 89, 90, 91, 94, 98, 100, 103], "downcast": 23, "load": [23, 45, 67, 71, 76], "token": 23, "line": [23, 37, 46, 65, 68, 76, 79, 80, 91], "exprdomain": 23, "indicator_column": 23, "keep_column": 23, "ssd": 23, "unorderedmetr": 23, "stability_map": [23, 45, 46, 47, 61, 80], "runtim": [23, 37, 41, 49], "ddof": 23, "dhk15": 23, "social": [23, 91], "scienc": [23, 46, 97], "freedom": 23, "bridg": 24, "reli": [24, 35, 58, 71, 76], "secur": [24, 74, 76, 77, 91, 97], "natur": [24, 48, 103], "fine": [24, 48], "grain": [24, 48], "gap": [24, 37, 79], "manipul": [24, 49, 53, 56, 57, 59, 60, 66], "normal": [24, 46, 58, 103, 106], "public_exampl": 24, "py_object": 24, "recogn": [24, 79], "subtyp": 24, "type_nam": 24, "hint": [24, 77], "plaintext": 24, "depth": [24, 66, 72, 79], "inherit": [24, 88], "getitem": 24, "stdlib": 24, "throughout": [24, 54, 72, 91], "particularli": [24, 55, 72, 77], "unspecifi": 24, "u8": [24, 63, 72], "u16": [24, 72], "i8": [24, 72], "i16": [24, 72], "view": [25, 35, 75, 89, 95], "anoth": [25, 48, 62, 63, 64, 66, 77, 79, 80, 85, 89, 91, 94, 98], "gain": [25, 68], "case": [25, 27, 37, 38, 39, 40, 41, 43, 48, 54, 58, 60, 63, 64, 66, 67, 68, 70, 71, 75, 77, 79, 80, 88, 90, 91, 92, 93, 95, 98, 100, 102, 104, 105, 106], "explicitli": [25, 36, 37, 41, 50, 58, 72, 80, 91, 95, 100], "meas_adaptive_comp": [25, 28], "1l": [25, 28, 29, 32, 33, 95], "int_dataset": [25, 28, 29, 32, 33], "qbl_adaptive_comp": [25, 28], "2l": [25, 29, 32, 33], "3l": [25, 29, 32, 33, 95], "4l": [25, 29, 32, 33], "5l": [25, 29, 32, 33], "6l": [25, 29, 32, 33], "7l": [25, 29, 32, 33], "8l": [25, 29, 32, 33], "9l": [25, 29, 32, 33], "10l": [25, 28, 29, 32, 33], "machin": 25, "similarli": [25, 27, 29, 33, 37, 38, 40, 41, 65, 67, 70, 80, 91, 98, 104, 106], "meas_count": [25, 28, 29, 32, 33], "meas_sum": [25, 28, 29, 32, 33], "61": 25, "vari": [25, 38, 39, 66, 76, 90, 93, 95, 99, 100, 102, 103], "activ": [25, 76], "lock": 25, "freez": 25, "previous": [25, 92, 98], "arriv": 25, "necessarili": [25, 63, 66, 88, 98], "hold": [25, 63, 65, 66, 79, 89, 98, 99, 104], "earlier": [25, 46, 68, 94], "lift": [25, 49], "prove": [25, 43, 79, 98], "renyi": 25, "permiss": [26, 70, 72, 73, 80], "trust": [26, 44, 47], "arbitrarili": [26, 98], "03": 26, "97": [26, 99, 102], "theoret": [26, 98, 99], "captur": [26, 37, 41, 62, 63, 79, 89, 98, 104], "had": [26, 41, 63, 68, 89, 93, 98], "4941": 26, "efficaci": 26, "chainer": [27, 30, 63], "togeth": [27, 30, 32, 46, 58, 62, 63, 66, 67, 80, 84, 91, 92, 98, 104], "longer": [27, 30, 45, 65, 76, 88, 91, 94], "pipelin": [27, 30, 46, 67, 92, 94], "stitch": 27, "constitu": [27, 32, 62, 68], "notic": [27, 32, 37, 39, 41, 46, 49, 50, 63, 65, 67, 68, 79, 80, 90, 98, 100, 103, 104, 106], "make_chain_mm": 27, "onto": 27, "conform": [27, 42, 67, 98], "sum_tran": [27, 28, 66], "lap_mea": 27, "noisy_sum": 27, "investig": 27, "practic": [27, 42, 48, 49, 63, 66, 84, 90, 93, 98, 100, 102, 104], "frequent": [27, 95], "written": [27, 58, 67, 79], "automat": [27, 54, 56, 58, 77, 80, 98], "noisy_sum_mea": 27, "bounded_sum": [27, 63, 104], "base_dl": 27, "subtl": 27, "capabl": [27, 81], "domainmismatch": 27, "github": [27, 74, 75, 76, 77], "com": [27, 76, 102, 103], "discuss": [27, 37, 39, 60, 63, 71, 90, 98], "297": 27, "noisy_sum_tran": 27, "come": [27, 37, 41, 48, 70, 75, 88, 90, 94, 98, 102], "intend": [27, 36, 62, 67, 90, 105], "preprocessor": 27, "plain": 28, "old": [28, 54, 91, 93], "str_space": 28, "meas_adaptive_comp_str": 28, "qbl_adaptive_comp_str": 28, "69": 28, "repeat": [28, 58], "mind": [28, 48, 49, 58, 68, 77, 91, 98, 102], "max_contribut": [28, 65, 104], "0l": [28, 32], "snip": [28, 44, 47, 79, 80], "\u03c1_1": 28, "\u03c1_2": 28, "scale_weight": 28, "w": [28, 102], "make_zcdp_adaptive_composit": 28, "approxdp": [28, 31, 38], "zcdp_compositor_scal": 28, "meas_adaptive_comp_zcdp": 28, "child": [28, 93], "qbl_adaptive_comp_zcdp": 28, "rho_1": 28, "rho_2": 28, "0734": 28, "0146": 28, "make_sum_zcdp": 28, "dg_scale": 28, "At": [28, 54, 76, 79, 102, 103], "meas_count_approxdp": 28, "make_count_zcdp": 28, "failedfunct": [28, 33], "conclus": 28, "odom_fully_adaptive_comp": [29, 33], "qbl_fully_adaptive_comp": [29, 33], "56": [29, 102], "commensur": [29, 33, 102], "overload": 30, "long": [30, 46, 58, 63, 67, 77, 92], "fixedsmoothedmaxdiverg": [30, 31], "nest": 30, "coupl": 30, "mention": [30, 79, 95], "meas_puredp": 31, "meas_fixed_approxdp": 31, "meas_zcdp": 31, "meas_approxdp": 31, "11": [31, 33, 37, 38, 41, 46, 54, 65, 66, 68, 91, 98, 102, 103, 106], "688596249354896": 31, "13": [31, 54, 80, 91, 98, 103], "3861046488579": 31, "08": 31, "vet": [32, 35, 36, 37, 40, 41, 64, 65, 66, 76, 79, 84, 87, 100, 104], "opt": [32, 36, 37, 40, 41, 64, 65, 66, 75, 84, 87, 104], "contact": [32, 37, 40, 41, 64, 65, 66, 73, 78, 87, 104], "thank": [32, 37, 40, 41, 64, 65, 66, 73, 87, 104], "simultan": [32, 46, 52, 103], "batch": [32, 91], "meas_mean_fract": 32, "dp_sum": [32, 64, 104], "dp_count": [32, 64, 68, 95], "unlist": 32, "52": [32, 102], "caus": [33, 66, 67], "meas_fully_adaptive_comp": 33, "benefit": [33, 49, 54, 58, 62, 89], "cap": [33, 63], "pend": 33, "trycatch": 33, "rather": [34, 61, 75], "sum_queri": 34, "impute_const": [34, 38, 95, 99], "dp_sum_queri": 34, "down": [35, 48, 68, 80, 89, 91, 106], "pictur": 35, "edit": [35, 67, 76, 79], "cargo": [35, 76, 80, 84, 93], "toml": [35, 76, 84, 93], "adversari": [35, 76, 79, 90, 100, 102, 103], "someth": [35, 71, 76], "promis": [35, 37, 41, 64, 76, 99, 104], "comprehens": [35, 76], "histori": [36, 79], "commun": [36, 40, 43, 68, 76, 77, 79, 93, 97, 102, 103, 108], "trustworthi": 36, "alreadi": [36, 46, 54, 59, 67, 76, 77, 79, 80, 87, 90, 94, 95, 98, 103], "deploi": 36, "progress": 36, "impact": [36, 72, 90], "real": [36, 45, 60, 71, 91, 93, 95, 98, 102, 108], "arithmet": [36, 54, 66, 67, 79, 104], "common": [36, 49, 50, 54, 58, 67, 72, 76, 78, 91, 95, 98, 104], "literatur": [36, 68], "Their": 36, "discrep": 36, "ongo": [36, 99], "clearli": [36, 44, 90, 91], "distinguish": [36, 49, 98, 102, 106], "ones": [36, 77], "concret": [36, 63, 80], "faithfulli": 36, "attack": [36, 68, 77, 91, 105, 107], "harden": 36, "thing": [36, 62, 76, 79], "cach": 36, "etc": [36, 67], "who": [36, 40, 77, 92, 93, 100], "obtain": [36, 98, 99, 102, 103], "outsid": [36, 53, 66, 89, 90, 102], "carefulli": [36, 67, 73, 79, 97], "implic": 36, "critic": [36, 63], "undergo": [36, 76], "verifi": [36, 44, 47, 62], "characterist": [36, 61, 62], "involv": [36, 78, 79, 80, 91, 92], "mathemat": [36, 62, 63, 97, 100, 104], "underwai": [36, 84], "uncov": 36, "bug": [36, 74, 79], "flag": [36, 75, 76], "unvet": 36, "conceptu": [36, 62, 82, 97], "basi": [36, 44, 47], "foremost": 36, "among": [36, 41, 91, 98, 103], "concept": [36, 72, 80, 98], "prototyp": [36, 43, 97], "flesh": 36, "roadmap": 36, "wait": 36, "flux": 36, "lot": 36, "backward": 36, "incompat": [36, 76], "flexibl": [36, 42, 61, 62, 84, 85, 93, 104], "evolv": 36, "appreci": 36, "feedback": [36, 75, 77], "strive": 36, "high": [36, 38, 39, 62, 67, 91, 97, 98, 99], "encount": [36, 63, 76, 77], "variat": [37, 50, 90, 95, 98], "five": [37, 41, 98, 104], "simpli": [37, 38, 40, 54, 58, 63, 65, 70, 104], "mu": [37, 41, 104], "importantli": [37, 41, 104], "permit": [37, 40, 41, 68, 104], "quantiti": [37, 41, 50, 68, 79, 90, 104], "base_lap": [37, 104], "4762688937509709": 37, "analog": [37, 41], "gauss": 37, "11580942383880671": 37, "125": 37, "base_gauss": 37, "analogu": [37, 41], "continu": [37, 38, 41, 79], "while": [37, 41, 42, 44, 46, 48, 50, 52, 54, 56, 58, 62, 63, 65, 66, 67, 68, 71, 75, 80, 90, 91, 93, 98, 102], "base_discrete_lap": 37, "discretelaplac": [37, 41], "base_discrete_gauss": 37, "discretegaussian": [37, 41], "cover": [37, 50, 62, 66, 67, 89], "thu": [37, 68, 79, 88, 91, 98, 102, 104], "again": [37, 79, 93], "base_lap_vec": 37, "wrong": 37, "often": [37, 63, 75, 98, 99], "info": [37, 73, 74, 79, 83, 91, 100, 102, 104], "lt": [37, 103], "gt": [37, 55, 99, 103], "2540423714495987": 37, "1781233226386165": 37, "610700530416051": 37, "lp": 37, "reflect": [37, 38, 75, 89], "relationship": [37, 46, 62, 66, 88, 89, 98, 99, 103], "__doc__": 37, "splitlin": 37, "startswith": 37, "calcul": [37, 62, 66, 68, 85, 90, 99, 104], "base_gauss_vec": 37, "414": 37, "999698": 37, "64": [37, 41, 54, 63, 72], "ration": [37, 41, 79, 106], "represent": [37, 41, 49, 54, 63, 66, 67, 79, 80], "tight": [37, 41, 90], "truli": [37, 41, 90], "1074": [37, 41], "subnorm": [37, 41], "faster": [37, 41, 49, 76], "penalti": [37, 41, 66], "subsequ": [37, 41, 90], "plot": [37, 38, 46, 65, 66, 68, 98, 102, 103, 106], "matplotlib": [37, 38, 46, 65, 68, 98, 102, 103, 106], "pyplot": [37, 38, 46, 65, 68, 98, 102, 103, 106], "plt": [37, 38, 46, 65, 68, 98, 102, 103, 106], "num_sampl": 37, "fig": [37, 68], "ax": [37, 58, 68, 100, 103], "subplot": [37, 68], "nrow": 37, "ncol": 37, "figsiz": 37, "subplots_adjust": 37, "axi": [37, 46, 68, 87, 102, 103], "zip": [37, 40, 54, 68], "return_count": 37, "bar": [37, 66, 68, 91], "set_xtick": 37, "set_titl": 37, "set_ylabel": 37, "suptitl": 37, "increasingli": 37, "approach": [37, 38, 42, 48, 62, 64, 65, 90, 91, 94, 103, 104, 105], "penal": 37, "behavior": [37, 60, 62, 68, 70, 77, 79, 90, 94, 103], "1073": 37, "\u03b5_penalti": 37, "k_i": 37, "panda": [37, 45, 65, 66, 68, 99, 102, 103], "pd": [37, 45, 65, 66, 68, 99, 102, 103], "set_index": 37, "000000e": 37, "00": [37, 49, 93, 103], "940656e": 37, "324": 37, "888609e": 37, "31": 37, "01": [37, 41, 56, 57, 90, 93], "uniform": [38, 45, 87], "m_cnd": 38, "10k": 38, "hist": [38, 65], "200": [38, 68, 102], "suit": [38, 76], "california": [38, 100], "demograph": 38, "marriag": 38, "statu": [38, 48, 68, 75, 91, 93, 100, 103], "married_data": 38, "read_csv": [38, 99, 102, 103], "has_head": 38, "new_column": 38, "cast_default": 38, "behav": [38, 80], "canonical_nois": 38, "543": 38, "5862745175556": 38, "standalon": 38, "html": [38, 45], "__": 38, "binomial_s": 38, "1_000": [38, 65, 68, 99, 100], "502": 38, "87558450908193": 38, "0000000093132269": 38, "5e": 38, "draw": [38, 98, 102], "familiar": [38, 61, 67, 72, 77, 79, 80, 90, 98], "4608320830961166": 38, "5449190859220473": 38, "lower_ci": 38, "46834281999150473": 38, "tell": [38, 50, 58, 63, 97, 104], "p_value_marri": 38, "8861710889637788": 38, "unlik": [38, 50, 54, 65, 70, 92], "5569144555181105": 38, "highli": [38, 62, 95], "corrobor": 38, "strongli": 38, "4430855444818895": 38, "ump_test": 38, "1001": [38, 49, 68], "visual": [38, 46, 65, 66, 68, 91, 103], "overview": [39, 67, 76, 82, 108], "defint": 39, "exposit": 39, "alia": [39, 50, 52, 72, 90], "l0": [39, 41], "overlap": 39, "gumbel": [39, 45, 106], "meant": 40, "devic": [40, 95], "server": [40, 71, 76], "privileg": 40, "network": 40, "character": [40, 62, 79], "six": [40, 58, 100, 104], "wedg": 40, "_bernoulli": 40, "rr_bool_mea": 40, "alice_survey_respons": 40, "0986": 40, "rr_mea": 40, "197": 40, "num_respons": 40, "true_prob": 40, "private_bool_respons": 40, "randomized_respons": 40, "append": [40, 68, 102, 103], "naive_proport": 40, "naiv": [40, 98], "bia": [40, 48, 68, 70, 90, 91, 92, 96, 103], "rr": 40, "unbias": [40, 68], "x_i": [40, 104], "y_i": 40, "texttt": [40, 79], "_bool": 40, "_mea": 40, "align": [40, 46, 54, 55, 79, 91, 94], "distil": 40, "debias_randomized_response_bool": 40, "mean_releas": 40, "estimated_bool_proport": 40, "suffer": 40, "private_cat_respons": 40, "naive_cat_proport": 40, "cat": [40, 94, 95], "de": 40, "th": 40, "c_k": 40, "law": 40, "sum_": 40, "j": [40, 46], "ne": [40, 55], "c_j": 40, "Then": [40, 66, 71, 76, 84, 98], "raw": [40, 65, 99, 102, 103], "pk": 40, "debias_randomized_respons": 40, "ab": [40, 98], "estimated_cat_proport": 40, "bias": [40, 68], "estimated_bool_count": 40, "estimated_cat_count": 40, "astyp": [40, 45, 89, 102, 103], "magnitud": [41, 65, 66, 67, 70, 79, 91], "intuit": [41, 46, 58, 66, 98, 102], "look": [41, 45, 58, 61, 63, 76, 77, 80, 91, 97, 99, 102], "variou": [41, 93, 95], "delta_0": 41, "delta_1": [41, 63], "delta_": 41, "roughli": [41, 92, 94, 104], "delta_singl": 41, "m_lap": 41, "39": [41, 76, 89, 93, 103], "17307713885866": 41, "too": [41, 45, 65, 89, 91], "peopl": [41, 68, 77, 78, 91], "kind": [41, 49, 63, 65, 67, 70, 90, 91, 98], "\u03b4_0": 41, "\u03b4_1": 41, "\u03b4_": 41, "lap_eps_del": 41, "801398224505647e": 41, "carri": [41, 80, 98], "m_gauss": 41, "93198267967212": 41, "1102230246251565e": 41, "16": [41, 54, 70, 72, 94], "delta_2": [41, 63], "euclidean": [41, 58], "8e": 41, "fat": 41, "decai": 41, "quickli": [41, 66, 89, 103, 106], "comparison": [41, 55, 68, 90, 103], "\u03b4_2": 41, "m_gauss_profil": 41, "m_gauss_approx": 41, "3035767282855915": 41, "four": [41, 51, 61, 67, 80], "On": [41, 45, 63, 68, 70, 75, 91, 93, 95, 97, 106, 108], "aris": 41, "sensitivity_spread": 41, "001": [41, 102], "0316078580263621e": 41, "07": 41, "049969691134438526": 41, "world": [41, 45, 95, 108], "redund": [41, 104], "m_dlap": 41, "319000812207484e": 41, "m_dgauss": 41, "excerpt": 41, "built": [42, 62, 76, 97], "almost": 42, "own": [42, 43, 44, 45, 47, 66, 70, 71, 72, 75, 77, 78, 83, 85, 97, 98, 104, 108], "make_anything_const": 42, "anything_const": 42, "deni": [42, 44], "care": [42, 63, 95, 104], "happili": 42, "make_int_const": 42, "int_const": 42, "drawback": [42, 54, 65, 94], "hard": 42, "wide": 43, "itself": [43, 63, 67, 68, 70, 76, 106], "machineri": 43, "usual": [43, 54, 68, 80, 93, 94], "easier": [43, 62, 64, 70, 75, 81, 84, 91, 92, 98, 102], "idea": [43, 76, 83, 93, 104], "barrier": 43, "broader": [43, 102], "translat": [43, 58, 67, 80, 99], "thiel": 43, "mock": [44, 47, 60, 104], "make_base_const": 44, "interchang": [44, 47, 67, 72], "incorpor": [44, 68, 73, 99], "problem": [45, 70, 76, 77, 102, 105], "yourself": [45, 73, 77, 90, 91], "divers": 45, "final": [45, 46, 65, 75, 80, 83, 91, 93, 97], "appeal": [45, 94, 100], "make_grouping_cols_scor": 45, "min_bin_contribut": 45, "assess": [45, 82], "rough": 45, "heurist": [45, 65, 70], "groupbi": [45, 103], "pandasdomain": 45, "make_select_grouping_col": 45, "min_bin_s": 45, "idx": 45, "row_count": 45, "col_count": 45, "private_data": 45, "too_uniform_": 45, "randint": [45, 95, 102, 103], "too_diverse_": 45, "just_right_": 45, "itertool": 45, "powerset": 45, "recip": 45, "duplic": [45, 47], "from_iter": 45, "m_select_gcol": 45, "89": 45, "dp_selected_grouping_column": 45, "past": 46, "slope": 46, "ordinari": 46, "outlier": 46, "skew": [46, 65], "heteroskedast": 46, "wikipedia": 46, "slight": 46, "intercept": 46, "25th": 46, "75th": 46, "coeffici": 46, "x_cut": 46, "pairwise_predict": 46, "p1": 46, "p2": 46, "array_split": 46, "dx": 46, "dy": 46, "midpoint": 46, "x_bar": 46, "y_bar": 46, "degener": 46, "illustr": [46, 62, 95, 98], "ten": [46, 64, 92], "x_rang": 46, "titl": [46, 66, 75, 79, 102, 103], "scatter": [46, 91, 106], "vline": 46, "linestyl": [46, 68], "xlim": 46, "ylim": [46, 102], "y_predict": 46, "safe": [46, 62, 66, 70], "sai": [46, 61, 63, 66, 77, 98, 99, 100], "make_pairwise_predict": 46, "nx2": 46, "vstack": 46, "b_in": 46, "make_private_percentile_median": 46, "favor": 46, "m_median": [46, 106], "linspac": [46, 65, 106], "put": [46, 63, 100], "everyth": [46, 62, 76, 83], "make_private_theil_sen": 46, "luckili": [46, 70], "p_inv": 46, "linalg": [46, 65, 103], "inv": 46, "ones_lik": 46, "2xn": 46, "recalibr": 46, "reus": [46, 63, 90, 91], "y_fit": 46, "label": [46, 49, 54, 67, 68, 79, 91, 98, 103], "4f": 46, "color": [46, 68], "tab": 46, "orang": [46, 98], "legend": [46, 68, 91, 98, 103], "power": [46, 70, 102], "valuabl": 46, "serv": [46, 63], "foundat": [46, 93], "workflow": [46, 76, 82], "make_repeat": 47, "mix": 47, "think": [48, 60, 79, 98], "area": [48, 97, 98], "opportun": [48, 77], "henc": [48, 98], "pident": [48, 92, 93, 94], "150_000": [48, 52, 54, 55, 90, 91, 92, 94], "prefer": 48, "pai": [48, 54, 91, 93], "profit": [48, 54, 91, 93], "int_rang": [48, 92], "6400": [48, 92], "640": 48, "despit": 48, "unlimit": [48, 100], "year": [48, 54, 56, 57, 58, 91, 92, 93], "quarter": [48, 57, 58, 90, 91, 92, 93], "annalysi": 48, "quarterli": [48, 58, 90, 91, 92, 93], "1714": [48, 92], "best": [48, 65, 67, 75, 84, 89, 90, 93, 97, 100, 106], "unless": [48, 84], "contigu": 49, "arrow": 49, "bitmap": 49, "lack": 49, "certain": [49, 56, 60, 90, 104], "simplest": [49, 90, 100], "uint32": [49, 54], "uint64": 49, "int8": 49, "int16": 49, "int64": [49, 89, 98], "uint16": 49, "acquir": [49, 89, 100], "although": [49, 60, 104], "lost": [49, 103], "upon": [49, 56], "float32": 49, "float64": [49, 102], "presenc": [49, 54, 58, 76], "fill_nan": [49, 54], "slowest": 49, "to_phys": [49, 54], "unfortun": [49, 66, 90, 91, 98], "forbid": 49, "trigger": [49, 80], "remap": [49, 54], "accord": [49, 54, 58, 66, 67, 104], "latter": [49, 51], "context_categor": 49, "unreach": [49, 56], "err": [49, 56, 79], "enum_data": 49, "context_enum": 49, "alphalencatu32": 49, "quot": [49, 50, 52, 54, 76, 91], "999": 49, "apach": 49, "date": [49, 54, 79, 91], "datetim": [49, 54, 57], "nanosecond": [49, 56, 57], "microsecond": [49, 57], "ingest": 49, "2000": [49, 68, 102], "hour": [49, 54, 57, 90, 91, 93, 94], "2020": 49, "1500": 49, "2010": [49, 91], "timelentimeu3212": 49, "00100123": 49, "00100001": 49, "001001": 49, "dt": [49, 57], "recreat": [50, 90], "tabular": [50, 59, 82, 85, 90], "introduct": [50, 79, 80, 90, 105], "query_len_vari": 50, "columnaggregatedistributionscalestrstrstrf64": [50, 52, 54, 91], "360": [50, 90], "detect": 50, "sexlenhwusuali64u32u32219830911982182118297201827929": 50, "query_n_uniqu": 50, "180": [50, 58, 90], "hwusualu3218": 50, "unsign": [50, 63, 72, 79], "happen": [50, 67, 70, 100], "query_count": 50, "complementari": 50, "query_counts_via_group": 50, "is_nul": [50, 51], "hwusual_is_nul": 50, "hwusual_is_nulllenboolu32true20815false3791161": 50, "is_not_nul": [51, 54], "is_finit": 51, "is_not_finit": 51, "is_nan": 51, "is_not_nan": 51, "not_": 51, "bitwis": 51, "work_hours_col": 52, "hwactual": [52, 54], "single_expr": 52, "split_expr": 52, "4320": 52, "tempor": [53, 54, 56, 59, 60], "mixtur": [54, 55, 56, 91, 94], "correctli": [54, 68], "void": 54, "inexact": [54, 67, 104], "hundr": 54, "thousand": [54, 102], "14405": 54, "179857": 54, "14400": [54, 90], "insert": [54, 65], "anywher": 54, "broken": 54, "phase": 54, "break": [54, 79, 80, 91, 94, 106], "98": [54, 91, 93, 94, 102], "hwusuallencatu32null20821": 54, "6301": 54, "120536": 54, "1026242": 54, "292553": 54, "50896": 54, "2294405": 54, "spend": [54, 68, 89, 91], "cut_label": 54, "left_clos": [54, 94], "bl": 54, "br": 54, "144": [54, 91], "hwusuallencatu32": 54, "6128": 54, "120778": 54, "1026369": 54, "292365": 54, "50549": 54, "2295018": 54, "drop_nan": 54, "Not": [54, 90, 93], "confus": [54, 77], "drop_nul": [54, 65], "complic": [54, 65, 100], "mismatch": 54, "sure": [54, 76, 84], "retir": [54, 91], "65": 54, "14117": 54, "076259": 54, "broadcast": 54, "filler": 54, "recod": [54, 93], "14112": 54, "shown": [54, 63, 68, 80, 90, 94, 98], "replace_strict": 54, "pickier": 54, "fallibl": [54, 79, 80, 84], "15": [54, 65, 67, 91, 93, 98, 102], "ilostat_label": 54, "emploi": [54, 91, 103], "unemploi": 54, "columnaggregatedistributionscalethresholdstrstrstrf64u32": 54, "02973": 54, "enum": [54, 79], "hwusuallenu32u32059471120227210265733292395450680537962294845": 54, "link": [55, 63, 75, 76, 77, 79, 104], "and_": [55, 100], "over_40": 55, "sexover_40leni64boolu321false3373681true4395942false2963992true416626": 55, "to_dat": [56, 57], "to_datetim": 56, "to_tim": 56, "format": [56, 57, 60, 71, 79, 80, 99], "yearlendateu322005": 56, "013421932006": 56, "013396832007": 56, "013504292008": 56, "013485742009": 56, "014169662010": 56, "015003852011": 56, "015171662012": 56, "015154602013": 56, "01480615": 56, "lead": [56, 68, 75, 79, 91, 103], "situat": [56, 63, 66, 67, 68, 73, 102], "unstabl": 56, "reason": [56, 60, 61, 66, 70, 77, 80, 89, 90, 91, 93, 94, 98, 99, 100], "lf_date": 57, "concat_str": 57, "lit": 57, "iso_year": 57, "month": [57, 93, 95], "week": [57, 93], "weekdai": 57, "dai": 57, "ordinal_dai": 57, "minut": 57, "seen": [57, 80], "yearmonthleni32i8u32200538733920056865422005983517200512847462006386530": 57, "hellip": 57, "201212130903201331266982013612239620139115050201312116449": 57, "easili": [58, 100], "switch": 58, "labour": [58, 90, 91, 93], "perturb": [58, 63, 67, 70, 90, 98], "query_num_respons": [58, 90], "354": 58, "isn": [58, 79, 90, 102], "simplifi": [58, 66], "afford": [58, 95], "l_1": 58, "l_2": 58, "along": [58, 70], "taxicab": 58, "sens": [58, 79, 98], "travel": 58, "corner": 58, "crow": 58, "fli": 58, "opposit": 58, "grow": [58, 66, 89], "slowli": 58, "v": [58, 59, 66, 76, 80, 98], "worst": [58, 66, 67, 90, 92, 95], "hide": [58, 97], "attract": 58, "occur": [58, 76, 87], "cadenc": [58, 93], "littl": [58, 66, 90], "knowledg": [58, 67, 90, 95, 98, 100], "context_margin": 58, "184": 58, "contrast": [58, 61, 76, 103], "1133": 58, "fold": [58, 92], "reduct": 58, "dimens": 58, "explain": [58, 63, 65, 76, 83, 90, 94, 106, 107], "haven": 59, "review": [59, 72, 75, 97], "dive": [59, 66, 104], "materi": [59, 89, 106, 108], "realiti": 60, "somewhat": [60, 96], "mandatori": 60, "focus": [61, 75], "regardless": [61, 91], "arrang": 61, "determinist": [61, 62, 98], "snippet": [61, 84, 96], "talk": [61, 77], "assembl": 62, "softwar": [62, 75], "faith": 62, "rigor": [62, 97, 98], "highlight": [62, 80], "acquaint": [62, 90], "motiv": [62, 102, 103], "encourag": 62, "g": [62, 99], "constrain": [62, 80], "glue": 62, "possibli": [62, 80], "interdepend": 62, "programm": 62, "greatli": 62, "whole": [62, 90], "straightforward": 63, "f64_atom_domain": 63, "127": 63, "i32_bounded_domain": 63, "bool_vector_domain": 63, "bool_vector_2_domain": 63, "fewest": 63, "bundl": 63, "midwai": 63, "effort": [63, 77, 97], "provabl": 63, "clamper": [63, 67], "in_symmetric_dist": 63, "treatment": 63, "thorough": [63, 104], "d_x": 63, "d_y": 63, "whatev": [63, 76], "epsilon_1": 63, "incompar": 63, "epsilon_2": 63, "neither": [63, 93], "nor": [63, 93], "tightest": [63, 70], "speak": [63, 67, 70, 95, 98, 103], "surpris": 63, "bisect": 63, "sb_mean_tran": 64, "divis": [64, 68], "0000000000000169": 64, "particular": [64, 67, 72, 80, 93, 97, 102, 104], "resiz": [64, 95, 99], "count_mea": 64, "mean_mea": 64, "dp_fraction_mea": 64, "goe": [64, 75, 104], "techniqu": [65, 90, 102, 103], "realist": [65, 99], "seaborn": [65, 68, 100], "sn": [65, 68, 100], "displot": 65, "kde": 65, "true_quantil": 65, "tolist": [65, 68, 100, 106], "800778225846171": 65, "663246151408615": 65, "49926270360073": 65, "private_quantil": 65, "release_quantil": 65, "make_expo_quantil": 65, "t_pre": 65, "make_from_scal": 65, "m_expo_quantil": 65, "procedur": [65, 68, 70, 99], "land": 65, "scan": 65, "make_hist_quantil": 65, "num_bin": 65, "num": 65, "bin_nam": 65, "realli": [65, 71], "hist_quartiles_mea": 65, "945": 65, "73": [65, 103], "150000000000006": 65, "difficult": 65, "reach": [65, 66, 71, 87], "wider": 65, "slightli": [65, 66, 67, 91, 98], "recurs": [65, 71], "modif": [65, 68], "log_b": 65, "hyperparamet": 65, "26": 65, "lipschitz": 65, "make_tree_quantil": 65, "tree_quartiles_mea": 65, "963603570000425": 65, "090319791380644": 65, "162433994583424": 65, "baselin": [65, 68, 103], "sample_error": 65, "expo_err": 65, "log_2": [65, 66, 67], "average_error": 65, "num_trial": [65, 102, 103], "m_hist_quantil": 65, "m_tree_quantil": 65, "hist_err": 65, "tree_err": 65, "nb": 65, "250": 65, "750": 65, "Of": 65, "rapidli": 65, "pick": 65, "make_distribution_count": 65, "xlabel": [65, 68, 98, 100, 102, 103], "ylabel": [65, 66, 68, 98, 102, 103], "great": [65, 77, 80], "deep": [66, 72, 108], "easi": [66, 72, 79, 87, 97, 106], "widen": 66, "shift": [66, 70, 98], "regim": [66, 70], "stair": 66, "sized_bounded_sum": 66, "ieee": 66, "754": 66, "00000000004426": 66, "hit": 66, "snag": 66, "million": [66, 90], "degrad": 66, "000000093132268": 66, "unchang": 66, "save": 66, "unaffect": 66, "bake": 66, "00000000000295": 66, "relax": [66, 91], "isol": 66, "10_000_000": 66, "abil": 66, "sqlite": 66, "mysql": 66, "exhibit": [66, 103], "akin": 66, "bewar": 66, "strategi": [66, 67, 91], "1234": 66, "explan": [67, 72, 80, 83, 103], "compromis": 67, "codebook": [67, 91], "expertis": 67, "proper": [67, 73, 91], "peek": 67, "caster": 67, "tricki": 67, "manner": [67, 88], "propag": 67, "fed": 67, "bypass": 67, "da": 67, "relabel": 67, "word": [67, 75, 80, 98], "finder": 67, "binner": 67, "indici": 67, "2342": 67, "2k": 67, "sizeddomain": 67, "taken": 67, "downstream": [67, 85], "Such": [67, 102], "substitut": [67, 76], "make_sized_bounded_covari": 67, "loader": 67, "deeper": [67, 83], "addition": [67, 90], "mantissa": 67, "simul": [67, 68, 99, 100, 101], "leak": [68, 90, 108], "rare": 68, "diseas": 68, "var_nam": [68, 99, 100], "age_bound": [68, 99], "120": 68, "age_prior": 68, "38": 68, "averag": [68, 90, 100, 103], "genfromtxt": [68, 100], "delimit": [68, 100], "84811402354421": 68, "truthfulli": 68, "ballpark": 68, "dp_count_releas": 68, "make_mean_measur": 68, "target_s": 68, "dp_mean_releas": 68, "44": 68, "60152231817973": 68, "moreov": 68, "wherebi": 68, "went": 68, "therebi": 68, "intention": 68, "receiv": 68, "lower_n": 68, "real_n": 68, "higher_n": 68, "09883682992345": 68, "671207844903705": 68, "41": 68, "396972829360706": 68, "move": [68, 80, 81, 94, 98, 99], "helper": 68, "functool": [68, 102], "lru_cach": [68, 102], "maxsiz": [68, 102], "make_count_with": 68, "10000": [68, 87], "make_mean_with": 68, "mean_chain": 68, "make_sum_with": 68, "bounded_age_sum": 68, "n_simul": 68, "history_count": 68, "history_mean": 68, "count_chain": 68, "true_mean_ag": 68, "light": 68, "blue": [68, 98], "circl": [68, 98], "fillstyl": 68, "cornflowerblu": 68, "compute_expected_mean": 68, "expected_count": 68, "expected_mean": 68, "dark": 68, "dot": [68, 79, 102, 103], "indigo": 68, "red": [68, 76], "tomato": 68, "dash": 68, "unknow": 68, "tick": 68, "n_rang": 68, "2001": 68, "boxplot": 68, "axhlin": 68, "thankfulli": 68, "simpler": [68, 84, 93], "sometim": [68, 75], "plug": [68, 86, 96, 100], "solut": [68, 103], "agre": 68, "asymmetr": [68, 98], "history_plugin": 68, "history_res": 68, "resize_count": 68, "plugin_count": 68, "plugin_sum": 68, "resize_mean": 68, "kdeplot": 68, "linewidth": [68, 100], "forestgreen": 68, "leg": 68, "around": [68, 84, 91, 100, 103, 106], "manag": 69, "aid": 70, "primari": 70, "secondari": 70, "oftentim": 70, "act": 70, "7071067811865476": 70, "unnecessari": 70, "largest": 70, "414213562373095": 70, "353553389770093": 70, "locat": [70, 76, 77], "unkown": 70, "thrown": 70, "eight": 70, "logarithm": 70, "explor": [70, 97, 99, 104], "offset": 70, "intersect": 70, "outright": 70, "malform": 70, "claim": [70, 75, 77], "perhap": 71, "remot": [71, 97], "client": [71, 76], "dummi": 71, "new_context": 71, "new_queri": 71, "overridden": 71, "opendp_polars_lib_path": [71, 76], "environ": [71, 78, 79, 80, 84], "serialized_measur": 71, "fact": [71, 72, 90, 93], "serialized_domain": 71, "new_domain": 71, "__function__": 71, "json": 71, "discourag": 71, "serializ": 71, "trivial_user_domain": 71, "strict": 72, "implicit": [72, 79], "annot": [72, 80], "pattern": [72, 76, 84, 98], "modifi": 72, "qo": 72, "i128": 72, "u128": 72, "docstr": [72, 77], "aren": 72, "submiss": 73, "compani": [73, 95], "instruct": [73, 75, 88], "question": [73, 77, 79, 80, 99], "cla": 73, "behalf": 73, "request": [74, 76, 79, 91, 93, 100], "send": [74, 80], "email": 74, "slack": [74, 87], "mail": 74, "anticip": [75, 76, 100], "bot": [75, 79], "autom": 75, "verif": 75, "tag": 75, "head": 75, "codebas": 75, "fork": [75, 76], "verb": 75, "123": [75, 84, 102], "typo": 75, "readm": [75, 76], "retitl": 75, "script": [75, 76], "changelog": 75, "backlog": 75, "narrowli": 75, "But": 75, "bigger": 75, "prerequisit": 75, "obviou": 75, "cours": [75, 108], "straight": 75, "main": [75, 84, 93, 102, 103], "partner": 75, "experi": [75, 76, 93, 95], "graphit": 75, "team": 75, "engin": 75, "regular": [75, 104], "disabl": [75, 76, 103], "confirm": 75, "patient": 75, "credit": [75, 91], "crate": [75, 76, 79], "io": 75, "pypi": [75, 84], "task": 76, "tackl": [76, 77], "languag": [76, 79, 104], "repositori": [76, 79], "directori": [76, 79, 84], "git": [76, 79], "cd": 76, "ssh": 76, "toolchain": 76, "latest": [76, 79], "rustup": 76, "subdirectori": 76, "compil": [76, 79, 80, 84], "platform": [76, 97], "runn": 76, "openssl": 76, "untrust": 76, "command": [76, 80], "foreign": 76, "creation": [76, 97], "libpython": 76, "then_": [76, 104], "mode": 76, "opendp_test_releas": 76, "loop": 76, "regener": 76, "virtual": 76, "conda": 76, "python3": 76, "venv": 76, "dev": [76, 84], "txt": 76, "reinstal": 76, "src": [76, 79, 80], "folder": [76, 80, 99], "restart": [76, 80], "kernel": [76, 80], "oserror": 76, "dlopen": 76, "mach": 76, "architectur": 76, "rustc": 76, "vv": 76, "mac": 76, "m1": 76, "x86_64": 76, "gone": 76, "bunch": 76, "57": 76, "02": [76, 102], "forget": 76, "quick": [76, 80, 83, 103], "websit": 76, "sphinx": [76, 77], "export": 76, "opendp_lib_dir": 76, "realpath": 76, "maco": 76, "gui": 76, "tcl": 76, "smoothest": 76, "brew": 76, "harfbuzz": 76, "fribidi": 76, "libgit2": 76, "xquartz": 76, "devtool": 76, "rcpptoml": 76, "lintr": 76, "load_al": 76, "recompil": 76, "r_stage": 76, "sh": 76, "amp": 76, "rscript": 76, "restor": 76, "manual": 76, "cmd": 76, "opendp_": 76, "tar": 76, "gz": 76, "cran": 76, "roxygen": 76, "man": 76, "comment": [76, 77, 80, 91], "pkgdown": 76, "render": [76, 94], "md": 76, "latex": 76, "templat": 76, "precondit": 76, "pseudocod": 76, "postcondit": 76, "overrid": 76, "stale": 76, "_lib": 76, "lib_path": 76, "opendp_headless": 76, "opendp_sphinx_port": 76, "opendp_sphinx_uri": 76, "host": 76, "uri": 76, "port": 76, "localhost": 76, "site": [76, 77, 79], "opendp_rustdoc_port": 76, "opendp_rustdoc_uri": 76, "rustdoc": [76, 77, 79], "intellij": 76, "sublim": 76, "comfort": 76, "panel": 76, "live": 76, "workshop": [76, 79], "cp": 76, "vscode": [76, 79], "codewithm": 76, "attach": 76, "banner": 76, "welcom": 77, "guidelin": 77, "usabl": 77, "invest": 77, "chanc": 77, "board": 77, "ask": [77, 80, 100], "clarifi": 77, "revis": 77, "ownership": 77, "embed": 77, "benchmark": 77, "stochast": 77, "tester": 77, "ey": 77, "focu": [78, 84], "consult": 78, "contributor": 78, "licens": 78, "agreement": 78, "goal": 79, "bodi": [79, 80], "trait": [79, 80], "themselv": 79, "proven": [79, 98], "hoar": 79, "tripl": 79, "esqu": 79, "exploit": 79, "sharpli": 79, "argu": 79, "macro": [79, 80], "fn": [79, 80, 84], "infsub": 79, "alertingab": 79, "inf_sub": 79, "alerting_ab": 79, "exactli": [79, 99, 106], "backtrac": 79, "exit": 79, "derefer": 79, "clone": [79, 80], "tex": 79, "documentclass": 79, "articl": 79, "overleaf": 79, "lib": 79, "sty": 79, "boilerpl": 79, "_distanc": 79, "author": [79, 97, 108], "maketitl": 79, "asofcommit": 79, "f5bb719": 79, "subsect": 79, "vettingpr": 79, "519": 79, "commit_hash": 79, "commit": [79, 80, 90], "log": [79, 98, 102], "pretti": 79, "h": 79, "proofwrit": 79, "footnot": 79, "permalink": 79, "pr_number": 79, "pull": [79, 91], "docsr": 79, "validtransform": 79, "input_argu": 79, "function_nam": 79, "validmeasur": 79, "shell": 79, "escap": 79, "pdflatex": 79, "synctex": 79, "nonstopmod": 79, "aux": 79, "advic": 79, "artifact": 79, "intent": [79, 104], "1i32": 79, "2i32": 79, "bignum": 79, "strictli": [79, 80], "lstlist": 79, "escapechar": 79, "leverag": [79, 102, 103], "met": 79, "text": 79, "stuck": 79, "abus": 79, "widget": 79, "book": 80, "surfac": 80, "default_cast_tran": 80, "struct": [80, 92], "chapter": 80, "pub": [80, 103], "stabilitymap": 80, "partialeq": 80, "closur": 80, "456": 80, "ship": 80, "did": [80, 91, 93, 99, 100], "compat": [80, 89, 93, 104], "ultim": [80, 84], "input_domain_1": 80, "output_domain_1": 80, "input_domain_2": 80, "output_domain_2": 80, "function_1": 80, "function_2": 80, "input_metric_1": 80, "output_metric_1": 80, "input_metric_2": 80, "output_metric_2": 80, "stability_map_1": 80, "stability_map_2": 80, "prefix": 80, "checknul": 80, "roundcast": 80, "datasetmetr": 80, "metricspac": 80, "round_cast": 80, "unwrap_or_default": 80, "new_from_const": 80, "colon": 80, "claus": 80, "cloneabl": 80, "anonym": 80, "privacymap": 80, "properli": 80, "button": 80, "gitignor": 80, "scratch": 80, "decor": 80, "bootstrap": 80, "hesit": 80, "room": 80, "accompani": 80, "plai": 80, "nice": 80, "rustfmt": 80, "meaningfulli": 80, "elsewher": 81, "wizard": [82, 108], "quickstart": 82, "tour": 83, "touch": 83, "dure": [84, 93], "launch": 84, "repo": 84, "init": 84, "pin": 84, "laplace_mechan": 84, "dp_valu": 84, "new_non_nan": 84, "println": 84, "aka": [84, 89], "unsur": 85, "analys": [85, 108], "sample_microdata": 87, "num_row": 87, "cov": 87, "sample_covari": 87, "multivariate_norm": 87, "100_000": 87, "num_featur": 87, "example_dataset": 87, "introspect": 87, "singular_values_": 87, "2e": 88, "mayb": 89, "num_unknown": 89, "eighth": 89, "227": 89, "68399153212334": 89, "1364": 89, "third": 89, "uncommon": 89, "infrequ": 89, "absorb": 89, "1515729": 89, "155912": 89, "1450748": 89, "689452": 89, "109": 89, "melt": 89, "5157e6": 89, "156011": 89, "15206": 89, "4509e6": 89, "689551": 89, "39267": 89, "119": 89, "022842": 89, "446": 89, "2524232592843": 89, "1270561": 89, "table2": 89, "1828251": 89, "1982295": 89, "1228": 89, "113": 89, "84199576606166": 89, "fashion": 89, "eager": 90, "539": 90, "731115": 90, "math": 90, "829": 90, "429939": 90, "justifi": 90, "instabl": 90, "rememb": [90, 91, 92, 104, 106], "achiev": [90, 97], "household": [90, 95], "150": 90, "inconsequenti": 90, "undermin": 90, "query_work_hour": [90, 91], "35": 90, "fulfil": 90, "weekli": 90, "43139": 90, "04473": 90, "400": [90, 102], "though": [90, 91, 99, 100], "seem": [90, 91, 100], "retrospect": 90, "quit": [90, 99], "nearli": [90, 103], "43k": 90, "imprecis": 90, "28800": 90, "86277": 90, "589474": 90, "1078": 90, "963271": 90, "twice": [90, 106], "context_bounded_dp": 90, "metadata": 90, "query_mean_work_hour": 90, "terminologi": 90, "7200": 90, "21569": 90, "772352": 90, "recap": 90, "query_median_hour": 90, "exponentialmin": 90, "query_multi_quantil": 90, "3240": 90, "1080": 90, "judg": [90, 91], "examin": 91, "hvplot": 91, "card": 91, "catastroph": 91, "identif": 91, "accomplish": 91, "benign": [91, 100], "latanya": 91, "sweenei": 91, "reidentifi": 91, "governor": 91, "massachusett": 91, "healthcar": [91, 97], "disappear": 91, "worker": [91, 93], "query_age_ilostat": 91, "columnaggregatedistributionscaleaccuracythresholdstrstrstrf64f64u32": 91, "0431": 91, "8845792773": 91, "young": 91, "adult": 91, "lai": [91, 93], "youngest": 91, "graph": [91, 95, 98, 102], "employ": 91, "rewrit": [91, 104], "clear": 91, "weaken": 91, "reluct": 91, "absenc": 91, "constitut": 91, "bureau": [91, 102, 103], "query_quarterly_count": 91, "columnaggregatedistributionscaleaccuracystrstrstrf64f64": 91, "884579": 91, "errorbar": 91, "yerr1": 91, "spite": 91, "2008": 91, "declar": 91, "risk": [91, 95, 102], "damag": 91, "lf_preprocess": 91, "gender": 91, "1764": 91, "05284": 91, "97166": 91, "0nan": 91, "7056": 91, "disaggreg": 91, "conceal": [91, 95, 106], "hstack": 91, "sex_str": 91, "male": [91, 93], "femal": [91, 93, 103], "sexsex_strhwusuali64strf641": 91, "773282": 91, "22547": 91, "signal": [91, 103], "poor": 91, "excess": 91, "mislead": 91, "speedup": 91, "mediat": [91, 100], "kept": [92, 98], "nine": 92, "rank": 92, "dens": 92, "1872": 93, "eurostat": 93, "european": 93, "tradit": [93, 99], "disclosur": [93, 102, 103], "suppress": 93, "chose": [93, 106], "realism": 93, "studi": [93, 108], "famili": 93, "conscript": 93, "compulsori": 93, "militari": 93, "servic": 93, "job": [93, 97], "busi": [93, 97], "he": [93, 102], "she": 93, "absent": 93, "consider": [93, 94, 95], "blank": 93, "abstain": 93, "delet": 93, "del": [93, 100], "topic": 93, "seldom": 94, "query_hwusual_bin": 94, "shadow": 94, "mask": [94, 103], "query_total_hours_work": 94, "17280": 94, "576": 94, "context_pid": 94, "480": 94, "nevertheless": 94, "broadli": [95, 98, 103], "medium": 95, "id": 95, "varieti": 95, "harm": 95, "ethic": 95, "legal": 95, "oblig": 95, "custodian": 95, "proxi": 95, "customari": [95, 98], "thumb": [95, 100], "deploy": [95, 97, 108], "registri": [95, 108], "privacy_measur": 95, "imputed_valu": 95, "m_sc": 95, "runif": 95, "100l": 95, "rep": 95, "count_queri": 95, "0000000000000004": 95, "445721638273584": 95, "count_transform": 95, "count_sensit": 95, "count_measur": 95, "mean_queri": 95, "mean_transform": 95, "mean_measur": 95, "challeng": 96, "navig": 96, "compens": 96, "kmr": 96, "unavoid": 96, "020426913849308": 96, "inject": 97, "background": [97, 98], "handbook": 97, "administr": [97, 108], "evid": 97, "resourc": [97, 98, 105], "differentialprivaci": 97, "shorter": [97, 104], "co": [97, 108], "architect": [97, 108], "solid": 97, "safeti": 97, "audit": 97, "corpor": 97, "fairli": 97, "sql": 97, "ml": 97, "smartnois": 97, "sdk": 97, "tech": 97, "un": 97, "commission": 97, "refuge": 97, "unhcr": 97, "swiss": 97, "feder": 97, "offic": 97, "loma": 97, "oblivi": 97, "telecom": 97, "pilot": 97, "antigranular": 97, "openmin": 97, "pysyft": 97, "microsoft": 97, "dailymot": 97, "nation": 97, "broadband": [97, 108], "percentag": 97, "databas": 97, "harvard": [97, 102, 108], "atla": 97, "internet": 97, "substanti": 97, "dispar": 97, "urban": 97, "rural": 97, "citi": 97, "liveramp": 97, "covid": 97, "christchurch": 97, "fundament": 97, "perspect": 98, "alic": [98, 102], "jane": 98, "john": 98, "jack": 98, "multiset": 98, "sym": 98, "sum_x": 98, "u_i": 98, "v_i": 98, "And": 98, "d_symmetricdist": 98, "NOT": 98, "lose": 98, "symmetric_differ": 98, "indirectli": 98, "stipul": 98, "sim_": 98, "asid": 98, "rv": 98, "bother": [98, 103], "arang": [98, 102], "rv_m": 98, "scipi": 98, "stat": 98, "plot_pdf": 98, "p_": 98, "prop": 98, "dissimilar": 98, "limits_": 98, "equat": 98, "randomli": [98, 102], "plot_": 98, "fill_between": 98, "divergence_over_": 98, "pr_mu_in_": 98, "pr_mv_in_": 98, "2867171279172761": 98, "3978533407816897": 98, "32758733417005853": 98, "hypothet": 98, "u_prim": 98, "008486665039311609": 98, "8475873341700586": 98, "came": 98, "moreso": 98, "qualifi": 98, "immun": 98, "foral": 98, "quad": 98, "bigl": 98, "bigr": 98, "crucial": 98, "boldsymbol": 98, "textbf": 98, "induc": 98, "particip": 98, "mostli": 98, "formul": 98, "ambigu": 98, "reclaim": 98, "d_ab": 98, "attain": 98, "clamped_sum_0_12": 98, "_sum": 98, "_0": 98, "_12": 98, "conceiv": 98, "_nois": 98, "laplace_nois": 98, "block": 98, "m_": 98, "t_": 98, "t_2": 98, "t_1": 98, "laplace_sum": 98, "48": [98, 102], "takeawai": 98, "encapsul": 98, "clamped_sum_0_12_map": 98, "repackag": 98, "laplace_noise_map": 98, "laplace_sum_map": 98, "nontrivi": 98, "especi": 98, "trip": 99, "phi": 99, "phi_": 99, "deal": 99, "tild": 99, "drawn": 99, "extent": 99, "empir": 99, "plausibl": 99, "pid": 99, "d_mean_ag": 99, "read_text": 99, "n_sim": 99, "d_tilde_mean_ag": 99, "make_mean_aggreg": 99, "mean_aggreg": 99, "d_tild": 99, "var": 99, "jm": 99, "40wztt291610f8pk5w0sw20r0000gq": 99, "ipykernel_31426": 99, "793901930": 99, "py": 99, "27": 99, "deprecationwarn": 99, "staticmethod": 99, "29": [99, 102, 103], "2996": 99, "94": [99, 102], "93": 99, "scenario": 99, "1050": 99, "diagnost": 99, "knew": 99, "1_050": 99, "d_tilde_mean": 99, "2853": 99, "68": 99, "wors": [99, 103], "mitig": [100, 101, 107], "data_path": 100, "target_incom": 100, "deduc": 100, "n_individu": 100, "mean_non_target": 100, "reconstruct_incom": 100, "reconstruct": [100, 101, 105], "recovered_incom": 100, "suspici": 100, "hidden": 100, "imposs": 100, "curat": 100, "auxiliari": 100, "with_column_nam": 100, "infer_schema_length": 100, "sneakili": 100, "everyon": 100, "or_": 100, "200_000": 100, "dp_non_target_incom": 100, "dp_target_incom": 100, "wildli": 100, "inaccur": 100, "2727592": 100, "couldn": 100, "nonetheless": 100, "34414": 100, "4984984985": 100, "31684": 100, "176176176177": 100, "70_000": 100, "32893": 100, "craft": 100, "hat": 100, "student": 100, "m_target_incom": 100, "histplot": 100, "edgecolor": 100, "black": [100, 103], "my": 100, "wasn": 100, "figur": [100, 102], "differenc": [101, 105], "sequest": [102, 103], "pose": 102, "dssuv": 102, "traceabl": 102, "american": [102, 103], "ac": [102, 103], "seed": 102, "gist": 102, "membership_attack_fig_1": 102, "reference_sampl": 102, "dwork": 102, "privacytool": 102, "sea": 102, "edu": 102, "alice_similar": 102, "cosin": 102, "reference_similar": 102, "tau": 102, "membership_attack_fig_2": 102, "eta": [102, 106], "mont": 102, "carlo": 102, "simplic": 102, "githubusercont": [102, 103], "cs208": [102, 103], "spring2022": [102, 103], "fultonpums5sample100": 102, "make_boolean_project": 102, "prime": [102, 103], "691": [102, 103], "desc": [102, 103], "modulu": [102, 103], "sample_s": 102, "rest": 102, "iloc": 102, "execute_exact_queri": 102, "medic": 102, "poll": 102, "polit": 102, "parti": 102, "strength": 102, "sequestered_data": 102, "inconclus": 102, "4000": 102, "true_": 102, "anita": 102, "false_": 102, "simulate_attack": 102, "membership_attack": 102, "reference_s": 102, "num_pred": 102, "fp_result": 102, "tp_result": 102, "fp": 102, "tp": 102, "start_tim": 102, "plot_fpr_tpr": 102, "fpr": 102, "tpr": 102, "84": 102, "600": 102, "496": 102, "800": 102, "897": 102, "995": 102, "084": 102, "21": 102, "1200": 102, "37": 102, "1400": 102, "51": 102, "1600": 102, "63": 102, "1800": 102, "67": 102, "2200": 102, "79": 102, "2400": 102, "86": 102, "2600": 102, "2800": 102, "3000": 102, "3200": 102, "3400": 102, "3600": 102, "3800": 102, "execute_dp_queri": 102, "find_mea": 102, "num_queri": 102, "epsilon_p": 102, "exact_aggreg": 102, "47": 102, "54": 102, "49": 102, "46": 102, "thwart": 102, "coin": 102, "citizen": 103, "fultonpums5reconstruct": 103, "latino": 103, "asian": 103, "divorc": 103, "militaryservic": 103, "english": 103, "uscitizen": 103, "execute_subsetsums_exact": 103, "resembl": 103, "pred": 103, "reconstruction_attack": 103, "data_pub": 103, "lstsq": 103, "rcond": 103, "scheme": 103, "make_random_pred": 103, "random_pred": 103, "num_citizens_that_matched_random_pred": 103, "random_predicate_mask": 103, "readi": 103, "exact_answ": 103, "reconstructed_target": 103, "perfectli": 103, "citizenship": 103, "execute_subsetsums_round": 103, "execute_subsetsums_nois": 103, "sigma": 103, "execute_subsetsums_sampl": 103, "sub_data": 103, "rmse": 103, "compute_accuracy_reconstruct": 103, "compute_rmse_answ": 103, "evaluate_perform": 103, "interface_nam": 103, "predicates_temp": 103, "spot": 103, "perf": 103, "072": 103, "62": 103, "289": 103, "surprisingli": 103, "evaluate_all_perform": 103, "all_perf": 103, "reset_index": 103, "inplac": 103, "stratifi": 103, "defens": 103, "pronounc": 103, "invers": 103, "strang": 103, "max_influ": 103, "bring": 104, "modular": 104, "ubiquit": 104, "ecosystem": 104, "bounded_mock_dataset": 104, "forward": 104, "mock_dataset": 104, "compound": 104, "breez": 104, "successor": 104, "pitfal": 105, "quantile_score_candid": 106, "golf": 106, "t_median_scor": 106, "nearer": 106, "l_": 106, "m_select_scor": 106, "noisy_index": 106, "fiftieth": 106, "fortun": 106, "7071": 106, "digit": 106, "7071067811865475": 106, "trickier": 106, "primer": 108, "technic": 108, "audienc": 108, "jupyt": 108, "confidenti": 108, "snap": 108, "converg": 108, "gradient": 108, "feasibl": 108, "tax": 108}, "objects": {"": [[2, 0, 0, "-", "opendp"]], "opendp": [[3, 0, 0, "-", "accuracy"], [4, 0, 0, "-", "combinators"], [5, 0, 0, "-", "context"], [6, 0, 0, "-", "core"], [7, 0, 0, "-", "domains"], [8, 0, 0, "-", "extras"], [18, 0, 0, "-", "measurements"], [19, 0, 0, "-", "measures"], [20, 0, 0, "-", "metrics"], [21, 0, 0, "-", "mod"], [22, 0, 0, "-", "prelude"], [23, 0, 0, "-", "transformations"], [24, 0, 0, "-", "typing"]], "opendp.accuracy": [[3, 1, 1, "", "accuracy_to_discrete_gaussian_scale"], [3, 1, 1, "", "accuracy_to_discrete_laplacian_scale"], [3, 1, 1, "", "accuracy_to_gaussian_scale"], [3, 1, 1, "", "accuracy_to_laplacian_scale"], [3, 1, 1, "", "discrete_gaussian_scale_to_accuracy"], [3, 1, 1, "", "discrete_laplacian_scale_to_accuracy"], [3, 1, 1, "", "gaussian_scale_to_accuracy"], [3, 1, 1, "", "laplacian_scale_to_accuracy"], [3, 1, 1, "", "summarize_polars_measurement"]], "opendp.combinators": [[4, 1, 1, "", "make_adaptive_composition"], [4, 1, 1, "", "make_approximate"], [4, 1, 1, "", "make_basic_composition"], [4, 1, 1, "", "make_chain_mt"], [4, 1, 1, "", "make_chain_pm"], [4, 1, 1, "", "make_chain_tt"], [4, 1, 1, "", "make_composition"], [4, 1, 1, "", "make_fix_delta"], [4, 1, 1, "", "make_fixed_approxDP_to_approxDP"], [4, 1, 1, "", "make_fully_adaptive_composition"], [4, 1, 1, "", "make_population_amplification"], [4, 1, 1, "", "make_privacy_filter"], [4, 1, 1, "", "make_pureDP_to_zCDP"], [4, 1, 1, "", "make_select_private_candidate"], [4, 1, 1, "", "make_sequential_composition"], [4, 1, 1, "", "make_zCDP_to_approxDP"], [4, 1, 1, "", "then_adaptive_composition"], [4, 1, 1, "", "then_fully_adaptive_composition"], [4, 1, 1, "", "then_sequential_composition"]], "opendp.context": [[5, 2, 1, "", "Context"], [5, 2, 1, "", "PartialChain"], [5, 2, 1, "", "Query"], [5, 1, 1, "", "domain_of"], [5, 1, 1, "", "loss_of"], [5, 1, 1, "", "metric_of"], [5, 1, 1, "", "register"], [5, 1, 1, "", "space_of"], [5, 1, 1, "", "unit_of"]], "opendp.context.Context": [[5, 3, 1, "", "accountant"], [5, 4, 1, "", "compositor"], [5, 4, 1, "", "current_privacy_loss"], [5, 4, 1, "", "deserialize_polars_plan"], [5, 4, 1, "", "query"], [5, 3, 1, "", "queryable"], [5, 4, 1, "", "remaining_privacy_loss"]], "opendp.context.PartialChain": [[5, 4, 1, "", "fix"], [5, 3, 1, "", "partial"], [5, 4, 1, "", "wrap"]], "opendp.context.Query": [[5, 4, 1, "", "compositor"], [5, 4, 1, "", "new_with"], [5, 4, 1, "", "param"], [5, 4, 1, "", "release"], [5, 4, 1, "", "resolve"]], "opendp.core": [[6, 1, 1, "", "function_eval"], [6, 1, 1, "", "measurement_check"], [6, 1, 1, "", "measurement_function"], [6, 1, 1, "", "measurement_input_carrier_type"], [6, 1, 1, "", "measurement_input_distance_type"], [6, 1, 1, "", "measurement_input_domain"], [6, 1, 1, "", "measurement_input_metric"], [6, 1, 1, "", "measurement_invoke"], [6, 1, 1, "", "measurement_map"], [6, 1, 1, "", "measurement_output_distance_type"], [6, 1, 1, "", "measurement_output_measure"], [6, 1, 1, "", "new_function"], [6, 1, 1, "", "new_queryable"], [6, 1, 1, "", "odometer_input_carrier_type"], [6, 1, 1, "", "odometer_input_domain"], [6, 1, 1, "", "odometer_input_metric"], [6, 1, 1, "", "odometer_invoke"], [6, 1, 1, "", "odometer_output_measure"], [6, 1, 1, "", "odometer_queryable_invoke"], [6, 1, 1, "", "odometer_queryable_invoke_type"], [6, 1, 1, "", "odometer_queryable_privacy_loss"], [6, 1, 1, "", "odometer_queryable_privacy_loss_type"], [6, 1, 1, "", "queryable_eval"], [6, 1, 1, "", "queryable_query_type"], [6, 1, 1, "", "transformation_check"], [6, 1, 1, "", "transformation_function"], [6, 1, 1, "", "transformation_input_carrier_type"], [6, 1, 1, "", "transformation_input_distance_type"], [6, 1, 1, "", "transformation_input_domain"], [6, 1, 1, "", "transformation_input_metric"], [6, 1, 1, "", "transformation_invoke"], [6, 1, 1, "", "transformation_map"], [6, 1, 1, "", "transformation_output_distance_type"], [6, 1, 1, "", "transformation_output_domain"], [6, 1, 1, "", "transformation_output_metric"]], "opendp.domains": [[7, 1, 1, "", "array_domain"], [7, 1, 1, "", "atom_domain"], [7, 1, 1, "", "bitvector_domain"], [7, 1, 1, "", "categorical_domain"], [7, 1, 1, "", "datetime_domain"], [7, 1, 1, "", "domain_carrier_type"], [7, 1, 1, "", "domain_debug"], [7, 1, 1, "", "domain_type"], [7, 1, 1, "", "enum_domain"], [7, 1, 1, "", "lazyframe_domain"], [7, 1, 1, "", "map_domain"], [7, 1, 1, "", "option_domain"], [7, 1, 1, "", "series_domain"], [7, 1, 1, "", "user_domain"], [7, 1, 1, "", "vector_domain"], [7, 1, 1, "", "wild_expr_domain"], [7, 1, 1, "", "with_margin"]], "opendp.extras": [[9, 0, 0, "-", "examples"], [10, 0, 0, "-", "mbi"], [11, 0, 0, "-", "numpy"], [13, 0, 0, "-", "polars"], [15, 0, 0, "-", "sklearn"]], "opendp.extras.examples": [[9, 1, 1, "", "get_california_pums_path"], [9, 1, 1, "", "get_france_lfs_path"]], "opendp.extras.mbi": [[10, 2, 1, "", "AIM"], [10, 2, 1, "", "Algorithm"], [10, 2, 1, "", "ContingencyTable"], [10, 2, 1, "", "Count"], [10, 2, 1, "", "Fixed"], [10, 2, 1, "", "MST"], [10, 2, 1, "", "Sequential"], [10, 1, 1, "", "make_contingency_table"], [10, 1, 1, "", "mirror_descent"]], "opendp.extras.mbi.AIM": [[10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "max_size"], [10, 3, 1, "", "measure_split"], [10, 3, 1, "", "queries"], [10, 3, 1, "", "rounds"]], "opendp.extras.mbi.Algorithm": [[10, 4, 1, "", "estimator"], [10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "oneway"], [10, 3, 1, "", "oneway_split"]], "opendp.extras.mbi.ContingencyTable": [[10, 3, 1, "", "cuts"], [10, 3, 1, "", "keys"], [10, 3, 1, "", "marginals"], [10, 3, 1, "", "model"], [10, 4, 1, "", "project"], [10, 4, 1, "", "project_melted"], [10, 3, 1, "", "schema"], [10, 4, 1, "", "std"], [10, 4, 1, "", "synthesize"], [10, 3, 1, "", "thresholds"]], "opendp.extras.mbi.Count": [[10, 3, 1, "", "by"], [10, 3, 1, "", "weight"]], "opendp.extras.mbi.Fixed": [[10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "oneway"], [10, 3, 1, "", "queries"]], "opendp.extras.mbi.MST": [[10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "measure_split"], [10, 3, 1, "", "num_selections"]], "opendp.extras.mbi.Sequential": [[10, 3, 1, "", "algorithms"], [10, 4, 1, "", "make_marginals"], [10, 3, 1, "", "weights"]], "opendp.extras.numpy": [[11, 2, 1, "", "NPArray2Domain"], [11, 2, 1, "", "NPArrayDDomain"], [11, 1, 1, "", "array2_domain"], [11, 1, 1, "", "arrayd_domain"], [12, 0, 0, "-", "canonical"]], "opendp.extras.numpy.NPArray2Domain": [[11, 3, 1, "", "T"], [11, 3, 1, "", "cardinalities"], [11, 3, 1, "", "nan"], [11, 3, 1, "", "norm"], [11, 3, 1, "", "num_columns"], [11, 3, 1, "", "origin"], [11, 3, 1, "", "p"], [11, 3, 1, "", "size"]], "opendp.extras.numpy.NPArrayDDomain": [[11, 3, 1, "", "T"], [11, 3, 1, "", "shape"]], "opendp.extras.numpy.canonical": [[12, 2, 1, "", "BinomialCND"], [12, 1, 1, "", "one_sided_confidence_interval"], [12, 1, 1, "", "one_sided_pvalue"], [12, 1, 1, "", "one_sided_uniformly_most_powerful_tests"], [12, 1, 1, "", "two_sided_confidence_interval"], [12, 1, 1, "", "two_sided_pvalue"]], "opendp.extras.numpy.canonical.BinomialCND": [[12, 4, 1, "", "confidence_interval"], [12, 4, 1, "", "p_value"]], "opendp.extras.polars": [[13, 2, 1, "", "Bound"], [13, 2, 1, "", "DPExpr"], [13, 2, 1, "", "LazyFrameQuery"], [13, 2, 1, "", "LazyGroupByQuery"], [13, 2, 1, "", "Margin"], [13, 2, 1, "", "OnceFrame"], [13, 2, 1, "", "SortBy"], [14, 0, 0, "-", "contingency_table"], [13, 1, 1, "", "dp_len"]], "opendp.extras.polars.Bound": [[13, 3, 1, "", "by"], [13, 3, 1, "", "num_groups"], [13, 3, 1, "", "per_group"]], "opendp.extras.polars.DPExpr": [[13, 4, 1, "", "count"], [13, 4, 1, "", "gaussian"], [13, 4, 1, "", "laplace"], [13, 4, 1, "", "len"], [13, 4, 1, "", "mean"], [13, 4, 1, "", "median"], [13, 4, 1, "", "n_unique"], [13, 4, 1, "", "noise"], [13, 4, 1, "", "null_count"], [13, 4, 1, "", "quantile"], [13, 4, 1, "", "sum"]], "opendp.extras.polars.LazyFrameQuery": [[13, 4, 1, "", "contingency_table"], [13, 4, 1, "", "filter"], [13, 4, 1, "", "group_by"], [13, 4, 1, "", "join"], [13, 4, 1, "", "release"], [13, 4, 1, "", "resolve"], [13, 4, 1, "", "select"], [13, 4, 1, "", "select_seq"], [13, 4, 1, "", "sort"], [13, 4, 1, "", "summarize"], [13, 4, 1, "", "truncate_num_groups"], [13, 4, 1, "", "truncate_per_group"], [13, 4, 1, "", "with_columns"], [13, 4, 1, "", "with_columns_seq"], [13, 4, 1, "", "with_keys"]], "opendp.extras.polars.LazyGroupByQuery": [[13, 4, 1, "", "agg"]], "opendp.extras.polars.Margin": [[13, 3, 1, "", "by"], [13, 3, 1, "", "invariant"], [13, 3, 1, "", "max_groups"], [13, 3, 1, "", "max_influenced_partitions"], [13, 3, 1, "", "max_length"], [13, 3, 1, "", "max_num_partitions"], [13, 3, 1, "", "max_partition_contributions"], [13, 3, 1, "", "max_partition_length"], [13, 3, 1, "", "public_info"]], "opendp.extras.polars.OnceFrame": [[13, 4, 1, "", "collect"], [13, 4, 1, "", "lazy"]], "opendp.extras.polars.SortBy": [[13, 3, 1, "", "by"], [13, 3, 1, "", "descending"], [13, 3, 1, "", "maintain_order"], [13, 3, 1, "", "multithreaded"], [13, 3, 1, "", "nulls_last"]], "opendp.extras.polars.contingency_table": [[14, 2, 1, "", "ContingencyTableQuery"]], "opendp.extras.polars.contingency_table.ContingencyTableQuery": [[14, 4, 1, "", "release"]], "opendp.extras.sklearn": [[16, 0, 0, "-", "decomposition"], [17, 0, 0, "-", "linear_model"]], "opendp.extras.sklearn.decomposition": [[16, 2, 1, "", "PCA"], [16, 2, 1, "", "PCAEpsilons"], [16, 1, 1, "", "make_private_pca"]], "opendp.extras.sklearn.decomposition.PCA": [[16, 4, 1, "", "fit"], [16, 4, 1, "", "measurement"], [16, 3, 1, "", "n_features"]], "opendp.extras.sklearn.decomposition.PCAEpsilons": [[16, 3, 1, "", "eigvals"], [16, 3, 1, "", "eigvecs"], [16, 3, 1, "", "mean"]], "opendp.extras.sklearn.linear_model": [[17, 2, 1, "", "LinearRegression"]], "opendp.extras.sklearn.linear_model.LinearRegression": [[17, 4, 1, "", "fit"], [17, 4, 1, "", "predict"]], "opendp.measurements": [[18, 1, 1, "", "debias_randomized_response_bitvec"], [18, 1, 1, "", "make_alp_queryable"], [18, 1, 1, "", "make_canonical_noise"], [18, 1, 1, "", "make_gaussian"], [18, 1, 1, "", "make_gaussian_threshold"], [18, 1, 1, "", "make_geometric"], [18, 1, 1, "", "make_laplace"], [18, 1, 1, "", "make_laplace_threshold"], [18, 1, 1, "", "make_noise"], [18, 1, 1, "", "make_noise_threshold"], [18, 1, 1, "", "make_noisy_max"], [18, 1, 1, "", "make_noisy_top_k"], [18, 1, 1, "", "make_private_expr"], [18, 1, 1, "", "make_private_lazyframe"], [18, 1, 1, "", "make_private_quantile"], [18, 1, 1, "", "make_randomized_response"], [18, 1, 1, "", "make_randomized_response_bitvec"], [18, 1, 1, "", "make_randomized_response_bool"], [18, 1, 1, "", "make_report_noisy_max_gumbel"], [18, 1, 1, "", "make_user_measurement"], [18, 1, 1, "", "then_alp_queryable"], [18, 1, 1, "", "then_canonical_noise"], [18, 1, 1, "", "then_gaussian"], [18, 1, 1, "", "then_gaussian_threshold"], [18, 1, 1, "", "then_geometric"], [18, 1, 1, "", "then_laplace"], [18, 1, 1, "", "then_laplace_threshold"], [18, 1, 1, "", "then_noise"], [18, 1, 1, "", "then_noise_threshold"], [18, 1, 1, "", "then_noisy_max"], [18, 1, 1, "", "then_noisy_top_k"], [18, 1, 1, "", "then_private_expr"], [18, 1, 1, "", "then_private_lazyframe"], [18, 1, 1, "", "then_private_quantile"], [18, 1, 1, "", "then_randomized_response_bitvec"], [18, 1, 1, "", "then_report_noisy_max_gumbel"], [18, 1, 1, "", "then_user_measurement"]], "opendp.measures": [[19, 1, 1, "", "approximate"], [19, 1, 1, "", "fixed_smoothed_max_divergence"], [19, 1, 1, "", "max_divergence"], [19, 1, 1, "", "measure_debug"], [19, 1, 1, "", "measure_distance_type"], [19, 1, 1, "", "measure_type"], [19, 1, 1, "", "new_privacy_profile"], [19, 1, 1, "", "renyi_divergence"], [19, 1, 1, "", "smoothed_max_divergence"], [19, 1, 1, "", "user_divergence"], [19, 1, 1, "", "zero_concentrated_divergence"]], "opendp.metrics": [[20, 1, 1, "", "absolute_distance"], [20, 1, 1, "", "change_one_distance"], [20, 1, 1, "", "change_one_id_distance"], [20, 1, 1, "", "discrete_distance"], [20, 1, 1, "", "frame_distance"], [20, 1, 1, "", "hamming_distance"], [20, 1, 1, "", "insert_delete_distance"], [20, 1, 1, "", "l01inf_distance"], [20, 1, 1, "", "l02inf_distance"], [20, 1, 1, "", "l1_distance"], [20, 1, 1, "", "l2_distance"], [20, 1, 1, "", "linf_distance"], [20, 1, 1, "", "metric_debug"], [20, 1, 1, "", "metric_distance_type"], [20, 1, 1, "", "metric_type"], [20, 1, 1, "", "symmetric_distance"], [20, 1, 1, "", "symmetric_id_distance"], [20, 1, 1, "", "user_distance"]], "opendp.mod": [[21, 2, 1, "", "ApproximateDivergence"], [21, 2, 1, "", "AtomDomain"], [21, 2, 1, "", "ChangeOneIdDistance"], [21, 2, 1, "", "Domain"], [21, 2, 1, "", "ExtrinsicDomain"], [21, 2, 1, "", "FrameDistance"], [21, 2, 1, "", "Function"], [21, 2, 1, "", "LazyFrameDomain"], [21, 2, 1, "", "Measure"], [21, 2, 1, "", "Measurement"], [21, 2, 1, "", "Metric"], [21, 2, 1, "", "Odometer"], [21, 2, 1, "", "OdometerQueryable"], [21, 5, 1, "", "OpenDPException"], [21, 2, 1, "", "OptionDomain"], [21, 2, 1, "", "PrivacyProfile"], [21, 2, 1, "", "Queryable"], [21, 2, 1, "", "SeriesDomain"], [21, 2, 1, "", "SymmetricIdDistance"], [21, 2, 1, "", "Transformation"], [21, 5, 1, "", "UnknownTypeException"], [21, 2, 1, "", "VectorDomain"], [21, 1, 1, "", "assert_features"], [21, 1, 1, "", "binary_search"], [21, 1, 1, "", "binary_search_chain"], [21, 1, 1, "", "binary_search_param"], [21, 1, 1, "", "deserialize"], [21, 1, 1, "", "disable_features"], [21, 1, 1, "", "enable_features"], [21, 1, 1, "", "exponential_bounds_search"], [21, 1, 1, "", "serialize"]], "opendp.mod.ApproximateDivergence": [[21, 3, 1, "", "inner_measure"]], "opendp.mod.AtomDomain": [[21, 3, 1, "", "bounds"], [21, 3, 1, "", "nan"]], "opendp.mod.ChangeOneIdDistance": [[21, 3, 1, "", "identifier"]], "opendp.mod.Domain": [[21, 3, 1, "", "carrier_type"], [21, 4, 1, "", "cast"], [21, 4, 1, "", "member"], [21, 3, 1, "", "type"]], "opendp.mod.ExtrinsicDomain": [[21, 3, 1, "", "descriptor"]], "opendp.mod.FrameDistance": [[21, 3, 1, "", "inner_metric"]], "opendp.mod.LazyFrameDomain": [[21, 3, 1, "", "columns"], [21, 4, 1, "", "get_margin"], [21, 4, 1, "", "get_series_domain"]], "opendp.mod.Measure": [[21, 3, 1, "", "distance_type"], [21, 3, 1, "", "type"]], "opendp.mod.Measurement": [[21, 4, 1, "", "check"], [21, 3, 1, "", "function"], [21, 3, 1, "", "input_carrier_type"], [21, 3, 1, "", "input_distance_type"], [21, 3, 1, "", "input_domain"], [21, 3, 1, "", "input_metric"], [21, 3, 1, "", "input_space"], [21, 4, 1, "", "invoke"], [21, 4, 1, "", "map"], [21, 3, 1, "", "output_distance_type"], [21, 3, 1, "", "output_measure"]], "opendp.mod.Metric": [[21, 4, 1, "", "cast"], [21, 3, 1, "", "distance_type"], [21, 3, 1, "", "type"]], "opendp.mod.Odometer": [[21, 3, 1, "", "input_carrier_type"], [21, 3, 1, "", "input_distance_type"], [21, 3, 1, "", "input_domain"], [21, 3, 1, "", "input_metric"], [21, 3, 1, "", "input_space"], [21, 4, 1, "", "invoke"], [21, 3, 1, "", "output_distance_type"], [21, 3, 1, "", "output_measure"]], "opendp.mod.OdometerQueryable": [[21, 4, 1, "", "invoke"], [21, 4, 1, "", "privacy_loss"]], "opendp.mod.OpenDPException": [[21, 3, 1, "", "raw_traceback"]], "opendp.mod.OptionDomain": [[21, 3, 1, "", "element_domain"]], "opendp.mod.PrivacyProfile": [[21, 4, 1, "", "delta"], [21, 4, 1, "", "epsilon"]], "opendp.mod.SeriesDomain": [[21, 3, 1, "", "element_domain"], [21, 3, 1, "", "name"], [21, 3, 1, "", "nullable"]], "opendp.mod.SymmetricIdDistance": [[21, 3, 1, "", "identifier"]], "opendp.mod.Transformation": [[21, 4, 1, "", "check"], [21, 3, 1, "", "function"], [21, 3, 1, "", "input_carrier_type"], [21, 3, 1, "", "input_distance_type"], [21, 3, 1, "", "input_domain"], [21, 3, 1, "", "input_metric"], [21, 3, 1, "", "input_space"], [21, 4, 1, "", "invoke"], [21, 4, 1, "", "map"], [21, 3, 1, "", "output_distance_type"], [21, 3, 1, "", "output_domain"], [21, 3, 1, "", "output_metric"], [21, 3, 1, "", "output_space"]], "opendp.mod.VectorDomain": [[21, 3, 1, "", "element_domain"], [21, 3, 1, "", "size"]], "opendp.transformations": [[23, 1, 1, "", "choose_branching_factor"], [23, 1, 1, "", "make_b_ary_tree"], [23, 1, 1, "", "make_bounded_float_checked_sum"], [23, 1, 1, "", "make_bounded_float_ordered_sum"], [23, 1, 1, "", "make_bounded_int_monotonic_sum"], [23, 1, 1, "", "make_bounded_int_ordered_sum"], [23, 1, 1, "", "make_bounded_int_split_sum"], [23, 1, 1, "", "make_cast"], [23, 1, 1, "", "make_cast_default"], [23, 1, 1, "", "make_cast_inherent"], [23, 1, 1, "", "make_cdf"], [23, 1, 1, "", "make_clamp"], [23, 1, 1, "", "make_consistent_b_ary_tree"], [23, 1, 1, "", "make_count"], [23, 1, 1, "", "make_count_by"], [23, 1, 1, "", "make_count_by_categories"], [23, 1, 1, "", "make_count_distinct"], [23, 1, 1, "", "make_create_dataframe"], [23, 1, 1, "", "make_df_cast_default"], [23, 1, 1, "", "make_df_is_equal"], [23, 1, 1, "", "make_drop_null"], [23, 1, 1, "", "make_find"], [23, 1, 1, "", "make_find_bin"], [23, 1, 1, "", "make_identity"], [23, 1, 1, "", "make_impute_constant"], [23, 1, 1, "", "make_impute_uniform_float"], [23, 1, 1, "", "make_index"], [23, 1, 1, "", "make_is_equal"], [23, 1, 1, "", "make_is_null"], [23, 1, 1, "", "make_lipschitz_float_mul"], [23, 1, 1, "", "make_mean"], [23, 1, 1, "", "make_metric_bounded"], [23, 1, 1, "", "make_metric_unbounded"], [23, 1, 1, "", "make_ordered_random"], [23, 1, 1, "", "make_quantile_score_candidates"], [23, 1, 1, "", "make_quantiles_from_counts"], [23, 1, 1, "", "make_resize"], [23, 1, 1, "", "make_select_column"], [23, 1, 1, "", "make_sized_bounded_float_checked_sum"], [23, 1, 1, "", "make_sized_bounded_float_ordered_sum"], [23, 1, 1, "", "make_sized_bounded_int_checked_sum"], [23, 1, 1, "", "make_sized_bounded_int_monotonic_sum"], [23, 1, 1, "", "make_sized_bounded_int_ordered_sum"], [23, 1, 1, "", "make_sized_bounded_int_split_sum"], [23, 1, 1, "", "make_split_dataframe"], [23, 1, 1, "", "make_split_lines"], [23, 1, 1, "", "make_split_records"], [23, 1, 1, "", "make_stable_expr"], [23, 1, 1, "", "make_stable_lazyframe"], [23, 1, 1, "", "make_subset_by"], [23, 1, 1, "", "make_sum"], [23, 1, 1, "", "make_sum_of_squared_deviations"], [23, 1, 1, "", "make_unordered"], [23, 1, 1, "", "make_user_transformation"], [23, 1, 1, "", "make_variance"], [23, 1, 1, "", "then_b_ary_tree"], [23, 1, 1, "", "then_cast"], [23, 1, 1, "", "then_cast_default"], [23, 1, 1, "", "then_cast_inherent"], [23, 1, 1, "", "then_clamp"], [23, 1, 1, "", "then_count"], [23, 1, 1, "", "then_count_by"], [23, 1, 1, "", "then_count_by_categories"], [23, 1, 1, "", "then_count_distinct"], [23, 1, 1, "", "then_df_cast_default"], [23, 1, 1, "", "then_df_is_equal"], [23, 1, 1, "", "then_drop_null"], [23, 1, 1, "", "then_find"], [23, 1, 1, "", "then_find_bin"], [23, 1, 1, "", "then_identity"], [23, 1, 1, "", "then_impute_constant"], [23, 1, 1, "", "then_impute_uniform_float"], [23, 1, 1, "", "then_index"], [23, 1, 1, "", "then_is_equal"], [23, 1, 1, "", "then_is_null"], [23, 1, 1, "", "then_lipschitz_float_mul"], [23, 1, 1, "", "then_mean"], [23, 1, 1, "", "then_metric_bounded"], [23, 1, 1, "", "then_metric_unbounded"], [23, 1, 1, "", "then_ordered_random"], [23, 1, 1, "", "then_quantile_score_candidates"], [23, 1, 1, "", "then_resize"], [23, 1, 1, "", "then_stable_expr"], [23, 1, 1, "", "then_stable_lazyframe"], [23, 1, 1, "", "then_sum"], [23, 1, 1, "", "then_sum_of_squared_deviations"], [23, 1, 1, "", "then_unordered"], [23, 1, 1, "", "then_variance"]], "opendp.typing": [[24, 2, 1, "", "Carrier"], [24, 2, 1, "", "RuntimeType"], [24, 2, 1, "", "SensitivityMetric"], [24, 1, 1, "", "get_atom"], [24, 1, 1, "", "get_atom_or_infer"], [24, 1, 1, "", "get_carrier_type"], [24, 1, 1, "", "get_distance_type"], [24, 1, 1, "", "get_first"], [24, 1, 1, "", "get_type"], [24, 1, 1, "", "get_value_type"], [24, 1, 1, "", "parse_or_infer"], [24, 1, 1, "", "pass_through"], [24, 1, 1, "", "set_default_float_type"], [24, 1, 1, "", "set_default_int_type"]], "opendp.typing.RuntimeType": [[24, 3, 1, "", "args"], [24, 4, 1, "", "infer"], [24, 3, 1, "", "origin"], [24, 4, 1, "", "parse"], [24, 4, 1, "", "parse_or_infer"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"api": [0, 1, 35, 36, 42, 71], "python": [1, 76], "document": [1, 76, 77], "content": [1, 2, 8, 9, 10, 11, 13, 15, 16, 17, 76], "index": [1, 67, 106], "opendp": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 60, 68, 76, 79, 80, 97, 104], "packag": [2, 8, 9, 10, 11, 13, 15, 16, 17], "subpackag": [2, 8, 15], "submodul": [2, 11, 13], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "accuraci": [3, 96, 99], "combin": [4, 30], "context": [5, 34, 42, 71, 93], "core": [6, 61], "domain": [7, 37, 63], "extra": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "exampl": [9, 43, 44, 47, 68, 79, 80, 81, 102, 104], "mbi": 10, "numpi": [11, 12], "canon": [12, 38, 39], "polar": [13, 14, 59, 60], "contingency_t": 14, "sklearn": [15, 16, 17], "decomposit": 16, "linear_model": 17, "measur": [18, 19, 31, 39, 44, 46, 61, 63, 80], "metric": [20, 63, 67], "mod": 21, "prelud": 22, "transform": [23, 46, 47, 61, 67, 80, 104], "type": [24, 49, 72], "adapt": [25, 29, 32, 89], "composit": [25, 29, 30, 32], "amplif": 26, "chain": [27, 28, 30, 104], "compositor": 28, "nest": 28, "fulli": 29, "odomet": 29, "other": [30, 68, 95], "topic": 30, "cast": [31, 54, 67], "non": [32, 50], "privaci": [33, 36, 48, 63, 95, 97, 98, 100, 102, 103, 104, 108], "filter": [33, 54, 94], "user": 35, "guid": 35, "featur": [35, 95], "list": [35, 108], "limit": [36, 71], "concern": 36, "incomplet": 36, "proof": [36, 77, 79], "miss": 36, "function": [36, 63, 79], "stabil": [36, 63, 98], "softwar": 36, "qualiti": 36, "addit": [37, 39], "nois": [37, 38, 39, 41, 58], "mechan": [37, 38, 39, 41, 46, 65, 104, 106, 107], "distribut": [37, 41, 58, 65, 98, 100], "laplac": [37, 41, 104], "v": [37, 41, 50, 60, 68, 99], "gaussian": [37, 39, 41, 58], "support": [37, 41, 63, 72], "float": [37, 41, 49, 66, 106], "integ": [37, 41, 49, 66], "scalar": 37, "vector": 37, "bit": [37, 41], "depth": [37, 41], "desideratum": [37, 41], "point": [37, 41, 62, 66, 106], "granular": [37, 41], "binomi": 38, "assumpt": 38, "confid": [38, 99], "interv": [38, 99], "p": 38, "valu": [38, 68, 88], "uniformli": 38, "most": 38, "power": 38, "test": [38, 76, 77], "laplacian": 39, "geometr": 39, "threshold": [39, 41], "noisi": [39, 106], "top": 39, "k": 39, "max": 39, "random": [39, 40], "respons": [39, 40], "privat": [40, 45, 65, 87, 94], "aggreg": [40, 50, 64, 65, 66, 67, 98], "mean": [40, 64, 90], "count": [40, 50, 90], "posit": 41, "neg": 41, "plugin": [42, 43], "select": [45, 94], "group": [45, 58, 91, 92, 94], "column": [45, 52, 94], "thiel": 46, "sen": 46, "regress": [46, 86], "implement": 46, "1": [46, 95, 106], "pairwis": 46, "predict": 46, "2": [46, 95, 106], "dp": [46, 95, 98], "median": [46, 90], "3": [46, 95, 106], "estim": [46, 65, 89], "creat": [46, 75], "appli": [46, 108], "synthet": [46, 88], "data": [46, 49, 88, 93, 95], "identifi": [48, 92, 95], "truncat": [48, 92], "bound": [48, 58, 67], "unit": [48, 95], "multipl": 48, "boolean": [49, 51], "string": [49, 56], "categor": 49, "enum": 49, "tempor": [49, 57], "frame": 50, "length": [50, 91], "express": [50, 53], "uniqu": 50, "null": [50, 54, 88], "i": [51, 68, 97, 99], "properti": 51, "Not": 51, "manipul": 54, "clip": 54, "cut": 54, "drop": 54, "nan": 54, "fill": 54, "replac": 54, "strict": 54, "To": [54, 56], "physic": 54, "oper": 55, "strptime": 56, "date": [56, 57], "datetim": 56, "time": [56, 57], "compon": 57, "comparison": 58, "sensit": [58, 98], "contribut": [58, 75, 77, 78, 92], "per": [58, 92], "structur": [61, 79, 80], "similar": 61, "program": 62, "framework": [62, 71, 98], "summari": 62, "kei": [62, 91], "element": 63, "map": [63, 98], "distanc": [63, 98], "known": [64, 66, 68], "dataset": [64, 66, 67, 68, 93, 98], "size": [64, 66, 68], "unknown": [64, 66, 68], "quantil": [65, 67, 90, 106], "via": [65, 67], "exponenti": [65, 70, 106], "histogram": 65, "b": 65, "ari": 65, "tree": [65, 67], "simul": [65, 102, 103], "sum": [66, 90, 104], "special": 66, "constructor": [66, 80, 104], "imput": 67, "clamp": [67, 104], "order": 67, "resiz": [67, 68], "preprocess": 68, "load": 68, "when": 68, "provid": 68, "incorrect": 68, "approach": 68, "util": [69, 96], "paramet": [70, 95], "search": 70, "binari": 70, "serial": 71, "lazyframequeri": 71, "argument": 72, "alias": 72, "contributor": [73, 75], "licens": [73, 75], "agreement": [73, 75], "contact": 74, "process": [75, 76], "pull": [75, 77], "request": [75, 77], "branch": 75, "philosophi": 75, "vet": 75, "merg": 75, "develop": [76, 80], "environ": 76, "clone": 76, "repo": 76, "rust": [76, 80], "setup": 76, "r": 76, "doc": 76, "releas": 76, "variabl": 76, "tool": 76, "get": [77, 82], "involv": 77, "bug": 77, "report": [77, 106], "code": 77, "resolv": 77, "an": 77, "issu": 77, "add": 77, "review": 77, "initi": [79, 80], "latex": 79, "templat": 79, "precondit": 79, "pseudocod": 79, "postcondit": 79, "loop": 80, "next": [80, 83, 97], "step": [80, 83], "more": 81, "start": 82, "quickstart": 84, "statist": [85, 90], "model": 85, "linear": 86, "differenti": [87, 97, 100, 102, 103, 104, 108], "pca": 87, "handl": 88, "conting": 89, "tabl": 89, "essenti": 90, "stabl": [91, 94], "explicit": 91, "invari": 91, "work": 93, "tabular": 93, "descript": 93, "mediat": [93, 95], "access": [93, 95], "prepar": 94, "microdata": 94, "With": 94, "By": 94, "agg": 94, "typic": 95, "workflow": 95, "set": 95, "loss": 95, "collect": 95, "public": 95, "inform": 95, "4": 95, "5": 95, "submit": 95, "queri": 95, "assess": 96, "welcom": 97, "what": [97, 99], "why": 97, "who": 97, "us": 97, "A": 98, "understand": 98, "between": 98, "adjac": 98, "diverg": 98, "definit": 98, "pitfal": 99, "edg": 99, "case": 99, "overview": 99, "d": 99, "synopsi": 99, "guarante": 99, "In": 99, "practic": 99, "differenc": 100, "attack": [100, 101, 102, 103, 106], "outcom": 100, "membership": 102, "reconstruct": 103, "mitig": [103, 106], "The": 104, "retrospect": 104, "partial": 104, "theori": 105, "score": 106, "each": 106, "candid": 106, "min": 106, "resourc": 108, "foundat": 108, "learn": 108, "about": 108, "paper": 108}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"API": [[0, "api"]], "Python API Documentation": [[1, "python-api-documentation"]], "Contents:": [[1, null], [76, "toctitle"]], "Indexes": [[1, "indexes"]], "opendp package": [[2, "opendp-package"]], "Subpackages": [[2, "subpackages"], [8, "subpackages"], [15, "subpackages"]], "Submodules": [[2, "submodules"], [11, "submodules"], [13, "submodules"]], "Module contents": [[2, "module-opendp"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.mbi"], [11, "module-opendp.extras.numpy"], [13, "module-opendp.extras.polars"], [15, "module-opendp.extras.sklearn"], [16, "module-opendp.extras.sklearn.decomposition"], [17, "module-opendp.extras.sklearn.linear_model"]], "opendp.accuracy module": [[3, "module-opendp.accuracy"]], "opendp.combinators module": [[4, "module-opendp.combinators"]], "opendp.context module": [[5, "module-opendp.context"]], "opendp.core module": [[6, "module-opendp.core"]], "opendp.domains module": [[7, "module-opendp.domains"]], "opendp.extras package": [[8, "opendp-extras-package"]], "opendp.extras.examples package": [[9, "opendp-extras-examples-package"]], "opendp.extras.mbi package": [[10, "opendp-extras-mbi-package"]], "opendp.extras.numpy package": [[11, "opendp-extras-numpy-package"]], "opendp.extras.numpy.canonical module": [[12, "module-opendp.extras.numpy.canonical"]], "opendp.extras.polars package": [[13, "opendp-extras-polars-package"]], "opendp.extras.polars.contingency_table module": [[14, "module-opendp.extras.polars.contingency_table"]], "opendp.extras.sklearn package": [[15, "opendp-extras-sklearn-package"]], "opendp.extras.sklearn.decomposition package": [[16, "opendp-extras-sklearn-decomposition-package"]], "opendp.extras.sklearn.linear_model package": [[17, "opendp-extras-sklearn-linear-model-package"]], "opendp.measurements module": [[18, "module-opendp.measurements"]], "opendp.measures module": [[19, "module-opendp.measures"]], "opendp.metrics module": [[20, "module-opendp.metrics"]], "opendp.mod module": [[21, "module-opendp.mod"]], "opendp.prelude module": [[22, "module-opendp.prelude"]], "opendp.transformations module": [[23, "module-opendp.transformations"]], "opendp.typing module": [[24, "module-opendp.typing"]], "Adaptive Composition": [[25, "adaptive-composition"]], "Amplification": [[26, "amplification"]], "Chaining": [[27, "chaining"], [28, "chaining"], [30, "chaining"], [104, "chaining"]], "Compositor Chaining and Nesting": [[28, "compositor-chaining-and-nesting"]], "Nesting": [[28, "nesting"]], "Fully Adaptive Composition and Odometers": [[29, "fully-adaptive-composition-and-odometers"]], "Combinators": [[30, "combinators"]], "Composition": [[30, "composition"]], "Other Topics": [[30, "other-topics"]], "Measure Casting": [[31, "measure-casting"]], "(Non-Adaptive) Composition": [[32, "non-adaptive-composition"]], "Privacy Filters": [[33, "privacy-filters"]], "Context": [[34, "context"]], "API User Guide": [[35, "api-user-guide"]], "Feature Listing": [[35, "feature-listing"]], "Limitations": [[36, "limitations"], [71, "limitations"]], "Privacy Concerns": [[36, "privacy-concerns"]], "Incomplete Privacy Proofs": [[36, "incomplete-privacy-proofs"]], "Missing Functionality": [[36, "missing-functionality"]], "API Stability": [[36, "api-stability"]], "Software Quality": [[36, "software-quality"]], "Additive Noise Mechanisms": [[37, "Additive-Noise-Mechanisms"], [39, "additive-noise-mechanisms"]], "Distribution: Laplace vs. Gaussian": [[37, "Distribution:-Laplace-vs.-Gaussian"], [41, "Distribution:-Laplace-vs.-Gaussian"]], "Support: Float vs. Integer": [[37, "Support:-Float-vs.-Integer"], [41, "Support:-Float-vs.-Integer"]], "Domain: Scalar vs. Vector": [[37, "Domain:-Scalar-vs.-Vector"]], "Bit depth": [[37, "Bit-depth"], [41, "Bit-depth"]], "Desideratum: Floating-Point Granularity": [[37, "Desideratum:-Floating-Point-Granularity"], [41, "Desideratum:-Floating-Point-Granularity"]], "Canonical Noise Mechanism": [[38, "Canonical-Noise-Mechanism"]], "Binomial Assumption": [[38, "Binomial-Assumption"]], "Confidence Intervals": [[38, "Confidence-Intervals"]], "P-Values": [[38, "P-Values"]], "Uniformly-Most-Powerful Tests": [[38, "Uniformly-Most-Powerful-Tests"]], "Measurements": [[39, "measurements"]], "Laplacian Noise": [[39, "laplacian-noise"], [39, "id1"]], "Gaussian Noise": [[39, "gaussian-noise"], [39, "id2"], [58, "gaussian-noise"]], "Geometric Noise": [[39, "geometric-noise"]], "Canonical Noise": [[39, "canonical-noise"]], "Thresholded Noise Mechanisms": [[39, "thresholded-noise-mechanisms"], [41, "Thresholded-Noise-Mechanisms"]], "Noisy Top K and Noisy Max": [[39, "noisy-top-k-and-noisy-max"]], "Randomized Response": [[39, "randomized-response"], [40, "randomized-response"]], "Privatization": [[40, "privatization"]], "Aggregation: Mean": [[40, "aggregation-mean"], [64, "aggregation-mean"]], "Aggregation: Count": [[40, "aggregation-count"]], "Threshold: Positive vs. Negative": [[41, "Threshold:-Positive-vs.-Negative"]], "Context API Plugins": [[42, "context-api-plugins"]], "Plugins": [[43, "plugins"]], "Examples": [[43, "examples"]], "Measurement example": [[44, "measurement-example"]], "Privately Selecting Grouping Columns": [[45, "privately-selecting-grouping-columns"]], "Thiel-Sen Regression": [[46, "Thiel-Sen-Regression"]], "Implement Thiel-Sen Mechanism": [[46, "Implement-Thiel-Sen-Mechanism"]], "1. Transformation: Pairwise Prediction": [[46, "1.-Transformation:-Pairwise-Prediction"]], "2. Measurement: DP Medians": [[46, "2.-Measurement:-DP-Medians"]], "3. Measurement: Thiel-Sen Estimator": [[46, "3.-Measurement:-Thiel-Sen-Estimator"]], "Creating and Applying the Mechanism to Synthetic Data": [[46, "Creating-and-Applying-the-Mechanism-to-Synthetic-Data"]], "Transformation example": [[47, "transformation-example"]], "Identifier Truncation and Bounds": [[48, "bounds-user-guide"]], "Privacy Unit with Multiple Bounds": [[48, "privacy-unit-with-multiple-bounds"]], "Data Types": [[49, "Data-Types"]], "Boolean": [[49, "Boolean"], [51, "boolean"]], "Integer": [[49, "Integer"]], "Float": [[49, "Float"]], "String": [[49, "String"], [56, "String"]], "Categorical": [[49, "Categorical"]], "Enum": [[49, "Enum"]], "Temporal": [[49, "Temporal"], [57, "Temporal"]], "Aggregation": [[50, "Aggregation"]], "Frame Length vs Expression Length": [[50, "Frame-Length-vs-Expression-Length"]], "Unique Counts": [[50, "Unique-Counts"]], "Null and Non-Null Counts": [[50, "Null-and-Non-Null-Counts"]], "Is Property": [[51, "is-property"]], "Not": [[51, "not"]], "Columns": [[52, "Columns"]], "Expressions": [[53, "expressions"]], "Manipulation": [[54, "Manipulation"]], "Cast": [[54, "Cast"]], "Clip": [[54, "Clip"]], "Cut": [[54, "Cut"]], "Drop NaNs": [[54, "Drop-NaNs"]], "Drop Nulls": [[54, "Drop-Nulls"]], "Fill NaN": [[54, "Fill-NaN"]], "Fill Null": [[54, "Fill-Null"]], "Filter": [[54, "Filter"], [94, "filter"]], "Replace": [[54, "Replace"]], "Replace Strict": [[54, "Replace-Strict"]], "To Physical": [[54, "To-Physical"]], "Operators": [[55, "Operators"]], "Strptime, To Date, To Datetime, To Time": [[56, "Strptime,-To-Date,-To-Datetime,-To-Time"]], "Date/Time Components": [[57, "Date/Time-Components"]], "Distribution Comparison": [[58, "distribution-comparison"]], "Sensitivity": [[58, "sensitivity"]], "Bound Contributions Per Group": [[58, "bound-contributions-per-group"]], "Polars": [[59, "polars"]], "Polars vs. OpenDP": [[60, "polars-vs-opendp"]], "Core Structures": [[61, "core-structures"]], "Similarities": [[61, "similarities"]], "Transformation": [[61, "transformation"]], "Measurement": [[61, "measurement"]], "Programming Framework": [[62, "programming-framework"]], "Summary": [[62, "summary"]], "Key Points": [[62, "key-points"]], "Supporting Elements": [[63, "supporting-elements"]], "Function": [[63, "function"]], "Domain": [[63, "domain"]], "Metric": [[63, "metric"]], "Measure": [[63, "measure"]], "Stability/Privacy Map": [[63, "stability-privacy-map"]], "Distance": [[63, "distance"]], "Known Dataset Size": [[64, "known-dataset-size"]], "Unknown Dataset Size": [[64, "unknown-dataset-size"]], "Aggregation: Quantile": [[65, "Aggregation:-Quantile"]], "Quantile via Exponential Mechanism": [[65, "Quantile-via-Exponential-Mechanism"]], "Quantile via Histogram": [[65, "Quantile-via-Histogram"]], "Quantile via B-ary Tree": [[65, "Quantile-via-B-ary-Tree"]], "Simulations": [[65, "Simulations"], [102, "Simulations"], [103, "Simulations"]], "Privately Estimating the Distribution": [[65, "Privately-Estimating-the-Distribution"]], "Aggregation: Sum": [[66, "Aggregation:-Sum"]], "Known/Unknown Dataset Size": [[66, "Known/Unknown-Dataset-Size"]], "Floating-Point": [[66, "Floating-Point"]], "Specialized Floating-Point Constructors": [[66, "Specialized-Floating-Point-Constructors"]], "Specialized Integer Constructors": [[66, "Specialized-Integer-Constructors"]], "Transformations": [[67, "transformations"]], "Casting": [[67, "casting"]], "Imputation": [[67, "imputation"]], "Indexing": [[67, "indexing"]], "Clamping": [[67, "clamping"]], "Dataset Ordering": [[67, "dataset-ordering"]], "Bounded Metrics": [[67, "bounded-metrics"]], "Resizing": [[67, "resizing"]], "Aggregators": [[67, "aggregators"]], "Quantiles via Trees": [[67, "quantiles-via-trees"]], "Preprocessing: Resize": [[68, "Preprocessing:-Resize"]], "Load example dataset": [[68, "Load-example-dataset"]], "When dataset size is known": [[68, "When-dataset-size-is-known"]], "When dataset size is unknown": [[68, "When-dataset-size-is-unknown"]], "Providing incorrect dataset size values": [[68, "Providing-incorrect-dataset-size-values"]], "OpenDP resize vs. other approaches": [[68, "OpenDP-resize-vs.-other-approaches"]], "Utilities": [[69, "utilities"]], "Parameter Search": [[70, "parameter-search"]], "Binary Search": [[70, "binary-search"]], "Exponential Search": [[70, "exponential-search"]], "Serialization": [[71, "serialization"]], "LazyFrameQuery Serialization": [[71, "lazyframequery-serialization"]], "Context Serialization": [[71, "context-serialization"]], "Framework API Serialization": [[71, "framework-api-serialization"]], "Typing": [[72, "typing"]], "Type Argument": [[72, "type-argument"]], "Supported Types": [[72, "supported-types"]], "Type Aliases": [[72, "type-aliases"]], "Contributor License Agreement": [[73, "contributor-license-agreement"], [75, "contributor-license-agreement"]], "Contact": [[74, "contact"]], "Contribution Process": [[75, "contribution-process"]], "Creating a Pull Request": [[75, "creating-a-pull-request"]], "Branch Philosophy": [[75, "branch-philosophy"]], "Vetting Process": [[75, "vetting-process"]], "Merge": [[75, "merge"]], "Development Environment": [[76, "development-environment"]], "Clone the OpenDP Repo": [[76, "clone-the-opendp-repo"]], "Rust Setup": [[76, "rust-setup"]], "Python Setup": [[76, "python-setup"]], "Python Tests": [[76, "python-tests"]], "Python Documentation": [[76, "python-documentation"]], "R Setup": [[76, "r-setup"]], "R Tests": [[76, "r-tests"]], "R Documentation": [[76, "r-documentation"]], "Docs Setup": [[76, "docs-setup"]], "Release Process": [[76, "release-process"]], "Environment Variables": [[76, "environment-variables"]], "Developer Tooling": [[76, "developer-tooling"]], "Getting Involved": [[77, "getting-involved"]], "Bug Reports": [[77, "bug-reports"]], "Code and Proof Contributions": [[77, "code-and-proof-contributions"]], "Resolve an Issue": [[77, "resolve-an-issue"]], "Documentation": [[77, "documentation"]], "Add Tests": [[77, "add-tests"]], "Review Pull Requests": [[77, "review-pull-requests"]], "Contributing": [[78, "contributing"]], "OpenDP Proof Initiation": [[79, "opendp-proof-initiation"]], "Proof Structure": [[79, "proof-structure"]], "Function Example": [[79, "function-example"]], "LaTex Template": [[79, "latex-template"]], "Preconditions": [[79, "preconditions"]], "Pseudocode": [[79, "pseudocode"]], "Postcondition": [[79, "postcondition"]], "Proof": [[79, "proof"]], "OpenDP Rust Initiation": [[80, "opendp-rust-initiation"]], "Transformation Structure": [[80, "transformation-structure"]], "Example Transformation Constructor": [[80, "example-transformation-constructor"]], "Measurement Structure": [[80, "measurement-structure"]], "Developer Loop": [[80, "developer-loop"]], "Next Steps": [[80, "next-steps"], [83, "next-steps"]], "More Examples": [[81, "more-examples"]], "Getting Started": [[82, "getting-started"]], "Quickstart": [[84, "quickstart"]], "Statistical Modeling": [[85, "statistical-modeling"]], "Linear Regression": [[86, "linear-regression"]], "Differentially Private PCA": [[87, "differentially-private-pca"]], "Synthetic Data": [[88, "synthetic-data"]], "Handling Null Values": [[88, "handling-null-values"]], "Contingency Tables": [[89, "contingency-tables"]], "Adaptive Estimation": [[89, "adaptive-estimation"]], "Essential Statistics": [[90, "essential-statistics"]], "Count": [[90, "count"]], "Sum": [[90, "sum"]], "Mean": [[90, "mean"]], "Median": [[90, "median"]], "Quantile": [[90, "quantile"]], "Grouping": [[91, "Grouping"]], "Stable Keys": [[91, "Stable-Keys"]], "Explicit Keys": [[91, "Explicit-Keys"]], "Invariant Group Keys": [[91, "Invariant-Group-Keys"]], "Invariant Group Lengths": [[91, "Invariant-Group-Lengths"]], "Identifier Truncation": [[92, "identifier-truncation"]], "Truncating Per-Group Contributions": [[92, "truncating-per-group-contributions"]], "Truncating Contributed Groups": [[92, "truncating-contributed-groups"]], "Working with Tabular Data": [[93, "working-with-tabular-data"]], "Dataset Description": [[93, "dataset-description"]], "Mediate access with Context": [[93, "mediate-access-with-context"]], "Preparing Microdata": [[94, "preparing-microdata"]], "With Columns": [[94, "with-columns"]], "Select": [[94, "select"]], "Group By (Private)": [[94, "group-by-private"]], "Group By / Agg (Stable)": [[94, "group-by-agg-stable"]], "Typical Workflow": [[95, "typical-workflow"]], "1. Identify the Unit of Privacy": [[95, "identify-the-unit-of-privacy"]], "2. Set Privacy Loss Parameters": [[95, "set-privacy-loss-parameters"]], "3. Collect Public Information": [[95, "collect-public-information"]], "4. Mediate Access to Data": [[95, "mediate-access-to-data"]], "5. Submit DP Queries": [[95, "submit-dp-queries"]], "Other features": [[95, "other-features"]], "Assessing Utility": [[96, "assessing-utility"]], "Accuracy": [[96, "accuracy"]], "Welcome": [[97, "welcome"]], "What is differential privacy?": [[97, "what-is-differential-privacy"]], "Why OpenDP?": [[97, "why-opendp"]], "Who is using OpenDP?": [[97, "who-is-using-opendp"]], "What next?": [[97, "what-next"]], "A Framework to Understand DP": [[98, "A-Framework-to-Understand-DP"]], "Distance Between Datasets - Adjacency": [[98, "Distance-Between-Datasets---Adjacency"]], "Distance Between Distributions - Divergence": [[98, "Distance-Between-Distributions---Divergence"]], "Definition of Privacy": [[98, "Definition-of-Privacy"]], "Distance Between Aggregates - Sensitivity": [[98, "Distance-Between-Aggregates---Sensitivity"]], "Definition of Stability": [[98, "Definition-of-Stability"]], "Stability Maps and Privacy Maps": [[98, "Stability-Maps-and-Privacy-Maps"]], "Accuracy: Pitfalls and Edge Cases": [[99, "Accuracy:-Pitfalls-and-Edge-Cases"]], "Overview": [[99, "Overview"]], "Accuracy vs. Confidence Intervals": [[99, "Accuracy-vs.-Confidence-Intervals"]], "What is D?": [[99, "What-is-D?"]], "Synopsis": [[99, "Synopsis"]], "Accuracy Guarantees In Practice": [[99, "Accuracy-Guarantees-In-Practice"]], "Differencing Attack": [[100, "Differencing-Attack"]], "Differential Privacy": [[100, "Differential-Privacy"], [102, "Differential-Privacy"], [103, "Differential-Privacy"]], "Distribution of Outcomes": [[100, "Distribution-of-Outcomes"]], "Attacks": [[101, "attacks"]], "Membership": [[102, "Membership"]], "Membership Attacks": [[102, "Membership-Attacks"]], "Example": [[102, "Example"]], "Reconstruction": [[103, "Reconstruction"]], "Reconstruction Attack": [[103, "Reconstruction-Attack"]], "Mitigations": [[103, "Mitigations"]], "Differential Privacy with OpenDP": [[104, "differential-privacy-with-opendp"]], "The Laplace Mechanism": [[104, "the-laplace-mechanism"]], "Transformation Example: Sum": [[104, "transformation-example-sum"]], "Transformation Example: Clamp": [[104, "transformation-example-clamp"]], "Retrospective": [[104, "retrospective"]], "Partial Constructors": [[104, "partial-constructors"]], "Theory": [[105, "theory"]], "Exponential Mechanism Quantiles": [[106, "Exponential-Mechanism-Quantiles"]], "1. Score Each Candidate": [[106, "1.-Score-Each-Candidate"]], "2. Report Noisy Min": [[106, "2.-Report-Noisy-Min"]], "3. Index Candidates": [[106, "3.-Index-Candidates"]], "Floating-Point Attack Mitigation": [[106, "Floating-Point-Attack-Mitigation"]], "Mechanisms": [[107, "mechanisms"]], "Resources List": [[108, "resources-list"]], "Foundations": [[108, "foundations"]], "Applying Differential Privacy": [[108, "applying-differential-privacy"]], "Learning About Differential Privacy": [[108, "learning-about-differential-privacy"]], "Papers": [[108, "papers"]]}, "indexentries": {"module": [[2, "module-opendp"], [3, "module-opendp.accuracy"], [4, "module-opendp.combinators"], [5, "module-opendp.context"], [6, "module-opendp.core"], [7, "module-opendp.domains"], [8, "module-opendp.extras"], [9, "module-opendp.extras.examples"], [10, "module-opendp.extras.mbi"], [11, "module-opendp.extras.numpy"], [12, "module-opendp.extras.numpy.canonical"], [13, "module-opendp.extras.polars"], [14, "module-opendp.extras.polars.contingency_table"], [15, "module-opendp.extras.sklearn"], [16, "module-opendp.extras.sklearn.decomposition"], [17, "module-opendp.extras.sklearn.linear_model"], [18, "module-opendp.measurements"], [19, "module-opendp.measures"], [20, "module-opendp.metrics"], [21, "module-opendp.mod"], [22, "module-opendp.prelude"], [23, "module-opendp.transformations"], [24, "module-opendp.typing"]], "opendp": [[2, "module-opendp"]], "accuracy_to_discrete_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_gaussian_scale"]], "accuracy_to_discrete_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_discrete_laplacian_scale"]], "accuracy_to_gaussian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_gaussian_scale"]], "accuracy_to_laplacian_scale() (in module opendp.accuracy)": [[3, "opendp.accuracy.accuracy_to_laplacian_scale"]], "discrete_gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_gaussian_scale_to_accuracy"]], "discrete_laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.discrete_laplacian_scale_to_accuracy"]], "gaussian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.gaussian_scale_to_accuracy"]], "laplacian_scale_to_accuracy() (in module opendp.accuracy)": [[3, "opendp.accuracy.laplacian_scale_to_accuracy"]], "opendp.accuracy": [[3, "module-opendp.accuracy"]], "summarize_polars_measurement() (in module opendp.accuracy)": [[3, "opendp.accuracy.summarize_polars_measurement"]], "make_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_adaptive_composition"]], "make_approximate() (in module opendp.combinators)": [[4, "opendp.combinators.make_approximate"]], "make_basic_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_basic_composition"]], "make_chain_mt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_mt"]], "make_chain_pm() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_pm"]], "make_chain_tt() (in module opendp.combinators)": [[4, "opendp.combinators.make_chain_tt"]], "make_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_composition"]], "make_fix_delta() (in module opendp.combinators)": [[4, "opendp.combinators.make_fix_delta"]], "make_fixed_approxdp_to_approxdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_fixed_approxDP_to_approxDP"]], "make_fully_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_fully_adaptive_composition"]], "make_population_amplification() (in module opendp.combinators)": [[4, "opendp.combinators.make_population_amplification"]], "make_privacy_filter() (in module opendp.combinators)": [[4, "opendp.combinators.make_privacy_filter"]], "make_puredp_to_zcdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_pureDP_to_zCDP"]], "make_select_private_candidate() (in module opendp.combinators)": [[4, "opendp.combinators.make_select_private_candidate"]], "make_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.make_sequential_composition"]], "make_zcdp_to_approxdp() (in module opendp.combinators)": [[4, "opendp.combinators.make_zCDP_to_approxDP"]], "opendp.combinators": [[4, "module-opendp.combinators"]], "then_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_adaptive_composition"]], "then_fully_adaptive_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_fully_adaptive_composition"]], "then_sequential_composition() (in module opendp.combinators)": [[4, "opendp.combinators.then_sequential_composition"]], "context (class in opendp.context)": [[5, "opendp.context.Context"]], "partialchain (class in opendp.context)": [[5, "opendp.context.PartialChain"]], "query (class in opendp.context)": [[5, "opendp.context.Query"]], "accountant (opendp.context.context attribute)": [[5, "opendp.context.Context.accountant"]], "compositor() (opendp.context.context static method)": [[5, "opendp.context.Context.compositor"]], "compositor() (opendp.context.query method)": [[5, "opendp.context.Query.compositor"]], "current_privacy_loss() (opendp.context.context method)": [[5, "opendp.context.Context.current_privacy_loss"]], "deserialize_polars_plan() (opendp.context.context method)": [[5, "opendp.context.Context.deserialize_polars_plan"]], "domain_of() (in module opendp.context)": [[5, "opendp.context.domain_of"]], "fix() (opendp.context.partialchain method)": [[5, "opendp.context.PartialChain.fix"]], "loss_of() (in module opendp.context)": [[5, "opendp.context.loss_of"]], "metric_of() (in module opendp.context)": [[5, "opendp.context.metric_of"]], "new_with() (opendp.context.query method)": [[5, "opendp.context.Query.new_with"]], "opendp.context": [[5, "module-opendp.context"]], "param() (opendp.context.query method)": [[5, "opendp.context.Query.param"]], "partial (opendp.context.partialchain attribute)": [[5, "opendp.context.PartialChain.partial"]], "query() (opendp.context.context method)": [[5, "opendp.context.Context.query"]], "queryable (opendp.context.context attribute)": [[5, "opendp.context.Context.queryable"]], "register() (in module opendp.context)": [[5, "opendp.context.register"]], "release() (opendp.context.query method)": [[5, "opendp.context.Query.release"]], "remaining_privacy_loss() (opendp.context.context method)": [[5, "opendp.context.Context.remaining_privacy_loss"]], "resolve() (opendp.context.query method)": [[5, "opendp.context.Query.resolve"]], "space_of() (in module opendp.context)": [[5, "opendp.context.space_of"]], "unit_of() (in module opendp.context)": [[5, "opendp.context.unit_of"]], "wrap() (opendp.context.partialchain class method)": [[5, "opendp.context.PartialChain.wrap"]], "function_eval() (in module opendp.core)": [[6, "opendp.core.function_eval"]], "measurement_check() (in module opendp.core)": [[6, "opendp.core.measurement_check"]], "measurement_function() (in module opendp.core)": [[6, "opendp.core.measurement_function"]], "measurement_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_carrier_type"]], "measurement_input_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_input_distance_type"]], "measurement_input_domain() (in module opendp.core)": [[6, "opendp.core.measurement_input_domain"]], "measurement_input_metric() (in module opendp.core)": [[6, "opendp.core.measurement_input_metric"]], "measurement_invoke() (in module opendp.core)": [[6, "opendp.core.measurement_invoke"]], "measurement_map() (in module opendp.core)": [[6, "opendp.core.measurement_map"]], "measurement_output_distance_type() (in module opendp.core)": [[6, "opendp.core.measurement_output_distance_type"]], "measurement_output_measure() (in module opendp.core)": [[6, "opendp.core.measurement_output_measure"]], "new_function() (in module opendp.core)": [[6, "opendp.core.new_function"]], "new_queryable() (in module opendp.core)": [[6, "opendp.core.new_queryable"]], "odometer_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.odometer_input_carrier_type"]], "odometer_input_domain() (in module opendp.core)": [[6, "opendp.core.odometer_input_domain"]], "odometer_input_metric() (in module opendp.core)": [[6, "opendp.core.odometer_input_metric"]], "odometer_invoke() (in module opendp.core)": [[6, "opendp.core.odometer_invoke"]], "odometer_output_measure() (in module opendp.core)": [[6, "opendp.core.odometer_output_measure"]], "odometer_queryable_invoke() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_invoke"]], "odometer_queryable_invoke_type() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_invoke_type"]], "odometer_queryable_privacy_loss() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_privacy_loss"]], "odometer_queryable_privacy_loss_type() (in module opendp.core)": [[6, "opendp.core.odometer_queryable_privacy_loss_type"]], "opendp.core": [[6, "module-opendp.core"]], "queryable_eval() (in module opendp.core)": [[6, "opendp.core.queryable_eval"]], "queryable_query_type() (in module opendp.core)": [[6, "opendp.core.queryable_query_type"]], "transformation_check() (in module opendp.core)": [[6, "opendp.core.transformation_check"]], "transformation_function() (in module opendp.core)": [[6, "opendp.core.transformation_function"]], "transformation_input_carrier_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_carrier_type"]], "transformation_input_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_input_distance_type"]], "transformation_input_domain() (in module opendp.core)": [[6, "opendp.core.transformation_input_domain"]], "transformation_input_metric() (in module opendp.core)": [[6, "opendp.core.transformation_input_metric"]], "transformation_invoke() (in module opendp.core)": [[6, "opendp.core.transformation_invoke"]], "transformation_map() (in module opendp.core)": [[6, "opendp.core.transformation_map"]], "transformation_output_distance_type() (in module opendp.core)": [[6, "opendp.core.transformation_output_distance_type"]], "transformation_output_domain() (in module opendp.core)": [[6, "opendp.core.transformation_output_domain"]], "transformation_output_metric() (in module opendp.core)": [[6, "opendp.core.transformation_output_metric"]], "array_domain() (in module opendp.domains)": [[7, "opendp.domains.array_domain"]], "atom_domain() (in module opendp.domains)": [[7, "opendp.domains.atom_domain"]], "bitvector_domain() (in module opendp.domains)": [[7, "opendp.domains.bitvector_domain"]], "categorical_domain() (in module opendp.domains)": [[7, "opendp.domains.categorical_domain"]], "datetime_domain() (in module opendp.domains)": [[7, "opendp.domains.datetime_domain"]], "domain_carrier_type() (in module opendp.domains)": [[7, "opendp.domains.domain_carrier_type"]], "domain_debug() (in module opendp.domains)": [[7, "opendp.domains.domain_debug"]], "domain_type() (in module opendp.domains)": [[7, "opendp.domains.domain_type"]], "enum_domain() (in module opendp.domains)": [[7, "opendp.domains.enum_domain"]], "lazyframe_domain() (in module opendp.domains)": [[7, "opendp.domains.lazyframe_domain"]], "map_domain() (in module opendp.domains)": [[7, "opendp.domains.map_domain"]], "opendp.domains": [[7, "module-opendp.domains"]], "option_domain() (in module opendp.domains)": [[7, "opendp.domains.option_domain"]], "series_domain() (in module opendp.domains)": [[7, "opendp.domains.series_domain"]], "user_domain() (in module opendp.domains)": [[7, "opendp.domains.user_domain"]], "vector_domain() (in module opendp.domains)": [[7, "opendp.domains.vector_domain"]], "wild_expr_domain() (in module opendp.domains)": [[7, "opendp.domains.wild_expr_domain"]], "with_margin() (in module opendp.domains)": [[7, "opendp.domains.with_margin"]], "opendp.extras": [[8, "module-opendp.extras"]], "get_california_pums_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_california_pums_path"]], "get_france_lfs_path() (in module opendp.extras.examples)": [[9, "opendp.extras.examples.get_france_lfs_path"]], "opendp.extras.examples": [[9, "module-opendp.extras.examples"]], "aim (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.AIM"]], "algorithm (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Algorithm"]], "contingencytable (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.ContingencyTable"]], "count (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Count"]], "fixed (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Fixed"]], "mst (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.MST"]], "sequential (class in opendp.extras.mbi)": [[10, "opendp.extras.mbi.Sequential"]], "algorithms (opendp.extras.mbi.sequential attribute)": [[10, "opendp.extras.mbi.Sequential.algorithms"]], "by (opendp.extras.mbi.count attribute)": [[10, "opendp.extras.mbi.Count.by"]], "cuts (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.cuts"]], "estimator() (opendp.extras.mbi.algorithm method)": [[10, "opendp.extras.mbi.Algorithm.estimator"]], "keys (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.keys"]], "make_contingency_table() (in module opendp.extras.mbi)": [[10, "opendp.extras.mbi.make_contingency_table"]], "make_marginals() (opendp.extras.mbi.aim method)": [[10, "opendp.extras.mbi.AIM.make_marginals"]], "make_marginals() (opendp.extras.mbi.algorithm method)": [[10, "opendp.extras.mbi.Algorithm.make_marginals"]], "make_marginals() (opendp.extras.mbi.fixed method)": [[10, "opendp.extras.mbi.Fixed.make_marginals"]], "make_marginals() (opendp.extras.mbi.mst method)": [[10, "opendp.extras.mbi.MST.make_marginals"]], "make_marginals() (opendp.extras.mbi.sequential method)": [[10, "opendp.extras.mbi.Sequential.make_marginals"]], "marginals (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.marginals"]], "max_size (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.max_size"]], "measure_split (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.measure_split"]], "measure_split (opendp.extras.mbi.mst attribute)": [[10, "opendp.extras.mbi.MST.measure_split"]], "mirror_descent() (in module opendp.extras.mbi)": [[10, "opendp.extras.mbi.mirror_descent"]], "model (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.model"]], "num_selections (opendp.extras.mbi.mst attribute)": [[10, "opendp.extras.mbi.MST.num_selections"]], "oneway (opendp.extras.mbi.algorithm attribute)": [[10, "opendp.extras.mbi.Algorithm.oneway"]], "oneway (opendp.extras.mbi.fixed attribute)": [[10, "opendp.extras.mbi.Fixed.oneway"]], "oneway_split (opendp.extras.mbi.algorithm attribute)": [[10, "opendp.extras.mbi.Algorithm.oneway_split"]], "opendp.extras.mbi": [[10, "module-opendp.extras.mbi"]], "project() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.project"]], "project_melted() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.project_melted"]], "queries (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.queries"]], "queries (opendp.extras.mbi.fixed attribute)": [[10, "opendp.extras.mbi.Fixed.queries"]], "rounds (opendp.extras.mbi.aim attribute)": [[10, "opendp.extras.mbi.AIM.rounds"]], "schema (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.schema"]], "std() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.std"]], "synthesize() (opendp.extras.mbi.contingencytable method)": [[10, "opendp.extras.mbi.ContingencyTable.synthesize"]], "thresholds (opendp.extras.mbi.contingencytable attribute)": [[10, "opendp.extras.mbi.ContingencyTable.thresholds"]], "weight (opendp.extras.mbi.count attribute)": [[10, "opendp.extras.mbi.Count.weight"]], "weights (opendp.extras.mbi.sequential attribute)": [[10, "opendp.extras.mbi.Sequential.weights"]], "nparray2domain (class in opendp.extras.numpy)": [[11, "opendp.extras.numpy.NPArray2Domain"]], "nparrayddomain (class in opendp.extras.numpy)": [[11, "opendp.extras.numpy.NPArrayDDomain"]], "t (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.T"]], "t (opendp.extras.numpy.nparrayddomain attribute)": [[11, "opendp.extras.numpy.NPArrayDDomain.T"]], "array2_domain() (in module opendp.extras.numpy)": [[11, "opendp.extras.numpy.array2_domain"]], "arrayd_domain() (in module opendp.extras.numpy)": [[11, "opendp.extras.numpy.arrayd_domain"]], "cardinalities (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.cardinalities"]], "nan (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.nan"]], "norm (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.norm"]], "num_columns (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.num_columns"]], "opendp.extras.numpy": [[11, "module-opendp.extras.numpy"]], "origin (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.origin"]], "p (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.p"]], "shape (opendp.extras.numpy.nparrayddomain attribute)": [[11, "opendp.extras.numpy.NPArrayDDomain.shape"]], "size (opendp.extras.numpy.nparray2domain attribute)": [[11, "opendp.extras.numpy.NPArray2Domain.size"]], "binomialcnd (class in opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.BinomialCND"]], "confidence_interval() (opendp.extras.numpy.canonical.binomialcnd method)": [[12, "opendp.extras.numpy.canonical.BinomialCND.confidence_interval"]], "one_sided_confidence_interval() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.one_sided_confidence_interval"]], "one_sided_pvalue() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.one_sided_pvalue"]], "one_sided_uniformly_most_powerful_tests() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.one_sided_uniformly_most_powerful_tests"]], "opendp.extras.numpy.canonical": [[12, "module-opendp.extras.numpy.canonical"]], "p_value() (opendp.extras.numpy.canonical.binomialcnd method)": [[12, "opendp.extras.numpy.canonical.BinomialCND.p_value"]], "two_sided_confidence_interval() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.two_sided_confidence_interval"]], "two_sided_pvalue() (in module opendp.extras.numpy.canonical)": [[12, "opendp.extras.numpy.canonical.two_sided_pvalue"]], "bound (class in opendp.extras.polars)": [[13, "opendp.extras.polars.Bound"]], "dpexpr (class in opendp.extras.polars)": [[13, "opendp.extras.polars.DPExpr"]], "lazyframequery (class in opendp.extras.polars)": [[13, "opendp.extras.polars.LazyFrameQuery"]], "lazygroupbyquery (class in opendp.extras.polars)": [[13, "opendp.extras.polars.LazyGroupByQuery"]], "margin (class in opendp.extras.polars)": [[13, "opendp.extras.polars.Margin"]], "onceframe (class in opendp.extras.polars)": [[13, "opendp.extras.polars.OnceFrame"]], "sortby (class in opendp.extras.polars)": [[13, "opendp.extras.polars.SortBy"]], "agg() (opendp.extras.polars.lazygroupbyquery method)": [[13, "opendp.extras.polars.LazyGroupByQuery.agg"]], "by (opendp.extras.polars.bound attribute)": [[13, "opendp.extras.polars.Bound.by"]], "by (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.by"]], "by (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.by"]], "collect() (opendp.extras.polars.onceframe method)": [[13, "opendp.extras.polars.OnceFrame.collect"]], "contingency_table() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.contingency_table"]], "count() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.count"]], "descending (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.descending"]], "dp_len() (in module opendp.extras.polars)": [[13, "opendp.extras.polars.dp_len"]], "filter() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.filter"]], "gaussian() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.gaussian"]], "group_by() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.group_by"]], "invariant (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.invariant"]], "join() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.join"]], "laplace() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.laplace"]], "lazy() (opendp.extras.polars.onceframe method)": [[13, "opendp.extras.polars.OnceFrame.lazy"]], "len() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.len"]], "maintain_order (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.maintain_order"]], "max_groups (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_groups"]], "max_influenced_partitions (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_influenced_partitions"]], "max_length (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_length"]], "max_num_partitions (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_num_partitions"]], "max_partition_contributions (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_partition_contributions"]], "max_partition_length (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.max_partition_length"]], "mean() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.mean"]], "median() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.median"]], "multithreaded (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.multithreaded"]], "n_unique() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.n_unique"]], "noise() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.noise"]], "null_count() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.null_count"]], "nulls_last (opendp.extras.polars.sortby attribute)": [[13, "opendp.extras.polars.SortBy.nulls_last"]], "num_groups (opendp.extras.polars.bound attribute)": [[13, "opendp.extras.polars.Bound.num_groups"]], "opendp.extras.polars": [[13, "module-opendp.extras.polars"]], "per_group (opendp.extras.polars.bound attribute)": [[13, "opendp.extras.polars.Bound.per_group"]], "public_info (opendp.extras.polars.margin attribute)": [[13, "opendp.extras.polars.Margin.public_info"]], "quantile() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.quantile"]], "release() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.release"]], "resolve() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.resolve"]], "select() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.select"]], "select_seq() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.select_seq"]], "sort() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.sort"]], "sum() (opendp.extras.polars.dpexpr method)": [[13, "opendp.extras.polars.DPExpr.sum"]], "summarize() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.summarize"]], "truncate_num_groups() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.truncate_num_groups"]], "truncate_per_group() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.truncate_per_group"]], "with_columns() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.with_columns"]], "with_columns_seq() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.with_columns_seq"]], "with_keys() (opendp.extras.polars.lazyframequery method)": [[13, "opendp.extras.polars.LazyFrameQuery.with_keys"]], "contingencytablequery (class in opendp.extras.polars.contingency_table)": [[14, "opendp.extras.polars.contingency_table.ContingencyTableQuery"]], "opendp.extras.polars.contingency_table": [[14, "module-opendp.extras.polars.contingency_table"]], "release() (opendp.extras.polars.contingency_table.contingencytablequery method)": [[14, "opendp.extras.polars.contingency_table.ContingencyTableQuery.release"]], "opendp.extras.sklearn": [[15, "module-opendp.extras.sklearn"]], "pca (class in opendp.extras.sklearn.decomposition)": [[16, "opendp.extras.sklearn.decomposition.PCA"]], "pcaepsilons (class in opendp.extras.sklearn.decomposition)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons"]], "eigvals (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvals"]], "eigvecs (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons.eigvecs"]], "fit() (opendp.extras.sklearn.decomposition.pca method)": [[16, "opendp.extras.sklearn.decomposition.PCA.fit"]], "make_private_pca() (in module opendp.extras.sklearn.decomposition)": [[16, "opendp.extras.sklearn.decomposition.make_private_pca"]], "mean (opendp.extras.sklearn.decomposition.pcaepsilons attribute)": [[16, "opendp.extras.sklearn.decomposition.PCAEpsilons.mean"]], "measurement() (opendp.extras.sklearn.decomposition.pca method)": [[16, "opendp.extras.sklearn.decomposition.PCA.measurement"]], "n_features (opendp.extras.sklearn.decomposition.pca attribute)": [[16, "opendp.extras.sklearn.decomposition.PCA.n_features"]], "opendp.extras.sklearn.decomposition": [[16, "module-opendp.extras.sklearn.decomposition"]], "linearregression (class in opendp.extras.sklearn.linear_model)": [[17, "opendp.extras.sklearn.linear_model.LinearRegression"]], "fit() (opendp.extras.sklearn.linear_model.linearregression method)": [[17, "opendp.extras.sklearn.linear_model.LinearRegression.fit"]], "opendp.extras.sklearn.linear_model": [[17, "module-opendp.extras.sklearn.linear_model"]], "predict() (opendp.extras.sklearn.linear_model.linearregression method)": [[17, "opendp.extras.sklearn.linear_model.LinearRegression.predict"]], "debias_randomized_response_bitvec() (in module opendp.measurements)": [[18, "opendp.measurements.debias_randomized_response_bitvec"]], "make_alp_queryable() (in module opendp.measurements)": [[18, "opendp.measurements.make_alp_queryable"]], "make_canonical_noise() (in module opendp.measurements)": [[18, "opendp.measurements.make_canonical_noise"]], "make_gaussian() (in module opendp.measurements)": [[18, "opendp.measurements.make_gaussian"]], "make_gaussian_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.make_gaussian_threshold"]], "make_geometric() (in module opendp.measurements)": [[18, "opendp.measurements.make_geometric"]], "make_laplace() (in module opendp.measurements)": [[18, "opendp.measurements.make_laplace"]], "make_laplace_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.make_laplace_threshold"]], "make_noise() (in module opendp.measurements)": [[18, "opendp.measurements.make_noise"]], "make_noise_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.make_noise_threshold"]], "make_noisy_max() (in module opendp.measurements)": [[18, "opendp.measurements.make_noisy_max"]], "make_noisy_top_k() (in module opendp.measurements)": [[18, "opendp.measurements.make_noisy_top_k"]], "make_private_expr() (in module opendp.measurements)": [[18, "opendp.measurements.make_private_expr"]], "make_private_lazyframe() (in module opendp.measurements)": [[18, "opendp.measurements.make_private_lazyframe"]], "make_private_quantile() (in module opendp.measurements)": [[18, "opendp.measurements.make_private_quantile"]], "make_randomized_response() (in module opendp.measurements)": [[18, "opendp.measurements.make_randomized_response"]], "make_randomized_response_bitvec() (in module opendp.measurements)": [[18, "opendp.measurements.make_randomized_response_bitvec"]], "make_randomized_response_bool() (in module opendp.measurements)": [[18, "opendp.measurements.make_randomized_response_bool"]], "make_report_noisy_max_gumbel() (in module opendp.measurements)": [[18, "opendp.measurements.make_report_noisy_max_gumbel"]], "make_user_measurement() (in module opendp.measurements)": [[18, "opendp.measurements.make_user_measurement"]], "opendp.measurements": [[18, "module-opendp.measurements"]], "then_alp_queryable() (in module opendp.measurements)": [[18, "opendp.measurements.then_alp_queryable"]], "then_canonical_noise() (in module opendp.measurements)": [[18, "opendp.measurements.then_canonical_noise"]], "then_gaussian() (in module opendp.measurements)": [[18, "opendp.measurements.then_gaussian"]], "then_gaussian_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.then_gaussian_threshold"]], "then_geometric() (in module opendp.measurements)": [[18, "opendp.measurements.then_geometric"]], "then_laplace() (in module opendp.measurements)": [[18, "opendp.measurements.then_laplace"]], "then_laplace_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.then_laplace_threshold"]], "then_noise() (in module opendp.measurements)": [[18, "opendp.measurements.then_noise"]], "then_noise_threshold() (in module opendp.measurements)": [[18, "opendp.measurements.then_noise_threshold"]], "then_noisy_max() (in module opendp.measurements)": [[18, "opendp.measurements.then_noisy_max"]], "then_noisy_top_k() (in module opendp.measurements)": [[18, "opendp.measurements.then_noisy_top_k"]], "then_private_expr() (in module opendp.measurements)": [[18, "opendp.measurements.then_private_expr"]], "then_private_lazyframe() (in module opendp.measurements)": [[18, "opendp.measurements.then_private_lazyframe"]], "then_private_quantile() (in module opendp.measurements)": [[18, "opendp.measurements.then_private_quantile"]], "then_randomized_response_bitvec() (in module opendp.measurements)": [[18, "opendp.measurements.then_randomized_response_bitvec"]], "then_report_noisy_max_gumbel() (in module opendp.measurements)": [[18, "opendp.measurements.then_report_noisy_max_gumbel"]], "then_user_measurement() (in module opendp.measurements)": [[18, "opendp.measurements.then_user_measurement"]], "approximate() (in module opendp.measures)": [[19, "opendp.measures.approximate"]], "fixed_smoothed_max_divergence() (in module opendp.measures)": [[19, "opendp.measures.fixed_smoothed_max_divergence"]], "max_divergence() (in module opendp.measures)": [[19, "opendp.measures.max_divergence"]], "measure_debug() (in module opendp.measures)": [[19, "opendp.measures.measure_debug"]], "measure_distance_type() (in module opendp.measures)": [[19, "opendp.measures.measure_distance_type"]], "measure_type() (in module opendp.measures)": [[19, "opendp.measures.measure_type"]], "new_privacy_profile() (in module opendp.measures)": [[19, "opendp.measures.new_privacy_profile"]], "opendp.measures": [[19, "module-opendp.measures"]], "renyi_divergence() (in module opendp.measures)": [[19, "opendp.measures.renyi_divergence"]], "smoothed_max_divergence() (in module opendp.measures)": [[19, "opendp.measures.smoothed_max_divergence"]], "user_divergence() (in module opendp.measures)": [[19, "opendp.measures.user_divergence"]], "zero_concentrated_divergence() (in module opendp.measures)": [[19, "opendp.measures.zero_concentrated_divergence"]], "absolute_distance() (in module opendp.metrics)": [[20, "opendp.metrics.absolute_distance"]], "change_one_distance() (in module opendp.metrics)": [[20, "opendp.metrics.change_one_distance"]], "change_one_id_distance() (in module opendp.metrics)": [[20, "opendp.metrics.change_one_id_distance"]], "discrete_distance() (in module opendp.metrics)": [[20, "opendp.metrics.discrete_distance"]], "frame_distance() (in module opendp.metrics)": [[20, "opendp.metrics.frame_distance"]], "hamming_distance() (in module opendp.metrics)": [[20, "opendp.metrics.hamming_distance"]], "insert_delete_distance() (in module opendp.metrics)": [[20, "opendp.metrics.insert_delete_distance"]], "l01inf_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l01inf_distance"]], "l02inf_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l02inf_distance"]], "l1_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l1_distance"]], "l2_distance() (in module opendp.metrics)": [[20, "opendp.metrics.l2_distance"]], "linf_distance() (in module opendp.metrics)": [[20, "opendp.metrics.linf_distance"]], "metric_debug() (in module opendp.metrics)": [[20, "opendp.metrics.metric_debug"]], "metric_distance_type() (in module opendp.metrics)": [[20, "opendp.metrics.metric_distance_type"]], "metric_type() (in module opendp.metrics)": [[20, "opendp.metrics.metric_type"]], "opendp.metrics": [[20, "module-opendp.metrics"]], "symmetric_distance() (in module opendp.metrics)": [[20, "opendp.metrics.symmetric_distance"]], "symmetric_id_distance() (in module opendp.metrics)": [[20, "opendp.metrics.symmetric_id_distance"]], "user_distance() (in module opendp.metrics)": [[20, "opendp.metrics.user_distance"]], "approximatedivergence (class in opendp.mod)": [[21, "opendp.mod.ApproximateDivergence"]], "atomdomain (class in opendp.mod)": [[21, "opendp.mod.AtomDomain"]], "changeoneiddistance (class in opendp.mod)": [[21, "opendp.mod.ChangeOneIdDistance"]], "domain (class in opendp.mod)": [[21, "opendp.mod.Domain"]], "extrinsicdomain (class in opendp.mod)": [[21, "opendp.mod.ExtrinsicDomain"]], "framedistance (class in opendp.mod)": [[21, "opendp.mod.FrameDistance"]], "function (class in opendp.mod)": [[21, "opendp.mod.Function"]], "lazyframedomain (class in opendp.mod)": [[21, "opendp.mod.LazyFrameDomain"]], "measure (class in opendp.mod)": [[21, "opendp.mod.Measure"]], "measurement (class in opendp.mod)": [[21, "opendp.mod.Measurement"]], "metric (class in opendp.mod)": [[21, "opendp.mod.Metric"]], "odometer (class in opendp.mod)": [[21, "opendp.mod.Odometer"]], "odometerqueryable (class in opendp.mod)": [[21, "opendp.mod.OdometerQueryable"]], "opendpexception": [[21, "opendp.mod.OpenDPException"]], "optiondomain (class in opendp.mod)": [[21, "opendp.mod.OptionDomain"]], "privacyprofile (class in opendp.mod)": [[21, "opendp.mod.PrivacyProfile"]], "queryable (class in opendp.mod)": [[21, "opendp.mod.Queryable"]], "seriesdomain (class in opendp.mod)": [[21, "opendp.mod.SeriesDomain"]], "symmetriciddistance (class in opendp.mod)": [[21, "opendp.mod.SymmetricIdDistance"]], "transformation (class in opendp.mod)": [[21, "opendp.mod.Transformation"]], "unknowntypeexception": [[21, "opendp.mod.UnknownTypeException"]], "vectordomain (class in opendp.mod)": [[21, "opendp.mod.VectorDomain"]], "assert_features() (in module opendp.mod)": [[21, "opendp.mod.assert_features"]], "binary_search() (in module opendp.mod)": [[21, "opendp.mod.binary_search"]], "binary_search_chain() (in module opendp.mod)": [[21, "opendp.mod.binary_search_chain"]], "binary_search_param() (in module opendp.mod)": [[21, "opendp.mod.binary_search_param"]], "bounds (opendp.mod.atomdomain attribute)": [[21, "opendp.mod.AtomDomain.bounds"]], "carrier_type (opendp.mod.domain attribute)": [[21, "opendp.mod.Domain.carrier_type"]], "cast() (opendp.mod.domain method)": [[21, "opendp.mod.Domain.cast"]], "cast() (opendp.mod.metric method)": [[21, "opendp.mod.Metric.cast"]], "check() (opendp.mod.measurement method)": [[21, "opendp.mod.Measurement.check"]], "check() (opendp.mod.transformation method)": [[21, "opendp.mod.Transformation.check"]], "columns (opendp.mod.lazyframedomain attribute)": [[21, "opendp.mod.LazyFrameDomain.columns"]], "delta() (opendp.mod.privacyprofile method)": [[21, "opendp.mod.PrivacyProfile.delta"]], "descriptor (opendp.mod.extrinsicdomain attribute)": [[21, "opendp.mod.ExtrinsicDomain.descriptor"]], "deserialize() (in module opendp.mod)": [[21, "opendp.mod.deserialize"]], "disable_features() (in module opendp.mod)": [[21, "opendp.mod.disable_features"]], "distance_type (opendp.mod.measure attribute)": [[21, "opendp.mod.Measure.distance_type"]], "distance_type (opendp.mod.metric attribute)": [[21, "opendp.mod.Metric.distance_type"]], "element_domain (opendp.mod.optiondomain attribute)": [[21, "opendp.mod.OptionDomain.element_domain"]], "element_domain (opendp.mod.seriesdomain attribute)": [[21, "opendp.mod.SeriesDomain.element_domain"]], "element_domain (opendp.mod.vectordomain attribute)": [[21, "opendp.mod.VectorDomain.element_domain"]], "enable_features() (in module opendp.mod)": [[21, "opendp.mod.enable_features"]], "epsilon() (opendp.mod.privacyprofile method)": [[21, "opendp.mod.PrivacyProfile.epsilon"]], "exponential_bounds_search() (in module opendp.mod)": [[21, "opendp.mod.exponential_bounds_search"]], "function (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.function"]], "function (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.function"]], "get_margin() (opendp.mod.lazyframedomain method)": [[21, "opendp.mod.LazyFrameDomain.get_margin"]], "get_series_domain() (opendp.mod.lazyframedomain method)": [[21, "opendp.mod.LazyFrameDomain.get_series_domain"]], "identifier (opendp.mod.changeoneiddistance attribute)": [[21, "opendp.mod.ChangeOneIdDistance.identifier"]], "identifier (opendp.mod.symmetriciddistance attribute)": [[21, "opendp.mod.SymmetricIdDistance.identifier"]], "inner_measure (opendp.mod.approximatedivergence attribute)": [[21, "opendp.mod.ApproximateDivergence.inner_measure"]], "inner_metric (opendp.mod.framedistance attribute)": [[21, "opendp.mod.FrameDistance.inner_metric"]], "input_carrier_type (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_carrier_type"]], "input_carrier_type (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_carrier_type"]], "input_carrier_type (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_carrier_type"]], "input_distance_type (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_distance_type"]], "input_distance_type (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_distance_type"]], "input_distance_type (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_distance_type"]], "input_domain (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_domain"]], "input_domain (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_domain"]], "input_domain (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_domain"]], "input_metric (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_metric"]], "input_metric (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_metric"]], "input_metric (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_metric"]], "input_space (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.input_space"]], "input_space (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.input_space"]], "input_space (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.input_space"]], "invoke() (opendp.mod.measurement method)": [[21, "opendp.mod.Measurement.invoke"]], "invoke() (opendp.mod.odometer method)": [[21, "opendp.mod.Odometer.invoke"]], "invoke() (opendp.mod.odometerqueryable method)": [[21, "opendp.mod.OdometerQueryable.invoke"]], "invoke() (opendp.mod.transformation method)": [[21, "opendp.mod.Transformation.invoke"]], "map() (opendp.mod.measurement method)": [[21, "opendp.mod.Measurement.map"]], "map() (opendp.mod.transformation method)": [[21, "opendp.mod.Transformation.map"]], "member() (opendp.mod.domain method)": [[21, "opendp.mod.Domain.member"]], "name (opendp.mod.seriesdomain attribute)": [[21, "opendp.mod.SeriesDomain.name"]], "nan (opendp.mod.atomdomain attribute)": [[21, "opendp.mod.AtomDomain.nan"]], "nullable (opendp.mod.seriesdomain attribute)": [[21, "opendp.mod.SeriesDomain.nullable"]], "opendp.mod": [[21, "module-opendp.mod"]], "output_distance_type (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.output_distance_type"]], "output_distance_type (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.output_distance_type"]], "output_distance_type (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_distance_type"]], "output_domain (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_domain"]], "output_measure (opendp.mod.measurement attribute)": [[21, "opendp.mod.Measurement.output_measure"]], "output_measure (opendp.mod.odometer attribute)": [[21, "opendp.mod.Odometer.output_measure"]], "output_metric (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_metric"]], "output_space (opendp.mod.transformation attribute)": [[21, "opendp.mod.Transformation.output_space"]], "privacy_loss() (opendp.mod.odometerqueryable method)": [[21, "opendp.mod.OdometerQueryable.privacy_loss"]], "raw_traceback (opendp.mod.opendpexception attribute)": [[21, "opendp.mod.OpenDPException.raw_traceback"]], "serialize() (in module opendp.mod)": [[21, "opendp.mod.serialize"]], "size (opendp.mod.vectordomain attribute)": [[21, "opendp.mod.VectorDomain.size"]], "type (opendp.mod.domain attribute)": [[21, "opendp.mod.Domain.type"]], "type (opendp.mod.measure attribute)": [[21, "opendp.mod.Measure.type"]], "type (opendp.mod.metric attribute)": [[21, "opendp.mod.Metric.type"]], "opendp.prelude": [[22, "module-opendp.prelude"]], "choose_branching_factor() (in module opendp.transformations)": [[23, "opendp.transformations.choose_branching_factor"]], "make_b_ary_tree() (in module opendp.transformations)": [[23, "opendp.transformations.make_b_ary_tree"]], "make_bounded_float_checked_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_float_checked_sum"]], "make_bounded_float_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_float_ordered_sum"]], "make_bounded_int_monotonic_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_int_monotonic_sum"]], "make_bounded_int_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_int_ordered_sum"]], "make_bounded_int_split_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_bounded_int_split_sum"]], "make_cast() (in module opendp.transformations)": [[23, "opendp.transformations.make_cast"]], "make_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.make_cast_default"]], "make_cast_inherent() (in module opendp.transformations)": [[23, "opendp.transformations.make_cast_inherent"]], "make_cdf() (in module opendp.transformations)": [[23, "opendp.transformations.make_cdf"]], "make_clamp() (in module opendp.transformations)": [[23, "opendp.transformations.make_clamp"]], "make_consistent_b_ary_tree() (in module opendp.transformations)": [[23, "opendp.transformations.make_consistent_b_ary_tree"]], "make_count() (in module opendp.transformations)": [[23, "opendp.transformations.make_count"]], "make_count_by() (in module opendp.transformations)": [[23, "opendp.transformations.make_count_by"]], "make_count_by_categories() (in module opendp.transformations)": [[23, "opendp.transformations.make_count_by_categories"]], "make_count_distinct() (in module opendp.transformations)": [[23, "opendp.transformations.make_count_distinct"]], "make_create_dataframe() (in module opendp.transformations)": [[23, "opendp.transformations.make_create_dataframe"]], "make_df_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.make_df_cast_default"]], "make_df_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.make_df_is_equal"]], "make_drop_null() (in module opendp.transformations)": [[23, "opendp.transformations.make_drop_null"]], "make_find() (in module opendp.transformations)": [[23, "opendp.transformations.make_find"]], "make_find_bin() (in module opendp.transformations)": [[23, "opendp.transformations.make_find_bin"]], "make_identity() (in module opendp.transformations)": [[23, "opendp.transformations.make_identity"]], "make_impute_constant() (in module opendp.transformations)": [[23, "opendp.transformations.make_impute_constant"]], "make_impute_uniform_float() (in module opendp.transformations)": [[23, "opendp.transformations.make_impute_uniform_float"]], "make_index() (in module opendp.transformations)": [[23, "opendp.transformations.make_index"]], "make_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.make_is_equal"]], "make_is_null() (in module opendp.transformations)": [[23, "opendp.transformations.make_is_null"]], "make_lipschitz_float_mul() (in module opendp.transformations)": [[23, "opendp.transformations.make_lipschitz_float_mul"]], "make_mean() (in module opendp.transformations)": [[23, "opendp.transformations.make_mean"]], "make_metric_bounded() (in module opendp.transformations)": [[23, "opendp.transformations.make_metric_bounded"]], "make_metric_unbounded() (in module opendp.transformations)": [[23, "opendp.transformations.make_metric_unbounded"]], "make_ordered_random() (in module opendp.transformations)": [[23, "opendp.transformations.make_ordered_random"]], "make_quantile_score_candidates() (in module opendp.transformations)": [[23, "opendp.transformations.make_quantile_score_candidates"]], "make_quantiles_from_counts() (in module opendp.transformations)": [[23, "opendp.transformations.make_quantiles_from_counts"]], "make_resize() (in module opendp.transformations)": [[23, "opendp.transformations.make_resize"]], "make_select_column() (in module opendp.transformations)": [[23, "opendp.transformations.make_select_column"]], "make_sized_bounded_float_checked_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_float_checked_sum"]], "make_sized_bounded_float_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_float_ordered_sum"]], "make_sized_bounded_int_checked_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_checked_sum"]], "make_sized_bounded_int_monotonic_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_monotonic_sum"]], "make_sized_bounded_int_ordered_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_ordered_sum"]], "make_sized_bounded_int_split_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sized_bounded_int_split_sum"]], "make_split_dataframe() (in module opendp.transformations)": [[23, "opendp.transformations.make_split_dataframe"]], "make_split_lines() (in module opendp.transformations)": [[23, "opendp.transformations.make_split_lines"]], "make_split_records() (in module opendp.transformations)": [[23, "opendp.transformations.make_split_records"]], "make_stable_expr() (in module opendp.transformations)": [[23, "opendp.transformations.make_stable_expr"]], "make_stable_lazyframe() (in module opendp.transformations)": [[23, "opendp.transformations.make_stable_lazyframe"]], "make_subset_by() (in module opendp.transformations)": [[23, "opendp.transformations.make_subset_by"]], "make_sum() (in module opendp.transformations)": [[23, "opendp.transformations.make_sum"]], "make_sum_of_squared_deviations() (in module opendp.transformations)": [[23, "opendp.transformations.make_sum_of_squared_deviations"]], "make_unordered() (in module opendp.transformations)": [[23, "opendp.transformations.make_unordered"]], "make_user_transformation() (in module opendp.transformations)": [[23, "opendp.transformations.make_user_transformation"]], "make_variance() (in module opendp.transformations)": [[23, "opendp.transformations.make_variance"]], "opendp.transformations": [[23, "module-opendp.transformations"]], "then_b_ary_tree() (in module opendp.transformations)": [[23, "opendp.transformations.then_b_ary_tree"]], "then_cast() (in module opendp.transformations)": [[23, "opendp.transformations.then_cast"]], "then_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.then_cast_default"]], "then_cast_inherent() (in module opendp.transformations)": [[23, "opendp.transformations.then_cast_inherent"]], "then_clamp() (in module opendp.transformations)": [[23, "opendp.transformations.then_clamp"]], "then_count() (in module opendp.transformations)": [[23, "opendp.transformations.then_count"]], "then_count_by() (in module opendp.transformations)": [[23, "opendp.transformations.then_count_by"]], "then_count_by_categories() (in module opendp.transformations)": [[23, "opendp.transformations.then_count_by_categories"]], "then_count_distinct() (in module opendp.transformations)": [[23, "opendp.transformations.then_count_distinct"]], "then_df_cast_default() (in module opendp.transformations)": [[23, "opendp.transformations.then_df_cast_default"]], "then_df_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.then_df_is_equal"]], "then_drop_null() (in module opendp.transformations)": [[23, "opendp.transformations.then_drop_null"]], "then_find() (in module opendp.transformations)": [[23, "opendp.transformations.then_find"]], "then_find_bin() (in module opendp.transformations)": [[23, "opendp.transformations.then_find_bin"]], "then_identity() (in module opendp.transformations)": [[23, "opendp.transformations.then_identity"]], "then_impute_constant() (in module opendp.transformations)": [[23, "opendp.transformations.then_impute_constant"]], "then_impute_uniform_float() (in module opendp.transformations)": [[23, "opendp.transformations.then_impute_uniform_float"]], "then_index() (in module opendp.transformations)": [[23, "opendp.transformations.then_index"]], "then_is_equal() (in module opendp.transformations)": [[23, "opendp.transformations.then_is_equal"]], "then_is_null() (in module opendp.transformations)": [[23, "opendp.transformations.then_is_null"]], "then_lipschitz_float_mul() (in module opendp.transformations)": [[23, "opendp.transformations.then_lipschitz_float_mul"]], "then_mean() (in module opendp.transformations)": [[23, "opendp.transformations.then_mean"]], "then_metric_bounded() (in module opendp.transformations)": [[23, "opendp.transformations.then_metric_bounded"]], "then_metric_unbounded() (in module opendp.transformations)": [[23, "opendp.transformations.then_metric_unbounded"]], "then_ordered_random() (in module opendp.transformations)": [[23, "opendp.transformations.then_ordered_random"]], "then_quantile_score_candidates() (in module opendp.transformations)": [[23, "opendp.transformations.then_quantile_score_candidates"]], "then_resize() (in module opendp.transformations)": [[23, "opendp.transformations.then_resize"]], "then_stable_expr() (in module opendp.transformations)": [[23, "opendp.transformations.then_stable_expr"]], "then_stable_lazyframe() (in module opendp.transformations)": [[23, "opendp.transformations.then_stable_lazyframe"]], "then_sum() (in module opendp.transformations)": [[23, "opendp.transformations.then_sum"]], "then_sum_of_squared_deviations() (in module opendp.transformations)": [[23, "opendp.transformations.then_sum_of_squared_deviations"]], "then_unordered() (in module opendp.transformations)": [[23, "opendp.transformations.then_unordered"]], "then_variance() (in module opendp.transformations)": [[23, "opendp.transformations.then_variance"]], "carrier (class in opendp.typing)": [[24, "opendp.typing.Carrier"]], "runtimetype (class in opendp.typing)": [[24, "opendp.typing.RuntimeType"]], "sensitivitymetric (class in opendp.typing)": [[24, "opendp.typing.SensitivityMetric"]], "args (opendp.typing.runtimetype attribute)": [[24, "opendp.typing.RuntimeType.args"]], "get_atom() (in module opendp.typing)": [[24, "opendp.typing.get_atom"]], "get_atom_or_infer() (in module opendp.typing)": [[24, "opendp.typing.get_atom_or_infer"]], "get_carrier_type() (in module opendp.typing)": [[24, "opendp.typing.get_carrier_type"]], "get_distance_type() (in module opendp.typing)": [[24, "opendp.typing.get_distance_type"]], "get_first() (in module opendp.typing)": [[24, "opendp.typing.get_first"]], "get_type() (in module opendp.typing)": [[24, "opendp.typing.get_type"]], "get_value_type() (in module opendp.typing)": [[24, "opendp.typing.get_value_type"]], "infer() (opendp.typing.runtimetype class method)": [[24, "opendp.typing.RuntimeType.infer"]], "opendp.typing": [[24, "module-opendp.typing"]], "origin (opendp.typing.runtimetype attribute)": [[24, "opendp.typing.RuntimeType.origin"]], "parse() (opendp.typing.runtimetype class method)": [[24, "opendp.typing.RuntimeType.parse"]], "parse_or_infer() (in module opendp.typing)": [[24, "opendp.typing.parse_or_infer"]], "parse_or_infer() (opendp.typing.runtimetype class method)": [[24, "opendp.typing.RuntimeType.parse_or_infer"]], "pass_through() (in module opendp.typing)": [[24, "opendp.typing.pass_through"]], "set_default_float_type() (in module opendp.typing)": [[24, "opendp.typing.set_default_float_type"]], "set_default_int_type() (in module opendp.typing)": [[24, "opendp.typing.set_default_int_type"]]}})
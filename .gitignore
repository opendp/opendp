# 2/6/2020 - Initial version contains the GitHub .gitignore files for both Python and Rust


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so
*.o 

# Distribution / packaging
.Python
/python/build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a Python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

##
# Rust .gitignore
##
# Generated by Cargo
# will have compiled files and executables
debug/
target/
vendor/
binary/

# Auto-generated files
rust/opendp.h
R/opendp/R/accuracy.R
R/opendp/R/combinators.R
R/opendp/R/core.R
R/opendp/R/data.R
R/opendp/R/domains.R
R/opendp/R/measurements.R
R/opendp/R/measures.R
R/opendp/R/metrics.R
R/opendp/R/transformations.R
R/opendp/src/Ropendp.h
R/opendp/src/accuracy.c
R/opendp/src/combinators.c
R/opendp/src/core.c
R/opendp/src/data.c
R/opendp/src/domains.c
R/opendp/src/lib.c
R/opendp/src/measurements.c
R/opendp/src/measures.c
R/opendp/src/metrics.c
R/opendp/src/transformations.c
python/src/opendp/_data.py
python/src/opendp/accuracy.py
python/src/opendp/combinators.py
python/src/opendp/core.py
python/src/opendp/domains.py
python/src/opendp/measurements.py
python/src/opendp/measures.py
python/src/opendp/metrics.py
python/src/opendp/transformations.py

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# IDE projects
.idea
.vscode

.DS_Store

# python/src/opendp/_data.py
# python/src/opendp/accuracy.py
# python/src/opendp/combinators.py
# python/src/opendp/core.py
# python/src/opendp/measurements.py
# python/src/opendp/transformations.py

/data_censored/

/python/docs/
/python/docs_temp/
/python/opendp

sample_FR_LFS.csv
__MACOSX/
out/

/python/src/opendp/rust/

# R miscellanea
R/opendp/man
.Rhistory
.Rproj/
.Rproj.user/
*.tar.gz
*.zip
opendp.Rcheck
..Rcheck
*.rds
.RData
LICENSE.note
AUTHORS
Makevars
binary.tar.xz
vendor.tar.xz
source.tar.xz
R/opendp/src/.cargo
NEWS.md
R/opendp/docs
R/opendp-docs

# LaTeX cache, temp, and output files
*.aux
*.log
*.out
*.synctex.gz
*.pdf
!docs/cla/*.pdf
!docs/source/_static/opendp-cla-*.pdf
*.aux
*.bbl
*.bcf
*.blg
*.run.xml
*.toc

name: Smoke Test

on:
  push:
    branches:
      - main
      - release/*
  pull_request:

jobs:
  rust-build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust/*/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose --features=untrusted

      - name: Test
        run: cargo test --verbose

      - name: Upload libs
        uses: actions/upload-artifact@v2
        with:
          name: libs
          path: rust/target/debug/libopendp_ffi.so


  python-test:
    needs: rust-build-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('python/setup.cfg') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Prepare for libs
        run: mkdir -p src/opendp/v1/lib

      - name: Download libs
        uses: actions/download-artifact@v2
        with:
          name: libs
          path: python/src/opendp/lib

      - name: Install package
        run: python -m pip install -e .

      - name: Test
        run: pytest -v

      - name: Test docs
        run: |
          cd ../docs
          python -m pip install -r requirements.txt
          make doctest-python

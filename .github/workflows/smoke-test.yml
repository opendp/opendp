name: Smoke Test

on: [push, pull_request]

jobs:
  rust-build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#      - name: Cache Rust dependencies
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            rust/target
#          key: ${{ runner.os }}-cargo-${{ hashFiles('rust/*/Cargo.toml') }}
#          restore-keys: ${{ runner.os }}-cargo-
#
#      - name: Build
#        run: cargo build --verbose
#
#      - name: Test
#        run: cargo test --verbose
#
#      - name: Upload libs
#        uses: actions/upload-artifact@v2
#        with:
#          name: libs
#          path: rust/target/debug/libopendp_ffi.so

  python-test:
    needs: rust-build-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    strategy:
      matrix:
        python-version: [3.6]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Get pip cache dir
#        id: pip-cache
#        run: echo "::set-output name=dir::$(pip cache dir)"
#
#      - name: Cache pip dependencies
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.pip-cache.outputs.dir }}
#          key: ${{ runner.os }}-pip-${{ hashFiles('python/setup.cfg') }}
#          restore-keys: ${{ runner.os }}-pip-
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install flake8 pytest
#
#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#
#      - name: Prepare for libs
#        run: mkdir -p src/opendp/v1/lib
#
#      - name: Download libs
#        uses: actions/download-artifact@v2
#        with:
#          name: libs
#          path: python/src/opendp/v1/lib
#
#      - name: Install package
#        run: python -m pip install -e .
#
#      - name: Test
#        run: pytest -v

#  rust-build-and-test-windows:
#    needs: python-test
#    runs-on: windows-2016
#    defaults:
#      run:

  python-publish:
    needs: python-test
    runs-on: macos-10.15
    env:
      DOCKER_IMAGE: quay.io/pypa/manylinux2010_x86_64
      TWINE_USERNAME: ${{ secrets.PYPI_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Build manylinux binaries
        run: |
          chmod +x .github/build_manylinux_binaries.sh
          docker run --rm -v `pwd`:/io $DOCKER_IMAGE /io/.github/build_manylinux_binaries.sh
          cp rust/target/release/libopendp_ffi.so tmp_binaries

      - name: Build mac binaries
        run: |
          cargo +stable build --verbose --release --manifest-path=rust/Cargo.toml

      - name: Build bdist
      - run: |
          cp python/tmp_binaries/libopendp_ffi.so python/opendp/v1/lib/
          cp rust/target/release/libopendp_ffi.dylib python/opendp/v1/lib/
          python3 python/setup.py bdist_wheel -d python/wheelhouse

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: PyPi OpenDP upload
        run: |
          python3 -m twine upload --repository testpypi --verbose --skip-existing wheelhouse/*

  rust-publish:
    needs: rust-build-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Publish Cargo OpenDP
        run: cargo publish --manifest-path=opendp/Cargo.toml --dry-run

      - name: Publish Cargo OpenDP-FFI
        run: cargo publish --manifest-path=opendp-ffi/Cargo.toml --dry-run
